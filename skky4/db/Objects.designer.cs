#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18051
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace skky.db
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="skky")]
	public partial class ObjectsDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertAirlineEmission(AirlineEmission instance);
    partial void UpdateAirlineEmission(AirlineEmission instance);
    partial void DeleteAirlineEmission(AirlineEmission instance);
    partial void InsertX(X instance);
    partial void UpdateX(X instance);
    partial void DeleteX(X instance);
    partial void InsertConfig(Config instance);
    partial void UpdateConfig(Config instance);
    partial void DeleteConfig(Config instance);
    partial void InsertConversion(Conversion instance);
    partial void UpdateConversion(Conversion instance);
    partial void DeleteConversion(Conversion instance);
    partial void InsertCustomerUser(CustomerUser instance);
    partial void UpdateCustomerUser(CustomerUser instance);
    partial void DeleteCustomerUser(CustomerUser instance);
    partial void InsertEquipment(Equipment instance);
    partial void UpdateEquipment(Equipment instance);
    partial void DeleteEquipment(Equipment instance);
    partial void InsertEquipmentConversion(EquipmentConversion instance);
    partial void UpdateEquipmentConversion(EquipmentConversion instance);
    partial void DeleteEquipmentConversion(EquipmentConversion instance);
    partial void InsertEquipmentType(EquipmentType instance);
    partial void UpdateEquipmentType(EquipmentType instance);
    partial void DeleteEquipmentType(EquipmentType instance);
    partial void InsertEventLogin(EventLogin instance);
    partial void UpdateEventLogin(EventLogin instance);
    partial void DeleteEventLogin(EventLogin instance);
    partial void InsertFltSegment(FltSegment instance);
    partial void UpdateFltSegment(FltSegment instance);
    partial void DeleteFltSegment(FltSegment instance);
    partial void InsertGroup(Group instance);
    partial void UpdateGroup(Group instance);
    partial void DeleteGroup(Group instance);
    partial void InsertHotelEmission(HotelEmission instance);
    partial void UpdateHotelEmission(HotelEmission instance);
    partial void DeleteHotelEmission(HotelEmission instance);
    partial void InsertHtlSegment(HtlSegment instance);
    partial void UpdateHtlSegment(HtlSegment instance);
    partial void DeleteHtlSegment(HtlSegment instance);
    partial void InsertInfoEmitter(InfoEmitter instance);
    partial void UpdateInfoEmitter(InfoEmitter instance);
    partial void DeleteInfoEmitter(InfoEmitter instance);
    partial void InsertItem(Item instance);
    partial void UpdateItem(Item instance);
    partial void DeleteItem(Item instance);
    partial void InsertItemType(ItemType instance);
    partial void UpdateItemType(ItemType instance);
    partial void DeleteItemType(ItemType instance);
    partial void InsertMarkerLocation(MarkerLocation instance);
    partial void UpdateMarkerLocation(MarkerLocation instance);
    partial void DeleteMarkerLocation(MarkerLocation instance);
    partial void InsertPnr(Pnr instance);
    partial void UpdatePnr(Pnr instance);
    partial void DeletePnr(Pnr instance);
    partial void InsertSegment(Segment instance);
    partial void UpdateSegment(Segment instance);
    partial void DeleteSegment(Segment instance);
    partial void InsertSegmentEmission(SegmentEmission instance);
    partial void UpdateSegmentEmission(SegmentEmission instance);
    partial void DeleteSegmentEmission(SegmentEmission instance);
    partial void InsertUserGroup(UserGroup instance);
    partial void UpdateUserGroup(UserGroup instance);
    partial void DeleteUserGroup(UserGroup instance);
    partial void InsertVendor(Vendor instance);
    partial void UpdateVendor(Vendor instance);
    partial void DeleteVendor(Vendor instance);
    partial void InsertVendorModel(VendorModel instance);
    partial void UpdateVendorModel(VendorModel instance);
    partial void DeleteVendorModel(VendorModel instance);
    partial void InsertCity(City instance);
    partial void UpdateCity(City instance);
    partial void DeleteCity(City instance);
    partial void InsertAccount(Account instance);
    partial void UpdateAccount(Account instance);
    partial void DeleteAccount(Account instance);
    partial void InsertDepartment(Department instance);
    partial void UpdateDepartment(Department instance);
    partial void DeleteDepartment(Department instance);
    partial void InsertPassenger(Passenger instance);
    partial void UpdatePassenger(Passenger instance);
    partial void DeletePassenger(Passenger instance);
    partial void InsertCustomer(Customer instance);
    partial void UpdateCustomer(Customer instance);
    partial void DeleteCustomer(Customer instance);
    partial void InsertClient(Client instance);
    partial void UpdateClient(Client instance);
    partial void DeleteClient(Client instance);
    partial void InsertInfoAirline(InfoAirline instance);
    partial void UpdateInfoAirline(InfoAirline instance);
    partial void DeleteInfoAirline(InfoAirline instance);
    partial void InsertFbUser(FbUser instance);
    partial void UpdateFbUser(FbUser instance);
    partial void DeleteFbUser(FbUser instance);
    partial void InsertFbInvite(FbInvite instance);
    partial void UpdateFbInvite(FbInvite instance);
    partial void DeleteFbInvite(FbInvite instance);
    partial void InsertFbUserLog(FbUserLog instance);
    partial void UpdateFbUserLog(FbUserLog instance);
    partial void DeleteFbUserLog(FbUserLog instance);
    partial void InsertFbInviteLog(FbInviteLog instance);
    partial void UpdateFbInviteLog(FbInviteLog instance);
    partial void DeleteFbInviteLog(FbInviteLog instance);
    partial void InsertEcCar(EcCar instance);
    partial void UpdateEcCar(EcCar instance);
    partial void DeleteEcCar(EcCar instance);
    partial void InsertEcGeneral(EcGeneral instance);
    partial void UpdateEcGeneral(EcGeneral instance);
    partial void DeleteEcGeneral(EcGeneral instance);
    partial void InsertEcHome(EcHome instance);
    partial void UpdateEcHome(EcHome instance);
    partial void DeleteEcHome(EcHome instance);
    partial void InsertMeasureInfoConversion(MeasureInfoConversion instance);
    partial void UpdateMeasureInfoConversion(MeasureInfoConversion instance);
    partial void DeleteMeasureInfoConversion(MeasureInfoConversion instance);
    partial void InsertFbUserSetting(FbUserSetting instance);
    partial void UpdateFbUserSetting(FbUserSetting instance);
    partial void DeleteFbUserSetting(FbUserSetting instance);
    partial void InsertFbUserSettingLog(FbUserSettingLog instance);
    partial void UpdateFbUserSettingLog(FbUserSettingLog instance);
    partial void DeleteFbUserSettingLog(FbUserSettingLog instance);
    partial void InsertNamerItem(NamerItem instance);
    partial void UpdateNamerItem(NamerItem instance);
    partial void DeleteNamerItem(NamerItem instance);
    partial void InsertMeasureInfo(MeasureInfo instance);
    partial void UpdateMeasureInfo(MeasureInfo instance);
    partial void DeleteMeasureInfo(MeasureInfo instance);
    partial void InsertItemMeasureInfo(ItemMeasureInfo instance);
    partial void UpdateItemMeasureInfo(ItemMeasureInfo instance);
    partial void DeleteItemMeasureInfo(ItemMeasureInfo instance);
    partial void InsertHotelCommission(HotelCommission instance);
    partial void UpdateHotelCommission(HotelCommission instance);
    partial void DeleteHotelCommission(HotelCommission instance);
    partial void InsertHotelGeoLookupByProp(HotelGeoLookupByProp instance);
    partial void UpdateHotelGeoLookupByProp(HotelGeoLookupByProp instance);
    partial void DeleteHotelGeoLookupByProp(HotelGeoLookupByProp instance);
    partial void InsertSysErr(SysErr instance);
    partial void UpdateSysErr(SysErr instance);
    partial void DeleteSysErr(SysErr instance);
    partial void InsertUserMarkerLocation(UserMarkerLocation instance);
    partial void UpdateUserMarkerLocation(UserMarkerLocation instance);
    partial void DeleteUserMarkerLocation(UserMarkerLocation instance);
    partial void InsertUserRoute(UserRoute instance);
    partial void UpdateUserRoute(UserRoute instance);
    partial void DeleteUserRoute(UserRoute instance);
    partial void InsertUser(User instance);
    partial void UpdateUser(User instance);
    partial void DeleteUser(User instance);
    partial void InsertWebLog(WebLog instance);
    partial void UpdateWebLog(WebLog instance);
    partial void DeleteWebLog(WebLog instance);
    partial void InsertFileUpload(FileUpload instance);
    partial void UpdateFileUpload(FileUpload instance);
    partial void DeleteFileUpload(FileUpload instance);
    partial void InsertNameValue(NameValue instance);
    partial void UpdateNameValue(NameValue instance);
    partial void DeleteNameValue(NameValue instance);
    partial void InsertHotelGeo(HotelGeo instance);
    partial void UpdateHotelGeo(HotelGeo instance);
    partial void DeleteHotelGeo(HotelGeo instance);
    partial void InsertXMLHttp(XMLHttp instance);
    partial void UpdateXMLHttp(XMLHttp instance);
    partial void DeleteXMLHttp(XMLHttp instance);
    partial void InsertWebRequest(WebRequest instance);
    partial void UpdateWebRequest(WebRequest instance);
    partial void DeleteWebRequest(WebRequest instance);
    #endregion
		
		public ObjectsDataContext() : 
				base(global::skky.Properties.Settings.Default.skkyConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public ObjectsDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ObjectsDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ObjectsDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ObjectsDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<AirlineEmission> AirlineEmissions
		{
			get
			{
				return this.GetTable<AirlineEmission>();
			}
		}
		
		public System.Data.Linq.Table<X> Xes
		{
			get
			{
				return this.GetTable<X>();
			}
		}
		
		public System.Data.Linq.Table<Config> Configs
		{
			get
			{
				return this.GetTable<Config>();
			}
		}
		
		public System.Data.Linq.Table<Conversion> Conversions
		{
			get
			{
				return this.GetTable<Conversion>();
			}
		}
		
		public System.Data.Linq.Table<CustomerUser> CustomerUsers
		{
			get
			{
				return this.GetTable<CustomerUser>();
			}
		}
		
		public System.Data.Linq.Table<Equipment> Equipments
		{
			get
			{
				return this.GetTable<Equipment>();
			}
		}
		
		public System.Data.Linq.Table<EquipmentConversion> EquipmentConversions
		{
			get
			{
				return this.GetTable<EquipmentConversion>();
			}
		}
		
		public System.Data.Linq.Table<EquipmentType> EquipmentTypes
		{
			get
			{
				return this.GetTable<EquipmentType>();
			}
		}
		
		public System.Data.Linq.Table<EventLogin> EventLogins
		{
			get
			{
				return this.GetTable<EventLogin>();
			}
		}
		
		public System.Data.Linq.Table<FltSegment> FltSegments
		{
			get
			{
				return this.GetTable<FltSegment>();
			}
		}
		
		public System.Data.Linq.Table<Group> Groups
		{
			get
			{
				return this.GetTable<Group>();
			}
		}
		
		public System.Data.Linq.Table<HotelEmission> HotelEmissions
		{
			get
			{
				return this.GetTable<HotelEmission>();
			}
		}
		
		public System.Data.Linq.Table<HtlSegment> HtlSegments
		{
			get
			{
				return this.GetTable<HtlSegment>();
			}
		}
		
		public System.Data.Linq.Table<InfoEmitter> InfoEmitters
		{
			get
			{
				return this.GetTable<InfoEmitter>();
			}
		}
		
		public System.Data.Linq.Table<Item> Items
		{
			get
			{
				return this.GetTable<Item>();
			}
		}
		
		public System.Data.Linq.Table<ItemType> ItemTypes
		{
			get
			{
				return this.GetTable<ItemType>();
			}
		}
		
		public System.Data.Linq.Table<MarkerLocation> MarkerLocations
		{
			get
			{
				return this.GetTable<MarkerLocation>();
			}
		}
		
		public System.Data.Linq.Table<Pnr> Pnrs
		{
			get
			{
				return this.GetTable<Pnr>();
			}
		}
		
		public System.Data.Linq.Table<Segment> Segments
		{
			get
			{
				return this.GetTable<Segment>();
			}
		}
		
		public System.Data.Linq.Table<SegmentEmission> SegmentEmissions
		{
			get
			{
				return this.GetTable<SegmentEmission>();
			}
		}
		
		public System.Data.Linq.Table<UserGroup> UserGroups
		{
			get
			{
				return this.GetTable<UserGroup>();
			}
		}
		
		public System.Data.Linq.Table<Vendor> Vendors
		{
			get
			{
				return this.GetTable<Vendor>();
			}
		}
		
		public System.Data.Linq.Table<VendorModel> VendorModels
		{
			get
			{
				return this.GetTable<VendorModel>();
			}
		}
		
		public System.Data.Linq.Table<City> Cities
		{
			get
			{
				return this.GetTable<City>();
			}
		}
		
		public System.Data.Linq.Table<Account> Accounts
		{
			get
			{
				return this.GetTable<Account>();
			}
		}
		
		public System.Data.Linq.Table<Department> Departments
		{
			get
			{
				return this.GetTable<Department>();
			}
		}
		
		public System.Data.Linq.Table<TotalHotelEmission> TotalHotelEmissions
		{
			get
			{
				return this.GetTable<TotalHotelEmission>();
			}
		}
		
		public System.Data.Linq.Table<TotalTravelEmission> TotalTravelEmissions
		{
			get
			{
				return this.GetTable<TotalTravelEmission>();
			}
		}
		
		public System.Data.Linq.Table<Passenger> Passengers
		{
			get
			{
				return this.GetTable<Passenger>();
			}
		}
		
		public System.Data.Linq.Table<Customer> Customers
		{
			get
			{
				return this.GetTable<Customer>();
			}
		}
		
		public System.Data.Linq.Table<Client> Clients
		{
			get
			{
				return this.GetTable<Client>();
			}
		}
		
		public System.Data.Linq.Table<TotalFlightEmission> TotalFlightEmissions
		{
			get
			{
				return this.GetTable<TotalFlightEmission>();
			}
		}
		
		public System.Data.Linq.Table<InfoAirline> InfoAirlines
		{
			get
			{
				return this.GetTable<InfoAirline>();
			}
		}
		
		public System.Data.Linq.Table<FbUser> FbUsers
		{
			get
			{
				return this.GetTable<FbUser>();
			}
		}
		
		public System.Data.Linq.Table<FbInvite> FbInvites
		{
			get
			{
				return this.GetTable<FbInvite>();
			}
		}
		
		public System.Data.Linq.Table<FbUserLog> FbUserLogs
		{
			get
			{
				return this.GetTable<FbUserLog>();
			}
		}
		
		public System.Data.Linq.Table<FbInviteLog> FbInviteLogs
		{
			get
			{
				return this.GetTable<FbInviteLog>();
			}
		}
		
		public System.Data.Linq.Table<EcCar> EcCars
		{
			get
			{
				return this.GetTable<EcCar>();
			}
		}
		
		public System.Data.Linq.Table<EcGeneral> EcGenerals
		{
			get
			{
				return this.GetTable<EcGeneral>();
			}
		}
		
		public System.Data.Linq.Table<EcHome> EcHomes
		{
			get
			{
				return this.GetTable<EcHome>();
			}
		}
		
		public System.Data.Linq.Table<MeasureInfoConversion> MeasureInfoConversions
		{
			get
			{
				return this.GetTable<MeasureInfoConversion>();
			}
		}
		
		public System.Data.Linq.Table<FbUserSetting> FbUserSettings
		{
			get
			{
				return this.GetTable<FbUserSetting>();
			}
		}
		
		public System.Data.Linq.Table<FbUserSettingLog> FbUserSettingLogs
		{
			get
			{
				return this.GetTable<FbUserSettingLog>();
			}
		}
		
		public System.Data.Linq.Table<NamerItem> NamerItems
		{
			get
			{
				return this.GetTable<NamerItem>();
			}
		}
		
		public System.Data.Linq.Table<MeasureInfo> MeasureInfos
		{
			get
			{
				return this.GetTable<MeasureInfo>();
			}
		}
		
		public System.Data.Linq.Table<ItemMeasureInfo> ItemMeasureInfos
		{
			get
			{
				return this.GetTable<ItemMeasureInfo>();
			}
		}
		
		public System.Data.Linq.Table<HotelCommission> HotelCommissions
		{
			get
			{
				return this.GetTable<HotelCommission>();
			}
		}
		
		public System.Data.Linq.Table<HotelGeoLookupByProp> HotelGeoLookupByProps
		{
			get
			{
				return this.GetTable<HotelGeoLookupByProp>();
			}
		}
		
		public System.Data.Linq.Table<SysErr> SysErrs
		{
			get
			{
				return this.GetTable<SysErr>();
			}
		}
		
		public System.Data.Linq.Table<UserMarkerLocation> UserMarkerLocations
		{
			get
			{
				return this.GetTable<UserMarkerLocation>();
			}
		}
		
		public System.Data.Linq.Table<UserRoute> UserRoutes
		{
			get
			{
				return this.GetTable<UserRoute>();
			}
		}
		
		public System.Data.Linq.Table<User> Users
		{
			get
			{
				return this.GetTable<User>();
			}
		}
		
		public System.Data.Linq.Table<WebLog> WebLogs
		{
			get
			{
				return this.GetTable<WebLog>();
			}
		}
		
		public System.Data.Linq.Table<FileUpload> FileUploads
		{
			get
			{
				return this.GetTable<FileUpload>();
			}
		}
		
		public System.Data.Linq.Table<NameValue> NameValues
		{
			get
			{
				return this.GetTable<NameValue>();
			}
		}
		
		public System.Data.Linq.Table<HotelGeo> HotelGeos
		{
			get
			{
				return this.GetTable<HotelGeo>();
			}
		}
		
		public System.Data.Linq.Table<XMLHttp> XMLHttps
		{
			get
			{
				return this.GetTable<XMLHttp>();
			}
		}
		
		public System.Data.Linq.Table<WebRequest> WebRequests
		{
			get
			{
				return this.GetTable<WebRequest>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetSegmentDays", IsComposable=true)]
		public IQueryable<GetSegmentDaysResult> GetSegmentDays()
		{
			return this.CreateMethodCallQuery<GetSegmentDaysResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AirlineEmission")]
	public partial class AirlineEmission : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _AircraftModel;
		
		private double _CO2permile;
		
		private double _CH4permile;
		
		private double _NOxpermile;
		
		private double _H2Opermile;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnAircraftModelChanging(string value);
    partial void OnAircraftModelChanged();
    partial void OnCO2permileChanging(double value);
    partial void OnCO2permileChanged();
    partial void OnCH4permileChanging(double value);
    partial void OnCH4permileChanged();
    partial void OnNOxpermileChanging(double value);
    partial void OnNOxpermileChanged();
    partial void OnH2OpermileChanging(double value);
    partial void OnH2OpermileChanged();
    #endregion
		
		public AirlineEmission()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AircraftModel", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string AircraftModel
		{
			get
			{
				return this._AircraftModel;
			}
			set
			{
				if ((this._AircraftModel != value))
				{
					this.OnAircraftModelChanging(value);
					this.SendPropertyChanging();
					this._AircraftModel = value;
					this.SendPropertyChanged("AircraftModel");
					this.OnAircraftModelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CO2permile", DbType="Float NOT NULL")]
		public double CO2permile
		{
			get
			{
				return this._CO2permile;
			}
			set
			{
				if ((this._CO2permile != value))
				{
					this.OnCO2permileChanging(value);
					this.SendPropertyChanging();
					this._CO2permile = value;
					this.SendPropertyChanged("CO2permile");
					this.OnCO2permileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CH4permile", DbType="Float NOT NULL")]
		public double CH4permile
		{
			get
			{
				return this._CH4permile;
			}
			set
			{
				if ((this._CH4permile != value))
				{
					this.OnCH4permileChanging(value);
					this.SendPropertyChanging();
					this._CH4permile = value;
					this.SendPropertyChanged("CH4permile");
					this.OnCH4permileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NOxpermile", DbType="Float NOT NULL")]
		public double NOxpermile
		{
			get
			{
				return this._NOxpermile;
			}
			set
			{
				if ((this._NOxpermile != value))
				{
					this.OnNOxpermileChanging(value);
					this.SendPropertyChanging();
					this._NOxpermile = value;
					this.SendPropertyChanged("NOxpermile");
					this.OnNOxpermileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_H2Opermile", DbType="Float NOT NULL")]
		public double H2Opermile
		{
			get
			{
				return this._H2Opermile;
			}
			set
			{
				if ((this._H2Opermile != value))
				{
					this.OnH2OpermileChanging(value);
					this.SendPropertyChanging();
					this._H2Opermile = value;
					this.SendPropertyChanged("H2Opermile");
					this.OnH2OpermileChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.X")]
	public partial class X : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _message;
		
		private int _place;
		
		private string _description;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnmessageChanging(int value);
    partial void OnmessageChanged();
    partial void OnplaceChanging(int value);
    partial void OnplaceChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    #endregion
		
		public X()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_message", DbType="Int NOT NULL")]
		public int message
		{
			get
			{
				return this._message;
			}
			set
			{
				if ((this._message != value))
				{
					this.OnmessageChanging(value);
					this.SendPropertyChanging();
					this._message = value;
					this.SendPropertyChanged("message");
					this.OnmessageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_place", DbType="Int NOT NULL")]
		public int place
		{
			get
			{
				return this._place;
			}
			set
			{
				if ((this._place != value))
				{
					this.OnplaceChanging(value);
					this.SendPropertyChanging();
					this._place = value;
					this.SendPropertyChanged("place");
					this.OnplaceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Config")]
	public partial class Config : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _idCustomer;
		
		private int _idGroup;
		
		private int _idUser;
		
		private int _idx;
		
		private string _name;
		
		private string _value;
		
		private EntityRef<Group> _Group;
		
		private EntityRef<Customer> _Customer;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnidCustomerChanging(int value);
    partial void OnidCustomerChanged();
    partial void OnidGroupChanging(int value);
    partial void OnidGroupChanged();
    partial void OnidUserChanging(int value);
    partial void OnidUserChanged();
    partial void OnidxChanging(int value);
    partial void OnidxChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnvalueChanging(string value);
    partial void OnvalueChanged();
    #endregion
		
		public Config()
		{
			this._Group = default(EntityRef<Group>);
			this._Customer = default(EntityRef<Customer>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idCustomer", DbType="Int NOT NULL")]
		public int idCustomer
		{
			get
			{
				return this._idCustomer;
			}
			set
			{
				if ((this._idCustomer != value))
				{
					if (this._Customer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidCustomerChanging(value);
					this.SendPropertyChanging();
					this._idCustomer = value;
					this.SendPropertyChanged("idCustomer");
					this.OnidCustomerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idGroup", DbType="Int NOT NULL")]
		public int idGroup
		{
			get
			{
				return this._idGroup;
			}
			set
			{
				if ((this._idGroup != value))
				{
					if (this._Group.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidGroupChanging(value);
					this.SendPropertyChanging();
					this._idGroup = value;
					this.SendPropertyChanged("idGroup");
					this.OnidGroupChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idUser", DbType="Int NOT NULL")]
		public int idUser
		{
			get
			{
				return this._idUser;
			}
			set
			{
				if ((this._idUser != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidUserChanging(value);
					this.SendPropertyChanging();
					this._idUser = value;
					this.SendPropertyChanged("idUser");
					this.OnidUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idx", DbType="Int NOT NULL")]
		public int idx
		{
			get
			{
				return this._idx;
			}
			set
			{
				if ((this._idx != value))
				{
					this.OnidxChanging(value);
					this.SendPropertyChanging();
					this._idx = value;
					this.SendPropertyChanged("idx");
					this.OnidxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(64) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_value", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string value
		{
			get
			{
				return this._value;
			}
			set
			{
				if ((this._value != value))
				{
					this.OnvalueChanging(value);
					this.SendPropertyChanging();
					this._value = value;
					this.SendPropertyChanged("value");
					this.OnvalueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Group_Config", Storage="_Group", ThisKey="idGroup", OtherKey="id", IsForeignKey=true)]
		public Group Group
		{
			get
			{
				return this._Group.Entity;
			}
			set
			{
				Group previousValue = this._Group.Entity;
				if (((previousValue != value) 
							|| (this._Group.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Group.Entity = null;
						previousValue.Configs.Remove(this);
					}
					this._Group.Entity = value;
					if ((value != null))
					{
						value.Configs.Add(this);
						this._idGroup = value.id;
					}
					else
					{
						this._idGroup = default(int);
					}
					this.SendPropertyChanged("Group");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_Config", Storage="_Customer", ThisKey="idCustomer", OtherKey="id", IsForeignKey=true)]
		public Customer Customer
		{
			get
			{
				return this._Customer.Entity;
			}
			set
			{
				Customer previousValue = this._Customer.Entity;
				if (((previousValue != value) 
							|| (this._Customer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Customer.Entity = null;
						previousValue.Configs.Remove(this);
					}
					this._Customer.Entity = value;
					if ((value != null))
					{
						value.Configs.Add(this);
						this._idCustomer = value.id;
					}
					else
					{
						this._idCustomer = default(int);
					}
					this.SendPropertyChanged("Customer");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Config", Storage="_User", ThisKey="idUser", OtherKey="id", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Configs.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Configs.Add(this);
						this._idUser = value.id;
					}
					else
					{
						this._idUser = default(int);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Conversion")]
	public partial class Conversion : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _Name;
		
		private EntitySet<EquipmentConversion> _EquipmentConversions;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public Conversion()
		{
			this._EquipmentConversions = new EntitySet<EquipmentConversion>(new Action<EquipmentConversion>(this.attach_EquipmentConversions), new Action<EquipmentConversion>(this.detach_EquipmentConversions));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Conversion_EquipmentConversion", Storage="_EquipmentConversions", ThisKey="id", OtherKey="idConversion")]
		public EntitySet<EquipmentConversion> EquipmentConversions
		{
			get
			{
				return this._EquipmentConversions;
			}
			set
			{
				this._EquipmentConversions.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_EquipmentConversions(EquipmentConversion entity)
		{
			this.SendPropertyChanging();
			entity.Conversion = this;
		}
		
		private void detach_EquipmentConversions(EquipmentConversion entity)
		{
			this.SendPropertyChanging();
			entity.Conversion = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CustomerUsers")]
	public partial class CustomerUser : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _idCustomer;
		
		private int _idUsers;
		
		private string _Notes;
		
		private EntityRef<Customer> _Customer;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnidCustomerChanging(int value);
    partial void OnidCustomerChanged();
    partial void OnidUsersChanging(int value);
    partial void OnidUsersChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    #endregion
		
		public CustomerUser()
		{
			this._Customer = default(EntityRef<Customer>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idCustomer", DbType="Int NOT NULL")]
		public int idCustomer
		{
			get
			{
				return this._idCustomer;
			}
			set
			{
				if ((this._idCustomer != value))
				{
					if (this._Customer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidCustomerChanging(value);
					this.SendPropertyChanging();
					this._idCustomer = value;
					this.SendPropertyChanged("idCustomer");
					this.OnidCustomerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idUsers", DbType="Int NOT NULL")]
		public int idUsers
		{
			get
			{
				return this._idUsers;
			}
			set
			{
				if ((this._idUsers != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidUsersChanging(value);
					this.SendPropertyChanging();
					this._idUsers = value;
					this.SendPropertyChanged("idUsers");
					this.OnidUsersChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="NVarChar(250)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_CustomerUser", Storage="_Customer", ThisKey="idCustomer", OtherKey="id", IsForeignKey=true)]
		public Customer Customer
		{
			get
			{
				return this._Customer.Entity;
			}
			set
			{
				Customer previousValue = this._Customer.Entity;
				if (((previousValue != value) 
							|| (this._Customer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Customer.Entity = null;
						previousValue.CustomerUsers.Remove(this);
					}
					this._Customer.Entity = value;
					if ((value != null))
					{
						value.CustomerUsers.Add(this);
						this._idCustomer = value.id;
					}
					else
					{
						this._idCustomer = default(int);
					}
					this.SendPropertyChanged("Customer");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_CustomerUser", Storage="_User", ThisKey="idUsers", OtherKey="id", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.CustomerUsers.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.CustomerUsers.Add(this);
						this._idUsers = value.id;
					}
					else
					{
						this._idUsers = default(int);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Equipment")]
	public partial class Equipment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _Name;
		
		private System.Nullable<int> _idConversion;
		
		private EntitySet<EquipmentConversion> _EquipmentConversions;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnidConversionChanging(System.Nullable<int> value);
    partial void OnidConversionChanged();
    #endregion
		
		public Equipment()
		{
			this._EquipmentConversions = new EntitySet<EquipmentConversion>(new Action<EquipmentConversion>(this.attach_EquipmentConversions), new Action<EquipmentConversion>(this.detach_EquipmentConversions));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idConversion", DbType="Int")]
		public System.Nullable<int> idConversion
		{
			get
			{
				return this._idConversion;
			}
			set
			{
				if ((this._idConversion != value))
				{
					this.OnidConversionChanging(value);
					this.SendPropertyChanging();
					this._idConversion = value;
					this.SendPropertyChanged("idConversion");
					this.OnidConversionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Equipment_EquipmentConversion", Storage="_EquipmentConversions", ThisKey="id", OtherKey="idEquipment")]
		public EntitySet<EquipmentConversion> EquipmentConversions
		{
			get
			{
				return this._EquipmentConversions;
			}
			set
			{
				this._EquipmentConversions.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_EquipmentConversions(EquipmentConversion entity)
		{
			this.SendPropertyChanging();
			entity.Equipment = this;
		}
		
		private void detach_EquipmentConversions(EquipmentConversion entity)
		{
			this.SendPropertyChanging();
			entity.Equipment = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EquipmentConversion")]
	public partial class EquipmentConversion : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idEquipment;
		
		private int _idConversion;
		
		private EntityRef<Conversion> _Conversion;
		
		private EntityRef<Equipment> _Equipment;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidEquipmentChanging(int value);
    partial void OnidEquipmentChanged();
    partial void OnidConversionChanging(int value);
    partial void OnidConversionChanged();
    #endregion
		
		public EquipmentConversion()
		{
			this._Conversion = default(EntityRef<Conversion>);
			this._Equipment = default(EntityRef<Equipment>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idEquipment", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int idEquipment
		{
			get
			{
				return this._idEquipment;
			}
			set
			{
				if ((this._idEquipment != value))
				{
					if (this._Equipment.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidEquipmentChanging(value);
					this.SendPropertyChanging();
					this._idEquipment = value;
					this.SendPropertyChanged("idEquipment");
					this.OnidEquipmentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idConversion", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int idConversion
		{
			get
			{
				return this._idConversion;
			}
			set
			{
				if ((this._idConversion != value))
				{
					if (this._Conversion.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidConversionChanging(value);
					this.SendPropertyChanging();
					this._idConversion = value;
					this.SendPropertyChanged("idConversion");
					this.OnidConversionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Conversion_EquipmentConversion", Storage="_Conversion", ThisKey="idConversion", OtherKey="id", IsForeignKey=true)]
		public Conversion Conversion
		{
			get
			{
				return this._Conversion.Entity;
			}
			set
			{
				Conversion previousValue = this._Conversion.Entity;
				if (((previousValue != value) 
							|| (this._Conversion.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Conversion.Entity = null;
						previousValue.EquipmentConversions.Remove(this);
					}
					this._Conversion.Entity = value;
					if ((value != null))
					{
						value.EquipmentConversions.Add(this);
						this._idConversion = value.id;
					}
					else
					{
						this._idConversion = default(int);
					}
					this.SendPropertyChanged("Conversion");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Equipment_EquipmentConversion", Storage="_Equipment", ThisKey="idEquipment", OtherKey="id", IsForeignKey=true)]
		public Equipment Equipment
		{
			get
			{
				return this._Equipment.Entity;
			}
			set
			{
				Equipment previousValue = this._Equipment.Entity;
				if (((previousValue != value) 
							|| (this._Equipment.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Equipment.Entity = null;
						previousValue.EquipmentConversions.Remove(this);
					}
					this._Equipment.Entity = value;
					if ((value != null))
					{
						value.EquipmentConversions.Add(this);
						this._idEquipment = value.id;
					}
					else
					{
						this._idEquipment = default(int);
					}
					this.SendPropertyChanged("Equipment");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EquipmentType")]
	public partial class EquipmentType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _Code;
		
		private string _Name;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public EquipmentType()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="Char(3) NOT NULL", CanBeNull=false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="Char(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EventLogin")]
	public partial class EventLogin : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _idCustomer;
		
		private int _idUser;
		
		private string _ip;
		
		private System.DateTime _startdate;
		
		private System.DateTime _stopdate;
		
		private EntityRef<Customer> _Customer;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnidCustomerChanging(int value);
    partial void OnidCustomerChanged();
    partial void OnidUserChanging(int value);
    partial void OnidUserChanged();
    partial void OnipChanging(string value);
    partial void OnipChanged();
    partial void OnstartdateChanging(System.DateTime value);
    partial void OnstartdateChanged();
    partial void OnstopdateChanging(System.DateTime value);
    partial void OnstopdateChanged();
    #endregion
		
		public EventLogin()
		{
			this._Customer = default(EntityRef<Customer>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idCustomer", DbType="Int NOT NULL")]
		public int idCustomer
		{
			get
			{
				return this._idCustomer;
			}
			set
			{
				if ((this._idCustomer != value))
				{
					if (this._Customer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidCustomerChanging(value);
					this.SendPropertyChanging();
					this._idCustomer = value;
					this.SendPropertyChanged("idCustomer");
					this.OnidCustomerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idUser", DbType="Int NOT NULL")]
		public int idUser
		{
			get
			{
				return this._idUser;
			}
			set
			{
				if ((this._idUser != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidUserChanging(value);
					this.SendPropertyChanging();
					this._idUser = value;
					this.SendPropertyChanged("idUser");
					this.OnidUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ip", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string ip
		{
			get
			{
				return this._ip;
			}
			set
			{
				if ((this._ip != value))
				{
					this.OnipChanging(value);
					this.SendPropertyChanging();
					this._ip = value;
					this.SendPropertyChanged("ip");
					this.OnipChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_startdate", DbType="DateTime NOT NULL")]
		public System.DateTime startdate
		{
			get
			{
				return this._startdate;
			}
			set
			{
				if ((this._startdate != value))
				{
					this.OnstartdateChanging(value);
					this.SendPropertyChanging();
					this._startdate = value;
					this.SendPropertyChanged("startdate");
					this.OnstartdateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_stopdate", DbType="DateTime NOT NULL")]
		public System.DateTime stopdate
		{
			get
			{
				return this._stopdate;
			}
			set
			{
				if ((this._stopdate != value))
				{
					this.OnstopdateChanging(value);
					this.SendPropertyChanging();
					this._stopdate = value;
					this.SendPropertyChanged("stopdate");
					this.OnstopdateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_EventLogin", Storage="_Customer", ThisKey="idCustomer", OtherKey="id", IsForeignKey=true)]
		public Customer Customer
		{
			get
			{
				return this._Customer.Entity;
			}
			set
			{
				Customer previousValue = this._Customer.Entity;
				if (((previousValue != value) 
							|| (this._Customer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Customer.Entity = null;
						previousValue.EventLogins.Remove(this);
					}
					this._Customer.Entity = value;
					if ((value != null))
					{
						value.EventLogins.Add(this);
						this._idCustomer = value.id;
					}
					else
					{
						this._idCustomer = default(int);
					}
					this.SendPropertyChanged("Customer");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_EventLogin", Storage="_User", ThisKey="idUser", OtherKey="id", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.EventLogins.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.EventLogins.Add(this);
						this._idUser = value.id;
					}
					else
					{
						this._idUser = default(int);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FltSegment")]
	public partial class FltSegment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _SegmentID;
		
		private int _NumPassengers;
		
		private string _ClassOfService;
		
		private string _EquipmentType;
		
		private int _Miles;
		
		private string _StartCity;
		
		private string _EndCity;
		
		private EntityRef<Segment> _Segment;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnSegmentIDChanging(int value);
    partial void OnSegmentIDChanged();
    partial void OnNumPassengersChanging(int value);
    partial void OnNumPassengersChanged();
    partial void OnClassOfServiceChanging(string value);
    partial void OnClassOfServiceChanged();
    partial void OnEquipmentTypeChanging(string value);
    partial void OnEquipmentTypeChanged();
    partial void OnMilesChanging(int value);
    partial void OnMilesChanged();
    partial void OnStartCityChanging(string value);
    partial void OnStartCityChanged();
    partial void OnEndCityChanging(string value);
    partial void OnEndCityChanged();
    #endregion
		
		public FltSegment()
		{
			this._Segment = default(EntityRef<Segment>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SegmentID", DbType="Int NOT NULL")]
		public int SegmentID
		{
			get
			{
				return this._SegmentID;
			}
			set
			{
				if ((this._SegmentID != value))
				{
					if (this._Segment.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSegmentIDChanging(value);
					this.SendPropertyChanging();
					this._SegmentID = value;
					this.SendPropertyChanged("SegmentID");
					this.OnSegmentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumPassengers", DbType="Int NOT NULL")]
		public int NumPassengers
		{
			get
			{
				return this._NumPassengers;
			}
			set
			{
				if ((this._NumPassengers != value))
				{
					this.OnNumPassengersChanging(value);
					this.SendPropertyChanging();
					this._NumPassengers = value;
					this.SendPropertyChanged("NumPassengers");
					this.OnNumPassengersChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassOfService", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ClassOfService
		{
			get
			{
				return this._ClassOfService;
			}
			set
			{
				if ((this._ClassOfService != value))
				{
					this.OnClassOfServiceChanging(value);
					this.SendPropertyChanging();
					this._ClassOfService = value;
					this.SendPropertyChanged("ClassOfService");
					this.OnClassOfServiceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EquipmentType", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string EquipmentType
		{
			get
			{
				return this._EquipmentType;
			}
			set
			{
				if ((this._EquipmentType != value))
				{
					this.OnEquipmentTypeChanging(value);
					this.SendPropertyChanging();
					this._EquipmentType = value;
					this.SendPropertyChanged("EquipmentType");
					this.OnEquipmentTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Miles", DbType="Int NOT NULL")]
		public int Miles
		{
			get
			{
				return this._Miles;
			}
			set
			{
				if ((this._Miles != value))
				{
					this.OnMilesChanging(value);
					this.SendPropertyChanging();
					this._Miles = value;
					this.SendPropertyChanged("Miles");
					this.OnMilesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartCity", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string StartCity
		{
			get
			{
				return this._StartCity;
			}
			set
			{
				if ((this._StartCity != value))
				{
					this.OnStartCityChanging(value);
					this.SendPropertyChanging();
					this._StartCity = value;
					this.SendPropertyChanged("StartCity");
					this.OnStartCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndCity", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string EndCity
		{
			get
			{
				return this._EndCity;
			}
			set
			{
				if ((this._EndCity != value))
				{
					this.OnEndCityChanging(value);
					this.SendPropertyChanging();
					this._EndCity = value;
					this.SendPropertyChanged("EndCity");
					this.OnEndCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Segment_FltSegment", Storage="_Segment", ThisKey="SegmentID", OtherKey="id", IsForeignKey=true)]
		public Segment Segment
		{
			get
			{
				return this._Segment.Entity;
			}
			set
			{
				Segment previousValue = this._Segment.Entity;
				if (((previousValue != value) 
							|| (this._Segment.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Segment.Entity = null;
						previousValue.FltSegments.Remove(this);
					}
					this._Segment.Entity = value;
					if ((value != null))
					{
						value.FltSegments.Add(this);
						this._SegmentID = value.id;
					}
					else
					{
						this._SegmentID = default(int);
					}
					this.SendPropertyChanged("Segment");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Groups")]
	public partial class Group : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _idCustomer;
		
		private int _idUser;
		
		private string _name;
		
		private string _description;
		
		private char _view;
		
		private char _modify;
		
		private char _createdevice;
		
		private char _createmedia;
		
		private System.DateTime _startdate;
		
		private System.DateTime _stopdate;
		
		private EntitySet<Config> _Configs;
		
		private EntitySet<UserGroup> _UserGroups;
		
		private EntityRef<Customer> _Customer;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnidCustomerChanging(int value);
    partial void OnidCustomerChanged();
    partial void OnidUserChanging(int value);
    partial void OnidUserChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    partial void OnviewChanging(char value);
    partial void OnviewChanged();
    partial void OnmodifyChanging(char value);
    partial void OnmodifyChanged();
    partial void OncreatedeviceChanging(char value);
    partial void OncreatedeviceChanged();
    partial void OncreatemediaChanging(char value);
    partial void OncreatemediaChanged();
    partial void OnstartdateChanging(System.DateTime value);
    partial void OnstartdateChanged();
    partial void OnstopdateChanging(System.DateTime value);
    partial void OnstopdateChanged();
    #endregion
		
		public Group()
		{
			this._Configs = new EntitySet<Config>(new Action<Config>(this.attach_Configs), new Action<Config>(this.detach_Configs));
			this._UserGroups = new EntitySet<UserGroup>(new Action<UserGroup>(this.attach_UserGroups), new Action<UserGroup>(this.detach_UserGroups));
			this._Customer = default(EntityRef<Customer>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idCustomer", DbType="Int NOT NULL")]
		public int idCustomer
		{
			get
			{
				return this._idCustomer;
			}
			set
			{
				if ((this._idCustomer != value))
				{
					if (this._Customer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidCustomerChanging(value);
					this.SendPropertyChanging();
					this._idCustomer = value;
					this.SendPropertyChanged("idCustomer");
					this.OnidCustomerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idUser", DbType="Int NOT NULL")]
		public int idUser
		{
			get
			{
				return this._idUser;
			}
			set
			{
				if ((this._idUser != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidUserChanging(value);
					this.SendPropertyChanging();
					this._idUser = value;
					this.SendPropertyChanged("idUser");
					this.OnidUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(64) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[view]", Storage="_view", DbType="Char(1) NOT NULL")]
		public char view
		{
			get
			{
				return this._view;
			}
			set
			{
				if ((this._view != value))
				{
					this.OnviewChanging(value);
					this.SendPropertyChanging();
					this._view = value;
					this.SendPropertyChanged("view");
					this.OnviewChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_modify", DbType="Char(1) NOT NULL")]
		public char modify
		{
			get
			{
				return this._modify;
			}
			set
			{
				if ((this._modify != value))
				{
					this.OnmodifyChanging(value);
					this.SendPropertyChanging();
					this._modify = value;
					this.SendPropertyChanged("modify");
					this.OnmodifyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_createdevice", DbType="Char(1) NOT NULL")]
		public char createdevice
		{
			get
			{
				return this._createdevice;
			}
			set
			{
				if ((this._createdevice != value))
				{
					this.OncreatedeviceChanging(value);
					this.SendPropertyChanging();
					this._createdevice = value;
					this.SendPropertyChanged("createdevice");
					this.OncreatedeviceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_createmedia", DbType="Char(1) NOT NULL")]
		public char createmedia
		{
			get
			{
				return this._createmedia;
			}
			set
			{
				if ((this._createmedia != value))
				{
					this.OncreatemediaChanging(value);
					this.SendPropertyChanging();
					this._createmedia = value;
					this.SendPropertyChanged("createmedia");
					this.OncreatemediaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_startdate", DbType="DateTime NOT NULL")]
		public System.DateTime startdate
		{
			get
			{
				return this._startdate;
			}
			set
			{
				if ((this._startdate != value))
				{
					this.OnstartdateChanging(value);
					this.SendPropertyChanging();
					this._startdate = value;
					this.SendPropertyChanged("startdate");
					this.OnstartdateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_stopdate", DbType="DateTime NOT NULL")]
		public System.DateTime stopdate
		{
			get
			{
				return this._stopdate;
			}
			set
			{
				if ((this._stopdate != value))
				{
					this.OnstopdateChanging(value);
					this.SendPropertyChanging();
					this._stopdate = value;
					this.SendPropertyChanged("stopdate");
					this.OnstopdateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Group_Config", Storage="_Configs", ThisKey="id", OtherKey="idGroup")]
		public EntitySet<Config> Configs
		{
			get
			{
				return this._Configs;
			}
			set
			{
				this._Configs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Group_UserGroup", Storage="_UserGroups", ThisKey="id", OtherKey="idGroup")]
		public EntitySet<UserGroup> UserGroups
		{
			get
			{
				return this._UserGroups;
			}
			set
			{
				this._UserGroups.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_Group", Storage="_Customer", ThisKey="idCustomer", OtherKey="id", IsForeignKey=true)]
		public Customer Customer
		{
			get
			{
				return this._Customer.Entity;
			}
			set
			{
				Customer previousValue = this._Customer.Entity;
				if (((previousValue != value) 
							|| (this._Customer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Customer.Entity = null;
						previousValue.Groups.Remove(this);
					}
					this._Customer.Entity = value;
					if ((value != null))
					{
						value.Groups.Add(this);
						this._idCustomer = value.id;
					}
					else
					{
						this._idCustomer = default(int);
					}
					this.SendPropertyChanged("Customer");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Group", Storage="_User", ThisKey="idUser", OtherKey="id", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Groups.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Groups.Add(this);
						this._idUser = value.id;
					}
					else
					{
						this._idUser = default(int);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Configs(Config entity)
		{
			this.SendPropertyChanging();
			entity.Group = this;
		}
		
		private void detach_Configs(Config entity)
		{
			this.SendPropertyChanging();
			entity.Group = null;
		}
		
		private void attach_UserGroups(UserGroup entity)
		{
			this.SendPropertyChanging();
			entity.Group = this;
		}
		
		private void detach_UserGroups(UserGroup entity)
		{
			this.SendPropertyChanging();
			entity.Group = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HotelEmission")]
	public partial class HotelEmission : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _PropertyCode;
		
		private double _CO2pernight;
		
		private double _CH4pernight;
		
		private double _NOxpernight;
		
		private double _H2Opernight;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnPropertyCodeChanging(string value);
    partial void OnPropertyCodeChanged();
    partial void OnCO2pernightChanging(double value);
    partial void OnCO2pernightChanged();
    partial void OnCH4pernightChanging(double value);
    partial void OnCH4pernightChanged();
    partial void OnNOxpernightChanging(double value);
    partial void OnNOxpernightChanged();
    partial void OnH2OpernightChanging(double value);
    partial void OnH2OpernightChanged();
    #endregion
		
		public HotelEmission()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PropertyCode", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string PropertyCode
		{
			get
			{
				return this._PropertyCode;
			}
			set
			{
				if ((this._PropertyCode != value))
				{
					this.OnPropertyCodeChanging(value);
					this.SendPropertyChanging();
					this._PropertyCode = value;
					this.SendPropertyChanged("PropertyCode");
					this.OnPropertyCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CO2pernight", DbType="Float NOT NULL")]
		public double CO2pernight
		{
			get
			{
				return this._CO2pernight;
			}
			set
			{
				if ((this._CO2pernight != value))
				{
					this.OnCO2pernightChanging(value);
					this.SendPropertyChanging();
					this._CO2pernight = value;
					this.SendPropertyChanged("CO2pernight");
					this.OnCO2pernightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CH4pernight", DbType="Float NOT NULL")]
		public double CH4pernight
		{
			get
			{
				return this._CH4pernight;
			}
			set
			{
				if ((this._CH4pernight != value))
				{
					this.OnCH4pernightChanging(value);
					this.SendPropertyChanging();
					this._CH4pernight = value;
					this.SendPropertyChanged("CH4pernight");
					this.OnCH4pernightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NOxpernight", DbType="Float NOT NULL")]
		public double NOxpernight
		{
			get
			{
				return this._NOxpernight;
			}
			set
			{
				if ((this._NOxpernight != value))
				{
					this.OnNOxpernightChanging(value);
					this.SendPropertyChanging();
					this._NOxpernight = value;
					this.SendPropertyChanged("NOxpernight");
					this.OnNOxpernightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_H2Opernight", DbType="Float NOT NULL")]
		public double H2Opernight
		{
			get
			{
				return this._H2Opernight;
			}
			set
			{
				if ((this._H2Opernight != value))
				{
					this.OnH2OpernightChanging(value);
					this.SendPropertyChanging();
					this._H2Opernight = value;
					this.SendPropertyChanged("H2Opernight");
					this.OnH2OpernightChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HtlSegment")]
	public partial class HtlSegment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _SegmentID;
		
		private string _PropertyCode;
		
		private string _PassengerAssoc;
		
		private string _VendorName;
		
		private string _SpecificRate;
		
		private string _CityCode;
		
		private string _Street1;
		
		private string _City;
		
		private string _State;
		
		private string _ZipCode;
		
		private string _Country;
		
		private string _PhoneNumber;
		
		private string _FaxNumber;
		
		private string _RoomType;
		
		private int _NumAdults;
		
		private int _NumRooms;
		
		private EntityRef<Segment> _Segment;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnSegmentIDChanging(int value);
    partial void OnSegmentIDChanged();
    partial void OnPropertyCodeChanging(string value);
    partial void OnPropertyCodeChanged();
    partial void OnPassengerAssocChanging(string value);
    partial void OnPassengerAssocChanged();
    partial void OnVendorNameChanging(string value);
    partial void OnVendorNameChanged();
    partial void OnSpecificRateChanging(string value);
    partial void OnSpecificRateChanged();
    partial void OnCityCodeChanging(string value);
    partial void OnCityCodeChanged();
    partial void OnStreet1Changing(string value);
    partial void OnStreet1Changed();
    partial void OnCityChanging(string value);
    partial void OnCityChanged();
    partial void OnStateChanging(string value);
    partial void OnStateChanged();
    partial void OnZipCodeChanging(string value);
    partial void OnZipCodeChanged();
    partial void OnCountryChanging(string value);
    partial void OnCountryChanged();
    partial void OnPhoneNumberChanging(string value);
    partial void OnPhoneNumberChanged();
    partial void OnFaxNumberChanging(string value);
    partial void OnFaxNumberChanged();
    partial void OnRoomTypeChanging(string value);
    partial void OnRoomTypeChanged();
    partial void OnNumAdultsChanging(int value);
    partial void OnNumAdultsChanged();
    partial void OnNumRoomsChanging(int value);
    partial void OnNumRoomsChanged();
    #endregion
		
		public HtlSegment()
		{
			this._Segment = default(EntityRef<Segment>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SegmentID", DbType="Int NOT NULL")]
		public int SegmentID
		{
			get
			{
				return this._SegmentID;
			}
			set
			{
				if ((this._SegmentID != value))
				{
					if (this._Segment.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSegmentIDChanging(value);
					this.SendPropertyChanging();
					this._SegmentID = value;
					this.SendPropertyChanged("SegmentID");
					this.OnSegmentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PropertyCode", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string PropertyCode
		{
			get
			{
				return this._PropertyCode;
			}
			set
			{
				if ((this._PropertyCode != value))
				{
					this.OnPropertyCodeChanging(value);
					this.SendPropertyChanging();
					this._PropertyCode = value;
					this.SendPropertyChanged("PropertyCode");
					this.OnPropertyCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PassengerAssoc", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string PassengerAssoc
		{
			get
			{
				return this._PassengerAssoc;
			}
			set
			{
				if ((this._PassengerAssoc != value))
				{
					this.OnPassengerAssocChanging(value);
					this.SendPropertyChanging();
					this._PassengerAssoc = value;
					this.SendPropertyChanged("PassengerAssoc");
					this.OnPassengerAssocChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VendorName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string VendorName
		{
			get
			{
				return this._VendorName;
			}
			set
			{
				if ((this._VendorName != value))
				{
					this.OnVendorNameChanging(value);
					this.SendPropertyChanging();
					this._VendorName = value;
					this.SendPropertyChanged("VendorName");
					this.OnVendorNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpecificRate", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string SpecificRate
		{
			get
			{
				return this._SpecificRate;
			}
			set
			{
				if ((this._SpecificRate != value))
				{
					this.OnSpecificRateChanging(value);
					this.SendPropertyChanging();
					this._SpecificRate = value;
					this.SendPropertyChanged("SpecificRate");
					this.OnSpecificRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CityCode", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string CityCode
		{
			get
			{
				return this._CityCode;
			}
			set
			{
				if ((this._CityCode != value))
				{
					this.OnCityCodeChanging(value);
					this.SendPropertyChanging();
					this._CityCode = value;
					this.SendPropertyChanged("CityCode");
					this.OnCityCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Street1", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Street1
		{
			get
			{
				return this._Street1;
			}
			set
			{
				if ((this._Street1 != value))
				{
					this.OnStreet1Changing(value);
					this.SendPropertyChanging();
					this._Street1 = value;
					this.SendPropertyChanged("Street1");
					this.OnStreet1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string City
		{
			get
			{
				return this._City;
			}
			set
			{
				if ((this._City != value))
				{
					this.OnCityChanging(value);
					this.SendPropertyChanging();
					this._City = value;
					this.SendPropertyChanged("City");
					this.OnCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_State", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string State
		{
			get
			{
				return this._State;
			}
			set
			{
				if ((this._State != value))
				{
					this.OnStateChanging(value);
					this.SendPropertyChanging();
					this._State = value;
					this.SendPropertyChanged("State");
					this.OnStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ZipCode", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ZipCode
		{
			get
			{
				return this._ZipCode;
			}
			set
			{
				if ((this._ZipCode != value))
				{
					this.OnZipCodeChanging(value);
					this.SendPropertyChanging();
					this._ZipCode = value;
					this.SendPropertyChanged("ZipCode");
					this.OnZipCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Country", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Country
		{
			get
			{
				return this._Country;
			}
			set
			{
				if ((this._Country != value))
				{
					this.OnCountryChanging(value);
					this.SendPropertyChanging();
					this._Country = value;
					this.SendPropertyChanged("Country");
					this.OnCountryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneNumber", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string PhoneNumber
		{
			get
			{
				return this._PhoneNumber;
			}
			set
			{
				if ((this._PhoneNumber != value))
				{
					this.OnPhoneNumberChanging(value);
					this.SendPropertyChanging();
					this._PhoneNumber = value;
					this.SendPropertyChanged("PhoneNumber");
					this.OnPhoneNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FaxNumber", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string FaxNumber
		{
			get
			{
				return this._FaxNumber;
			}
			set
			{
				if ((this._FaxNumber != value))
				{
					this.OnFaxNumberChanging(value);
					this.SendPropertyChanging();
					this._FaxNumber = value;
					this.SendPropertyChanged("FaxNumber");
					this.OnFaxNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoomType", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string RoomType
		{
			get
			{
				return this._RoomType;
			}
			set
			{
				if ((this._RoomType != value))
				{
					this.OnRoomTypeChanging(value);
					this.SendPropertyChanging();
					this._RoomType = value;
					this.SendPropertyChanged("RoomType");
					this.OnRoomTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumAdults", DbType="Int NOT NULL")]
		public int NumAdults
		{
			get
			{
				return this._NumAdults;
			}
			set
			{
				if ((this._NumAdults != value))
				{
					this.OnNumAdultsChanging(value);
					this.SendPropertyChanging();
					this._NumAdults = value;
					this.SendPropertyChanged("NumAdults");
					this.OnNumAdultsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumRooms", DbType="Int NOT NULL")]
		public int NumRooms
		{
			get
			{
				return this._NumRooms;
			}
			set
			{
				if ((this._NumRooms != value))
				{
					this.OnNumRoomsChanging(value);
					this.SendPropertyChanging();
					this._NumRooms = value;
					this.SendPropertyChanged("NumRooms");
					this.OnNumRoomsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Segment_HtlSegment", Storage="_Segment", ThisKey="SegmentID", OtherKey="id", IsForeignKey=true)]
		public Segment Segment
		{
			get
			{
				return this._Segment.Entity;
			}
			set
			{
				Segment previousValue = this._Segment.Entity;
				if (((previousValue != value) 
							|| (this._Segment.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Segment.Entity = null;
						previousValue.HtlSegments.Remove(this);
					}
					this._Segment.Entity = value;
					if ((value != null))
					{
						value.HtlSegments.Add(this);
						this._SegmentID = value.id;
					}
					else
					{
						this._SegmentID = default(int);
					}
					this.SendPropertyChanged("Segment");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.InfoEmitter")]
	public partial class InfoEmitter : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _name;
		
		private double _emitperhour;
		
		private string _description;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnemitperhourChanging(double value);
    partial void OnemitperhourChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    #endregion
		
		public InfoEmitter()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_emitperhour", DbType="Float NOT NULL")]
		public double emitperhour
		{
			get
			{
				return this._emitperhour;
			}
			set
			{
				if ((this._emitperhour != value))
				{
					this.OnemitperhourChanging(value);
					this.SendPropertyChanging();
					this._emitperhour = value;
					this.SendPropertyChanged("emitperhour");
					this.OnemitperhourChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Item")]
	public partial class Item : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _idItemType;
		
		private string _Name;
		
		private string _Notes;
		
		private EntitySet<ItemMeasureInfo> _ItemMeasureInfos;
		
		private EntityRef<ItemType> _ItemType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnidItemTypeChanging(int value);
    partial void OnidItemTypeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    #endregion
		
		public Item()
		{
			this._ItemMeasureInfos = new EntitySet<ItemMeasureInfo>(new Action<ItemMeasureInfo>(this.attach_ItemMeasureInfos), new Action<ItemMeasureInfo>(this.detach_ItemMeasureInfos));
			this._ItemType = default(EntityRef<ItemType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idItemType", DbType="Int NOT NULL")]
		public int idItemType
		{
			get
			{
				return this._idItemType;
			}
			set
			{
				if ((this._idItemType != value))
				{
					if (this._ItemType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidItemTypeChanging(value);
					this.SendPropertyChanging();
					this._idItemType = value;
					this.SendPropertyChanged("idItemType");
					this.OnidItemTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="NVarChar(500)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Item_ItemMeasureInfo", Storage="_ItemMeasureInfos", ThisKey="id", OtherKey="idItem")]
		public EntitySet<ItemMeasureInfo> ItemMeasureInfos
		{
			get
			{
				return this._ItemMeasureInfos;
			}
			set
			{
				this._ItemMeasureInfos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ItemType_Item", Storage="_ItemType", ThisKey="idItemType", OtherKey="id", IsForeignKey=true)]
		public ItemType ItemType
		{
			get
			{
				return this._ItemType.Entity;
			}
			set
			{
				ItemType previousValue = this._ItemType.Entity;
				if (((previousValue != value) 
							|| (this._ItemType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ItemType.Entity = null;
						previousValue.Items.Remove(this);
					}
					this._ItemType.Entity = value;
					if ((value != null))
					{
						value.Items.Add(this);
						this._idItemType = value.id;
					}
					else
					{
						this._idItemType = default(int);
					}
					this.SendPropertyChanged("ItemType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ItemMeasureInfos(ItemMeasureInfo entity)
		{
			this.SendPropertyChanging();
			entity.Item = this;
		}
		
		private void detach_ItemMeasureInfos(ItemMeasureInfo entity)
		{
			this.SendPropertyChanging();
			entity.Item = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ItemType")]
	public partial class ItemType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _idCustomer;
		
		private string _Name;
		
		private string _Notes;
		
		private EntitySet<Item> _Items;
		
		private EntityRef<Customer> _Customer;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnidCustomerChanging(int value);
    partial void OnidCustomerChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    #endregion
		
		public ItemType()
		{
			this._Items = new EntitySet<Item>(new Action<Item>(this.attach_Items), new Action<Item>(this.detach_Items));
			this._Customer = default(EntityRef<Customer>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idCustomer", DbType="Int NOT NULL")]
		public int idCustomer
		{
			get
			{
				return this._idCustomer;
			}
			set
			{
				if ((this._idCustomer != value))
				{
					if (this._Customer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidCustomerChanging(value);
					this.SendPropertyChanging();
					this._idCustomer = value;
					this.SendPropertyChanged("idCustomer");
					this.OnidCustomerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="NVarChar(500)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ItemType_Item", Storage="_Items", ThisKey="id", OtherKey="idItemType")]
		public EntitySet<Item> Items
		{
			get
			{
				return this._Items;
			}
			set
			{
				this._Items.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_ItemType", Storage="_Customer", ThisKey="idCustomer", OtherKey="id", IsForeignKey=true)]
		public Customer Customer
		{
			get
			{
				return this._Customer.Entity;
			}
			set
			{
				Customer previousValue = this._Customer.Entity;
				if (((previousValue != value) 
							|| (this._Customer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Customer.Entity = null;
						previousValue.ItemTypes.Remove(this);
					}
					this._Customer.Entity = value;
					if ((value != null))
					{
						value.ItemTypes.Add(this);
						this._idCustomer = value.id;
					}
					else
					{
						this._idCustomer = default(int);
					}
					this.SendPropertyChanged("Customer");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Items(Item entity)
		{
			this.SendPropertyChanging();
			entity.ItemType = this;
		}
		
		private void detach_Items(Item entity)
		{
			this.SendPropertyChanging();
			entity.ItemType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MarkerLocation")]
	public partial class MarkerLocation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _name;
		
		private double _lat;
		
		private double _lng;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnlatChanging(double value);
    partial void OnlatChanged();
    partial void OnlngChanging(double value);
    partial void OnlngChanged();
    #endregion
		
		public MarkerLocation()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lat", DbType="Float NOT NULL")]
		public double lat
		{
			get
			{
				return this._lat;
			}
			set
			{
				if ((this._lat != value))
				{
					this.OnlatChanging(value);
					this.SendPropertyChanging();
					this._lat = value;
					this.SendPropertyChanged("lat");
					this.OnlatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lng", DbType="Float NOT NULL")]
		public double lng
		{
			get
			{
				return this._lng;
			}
			set
			{
				if ((this._lng != value))
				{
					this.OnlngChanging(value);
					this.SendPropertyChanging();
					this._lng = value;
					this.SendPropertyChanged("lng");
					this.OnlngChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Pnr")]
	public partial class Pnr : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private byte _GDS;
		
		private string _Locator;
		
		private string _AccountNumber;
		
		private string _PsgrFirstName;
		
		private string _PsgrLastName;
		
		private EntitySet<Segment> _Segments;
		
		private EntitySet<Passenger> _Passengers;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnGDSChanging(byte value);
    partial void OnGDSChanged();
    partial void OnLocatorChanging(string value);
    partial void OnLocatorChanged();
    partial void OnAccountNumberChanging(string value);
    partial void OnAccountNumberChanged();
    partial void OnPsgrFirstNameChanging(string value);
    partial void OnPsgrFirstNameChanged();
    partial void OnPsgrLastNameChanging(string value);
    partial void OnPsgrLastNameChanged();
    #endregion
		
		public Pnr()
		{
			this._Segments = new EntitySet<Segment>(new Action<Segment>(this.attach_Segments), new Action<Segment>(this.detach_Segments));
			this._Passengers = new EntitySet<Passenger>(new Action<Passenger>(this.attach_Passengers), new Action<Passenger>(this.detach_Passengers));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GDS", DbType="TinyInt NOT NULL")]
		public byte GDS
		{
			get
			{
				return this._GDS;
			}
			set
			{
				if ((this._GDS != value))
				{
					this.OnGDSChanging(value);
					this.SendPropertyChanging();
					this._GDS = value;
					this.SendPropertyChanged("GDS");
					this.OnGDSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Locator", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Locator
		{
			get
			{
				return this._Locator;
			}
			set
			{
				if ((this._Locator != value))
				{
					this.OnLocatorChanging(value);
					this.SendPropertyChanging();
					this._Locator = value;
					this.SendPropertyChanged("Locator");
					this.OnLocatorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountNumber", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string AccountNumber
		{
			get
			{
				return this._AccountNumber;
			}
			set
			{
				if ((this._AccountNumber != value))
				{
					this.OnAccountNumberChanging(value);
					this.SendPropertyChanging();
					this._AccountNumber = value;
					this.SendPropertyChanged("AccountNumber");
					this.OnAccountNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PsgrFirstName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string PsgrFirstName
		{
			get
			{
				return this._PsgrFirstName;
			}
			set
			{
				if ((this._PsgrFirstName != value))
				{
					this.OnPsgrFirstNameChanging(value);
					this.SendPropertyChanging();
					this._PsgrFirstName = value;
					this.SendPropertyChanged("PsgrFirstName");
					this.OnPsgrFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PsgrLastName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string PsgrLastName
		{
			get
			{
				return this._PsgrLastName;
			}
			set
			{
				if ((this._PsgrLastName != value))
				{
					this.OnPsgrLastNameChanging(value);
					this.SendPropertyChanging();
					this._PsgrLastName = value;
					this.SendPropertyChanged("PsgrLastName");
					this.OnPsgrLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Pnr_Segment", Storage="_Segments", ThisKey="id", OtherKey="PnrId")]
		public EntitySet<Segment> Segments
		{
			get
			{
				return this._Segments;
			}
			set
			{
				this._Segments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Pnr_Passenger", Storage="_Passengers", ThisKey="id", OtherKey="PnrId")]
		public EntitySet<Passenger> Passengers
		{
			get
			{
				return this._Passengers;
			}
			set
			{
				this._Passengers.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Segments(Segment entity)
		{
			this.SendPropertyChanging();
			entity.Pnr = this;
		}
		
		private void detach_Segments(Segment entity)
		{
			this.SendPropertyChanging();
			entity.Pnr = null;
		}
		
		private void attach_Passengers(Passenger entity)
		{
			this.SendPropertyChanging();
			entity.Pnr = this;
		}
		
		private void detach_Passengers(Passenger entity)
		{
			this.SendPropertyChanging();
			entity.Pnr = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Segment")]
	public partial class Segment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _PnrId;
		
		private int _Type;
		
		private string _Vendor;
		
		private string _VendorTrackingNumber;
		
		private int _SegmentNumber;
		
		private string _Status;
		
		private System.DateTime _StartDateTime;
		
		private System.DateTime _EndDateTime;
		
		private System.Nullable<int> _EmissionId;
		
		private string _RateCurrency;
		
		private string _Rate;
		
		private string _ConfirmationNumber;
		
		private int _Manual;
		
		private EntitySet<FltSegment> _FltSegments;
		
		private EntitySet<HtlSegment> _HtlSegments;
		
		private EntitySet<SegmentEmission> _SegmentEmissions;
		
		private EntityRef<Pnr> _Pnr;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnPnrIdChanging(int value);
    partial void OnPnrIdChanged();
    partial void OnTypeChanging(int value);
    partial void OnTypeChanged();
    partial void OnVendorChanging(string value);
    partial void OnVendorChanged();
    partial void OnVendorTrackingNumberChanging(string value);
    partial void OnVendorTrackingNumberChanged();
    partial void OnSegmentNumberChanging(int value);
    partial void OnSegmentNumberChanged();
    partial void OnStatusChanging(string value);
    partial void OnStatusChanged();
    partial void OnStartDateTimeChanging(System.DateTime value);
    partial void OnStartDateTimeChanged();
    partial void OnEndDateTimeChanging(System.DateTime value);
    partial void OnEndDateTimeChanged();
    partial void OnEmissionIdChanging(System.Nullable<int> value);
    partial void OnEmissionIdChanged();
    partial void OnRateCurrencyChanging(string value);
    partial void OnRateCurrencyChanged();
    partial void OnRateChanging(string value);
    partial void OnRateChanged();
    partial void OnConfirmationNumberChanging(string value);
    partial void OnConfirmationNumberChanged();
    partial void OnManualChanging(int value);
    partial void OnManualChanged();
    #endregion
		
		public Segment()
		{
			this._FltSegments = new EntitySet<FltSegment>(new Action<FltSegment>(this.attach_FltSegments), new Action<FltSegment>(this.detach_FltSegments));
			this._HtlSegments = new EntitySet<HtlSegment>(new Action<HtlSegment>(this.attach_HtlSegments), new Action<HtlSegment>(this.detach_HtlSegments));
			this._SegmentEmissions = new EntitySet<SegmentEmission>(new Action<SegmentEmission>(this.attach_SegmentEmissions), new Action<SegmentEmission>(this.detach_SegmentEmissions));
			this._Pnr = default(EntityRef<Pnr>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PnrId", DbType="Int NOT NULL")]
		public int PnrId
		{
			get
			{
				return this._PnrId;
			}
			set
			{
				if ((this._PnrId != value))
				{
					if (this._Pnr.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPnrIdChanging(value);
					this.SendPropertyChanging();
					this._PnrId = value;
					this.SendPropertyChanged("PnrId");
					this.OnPnrIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="Int NOT NULL")]
		public int Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Vendor", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Vendor
		{
			get
			{
				return this._Vendor;
			}
			set
			{
				if ((this._Vendor != value))
				{
					this.OnVendorChanging(value);
					this.SendPropertyChanging();
					this._Vendor = value;
					this.SendPropertyChanged("Vendor");
					this.OnVendorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VendorTrackingNumber", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string VendorTrackingNumber
		{
			get
			{
				return this._VendorTrackingNumber;
			}
			set
			{
				if ((this._VendorTrackingNumber != value))
				{
					this.OnVendorTrackingNumberChanging(value);
					this.SendPropertyChanging();
					this._VendorTrackingNumber = value;
					this.SendPropertyChanged("VendorTrackingNumber");
					this.OnVendorTrackingNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SegmentNumber", DbType="Int NOT NULL")]
		public int SegmentNumber
		{
			get
			{
				return this._SegmentNumber;
			}
			set
			{
				if ((this._SegmentNumber != value))
				{
					this.OnSegmentNumberChanging(value);
					this.SendPropertyChanging();
					this._SegmentNumber = value;
					this.SendPropertyChanged("SegmentNumber");
					this.OnSegmentNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime StartDateTime
		{
			get
			{
				return this._StartDateTime;
			}
			set
			{
				if ((this._StartDateTime != value))
				{
					this.OnStartDateTimeChanging(value);
					this.SendPropertyChanging();
					this._StartDateTime = value;
					this.SendPropertyChanged("StartDateTime");
					this.OnStartDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime EndDateTime
		{
			get
			{
				return this._EndDateTime;
			}
			set
			{
				if ((this._EndDateTime != value))
				{
					this.OnEndDateTimeChanging(value);
					this.SendPropertyChanging();
					this._EndDateTime = value;
					this.SendPropertyChanged("EndDateTime");
					this.OnEndDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmissionId", DbType="Int")]
		public System.Nullable<int> EmissionId
		{
			get
			{
				return this._EmissionId;
			}
			set
			{
				if ((this._EmissionId != value))
				{
					this.OnEmissionIdChanging(value);
					this.SendPropertyChanging();
					this._EmissionId = value;
					this.SendPropertyChanged("EmissionId");
					this.OnEmissionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RateCurrency", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string RateCurrency
		{
			get
			{
				return this._RateCurrency;
			}
			set
			{
				if ((this._RateCurrency != value))
				{
					this.OnRateCurrencyChanging(value);
					this.SendPropertyChanging();
					this._RateCurrency = value;
					this.SendPropertyChanged("RateCurrency");
					this.OnRateCurrencyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rate", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Rate
		{
			get
			{
				return this._Rate;
			}
			set
			{
				if ((this._Rate != value))
				{
					this.OnRateChanging(value);
					this.SendPropertyChanging();
					this._Rate = value;
					this.SendPropertyChanged("Rate");
					this.OnRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConfirmationNumber", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ConfirmationNumber
		{
			get
			{
				return this._ConfirmationNumber;
			}
			set
			{
				if ((this._ConfirmationNumber != value))
				{
					this.OnConfirmationNumberChanging(value);
					this.SendPropertyChanging();
					this._ConfirmationNumber = value;
					this.SendPropertyChanged("ConfirmationNumber");
					this.OnConfirmationNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Manual", DbType="Int NOT NULL")]
		public int Manual
		{
			get
			{
				return this._Manual;
			}
			set
			{
				if ((this._Manual != value))
				{
					this.OnManualChanging(value);
					this.SendPropertyChanging();
					this._Manual = value;
					this.SendPropertyChanged("Manual");
					this.OnManualChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Segment_FltSegment", Storage="_FltSegments", ThisKey="id", OtherKey="SegmentID")]
		public EntitySet<FltSegment> FltSegments
		{
			get
			{
				return this._FltSegments;
			}
			set
			{
				this._FltSegments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Segment_HtlSegment", Storage="_HtlSegments", ThisKey="id", OtherKey="SegmentID")]
		public EntitySet<HtlSegment> HtlSegments
		{
			get
			{
				return this._HtlSegments;
			}
			set
			{
				this._HtlSegments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Segment_SegmentEmission", Storage="_SegmentEmissions", ThisKey="id", OtherKey="SegmentID")]
		public EntitySet<SegmentEmission> SegmentEmissions
		{
			get
			{
				return this._SegmentEmissions;
			}
			set
			{
				this._SegmentEmissions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Pnr_Segment", Storage="_Pnr", ThisKey="PnrId", OtherKey="id", IsForeignKey=true)]
		public Pnr Pnr
		{
			get
			{
				return this._Pnr.Entity;
			}
			set
			{
				Pnr previousValue = this._Pnr.Entity;
				if (((previousValue != value) 
							|| (this._Pnr.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Pnr.Entity = null;
						previousValue.Segments.Remove(this);
					}
					this._Pnr.Entity = value;
					if ((value != null))
					{
						value.Segments.Add(this);
						this._PnrId = value.id;
					}
					else
					{
						this._PnrId = default(int);
					}
					this.SendPropertyChanged("Pnr");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_FltSegments(FltSegment entity)
		{
			this.SendPropertyChanging();
			entity.Segment = this;
		}
		
		private void detach_FltSegments(FltSegment entity)
		{
			this.SendPropertyChanging();
			entity.Segment = null;
		}
		
		private void attach_HtlSegments(HtlSegment entity)
		{
			this.SendPropertyChanging();
			entity.Segment = this;
		}
		
		private void detach_HtlSegments(HtlSegment entity)
		{
			this.SendPropertyChanging();
			entity.Segment = null;
		}
		
		private void attach_SegmentEmissions(SegmentEmission entity)
		{
			this.SendPropertyChanging();
			entity.Segment = this;
		}
		
		private void detach_SegmentEmissions(SegmentEmission entity)
		{
			this.SendPropertyChanging();
			entity.Segment = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SegmentEmission")]
	public partial class SegmentEmission : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _SegmentID;
		
		private double _kgCO2;
		
		private double _kgCH4;
		
		private double _kgNOx;
		
		private double _kgH2O;
		
		private EntityRef<Segment> _Segment;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnSegmentIDChanging(int value);
    partial void OnSegmentIDChanged();
    partial void OnkgCO2Changing(double value);
    partial void OnkgCO2Changed();
    partial void OnkgCH4Changing(double value);
    partial void OnkgCH4Changed();
    partial void OnkgNOxChanging(double value);
    partial void OnkgNOxChanged();
    partial void OnkgH2OChanging(double value);
    partial void OnkgH2OChanged();
    #endregion
		
		public SegmentEmission()
		{
			this._Segment = default(EntityRef<Segment>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SegmentID", DbType="Int NOT NULL")]
		public int SegmentID
		{
			get
			{
				return this._SegmentID;
			}
			set
			{
				if ((this._SegmentID != value))
				{
					if (this._Segment.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSegmentIDChanging(value);
					this.SendPropertyChanging();
					this._SegmentID = value;
					this.SendPropertyChanged("SegmentID");
					this.OnSegmentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_kgCO2", DbType="Float NOT NULL")]
		public double kgCO2
		{
			get
			{
				return this._kgCO2;
			}
			set
			{
				if ((this._kgCO2 != value))
				{
					this.OnkgCO2Changing(value);
					this.SendPropertyChanging();
					this._kgCO2 = value;
					this.SendPropertyChanged("kgCO2");
					this.OnkgCO2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_kgCH4", DbType="Float NOT NULL")]
		public double kgCH4
		{
			get
			{
				return this._kgCH4;
			}
			set
			{
				if ((this._kgCH4 != value))
				{
					this.OnkgCH4Changing(value);
					this.SendPropertyChanging();
					this._kgCH4 = value;
					this.SendPropertyChanged("kgCH4");
					this.OnkgCH4Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_kgNOx", DbType="Float NOT NULL")]
		public double kgNOx
		{
			get
			{
				return this._kgNOx;
			}
			set
			{
				if ((this._kgNOx != value))
				{
					this.OnkgNOxChanging(value);
					this.SendPropertyChanging();
					this._kgNOx = value;
					this.SendPropertyChanged("kgNOx");
					this.OnkgNOxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_kgH2O", DbType="Float NOT NULL")]
		public double kgH2O
		{
			get
			{
				return this._kgH2O;
			}
			set
			{
				if ((this._kgH2O != value))
				{
					this.OnkgH2OChanging(value);
					this.SendPropertyChanging();
					this._kgH2O = value;
					this.SendPropertyChanged("kgH2O");
					this.OnkgH2OChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Segment_SegmentEmission", Storage="_Segment", ThisKey="SegmentID", OtherKey="id", IsForeignKey=true)]
		public Segment Segment
		{
			get
			{
				return this._Segment.Entity;
			}
			set
			{
				Segment previousValue = this._Segment.Entity;
				if (((previousValue != value) 
							|| (this._Segment.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Segment.Entity = null;
						previousValue.SegmentEmissions.Remove(this);
					}
					this._Segment.Entity = value;
					if ((value != null))
					{
						value.SegmentEmissions.Add(this);
						this._SegmentID = value.id;
					}
					else
					{
						this._SegmentID = default(int);
					}
					this.SendPropertyChanged("Segment");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserGroup")]
	public partial class UserGroup : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _idUser;
		
		private int _idGroup;
		
		private System.DateTime _startdate;
		
		private System.DateTime _stopdate;
		
		private EntityRef<Group> _Group;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnidUserChanging(int value);
    partial void OnidUserChanged();
    partial void OnidGroupChanging(int value);
    partial void OnidGroupChanged();
    partial void OnstartdateChanging(System.DateTime value);
    partial void OnstartdateChanged();
    partial void OnstopdateChanging(System.DateTime value);
    partial void OnstopdateChanged();
    #endregion
		
		public UserGroup()
		{
			this._Group = default(EntityRef<Group>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idUser", DbType="Int NOT NULL")]
		public int idUser
		{
			get
			{
				return this._idUser;
			}
			set
			{
				if ((this._idUser != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidUserChanging(value);
					this.SendPropertyChanging();
					this._idUser = value;
					this.SendPropertyChanged("idUser");
					this.OnidUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idGroup", DbType="Int NOT NULL")]
		public int idGroup
		{
			get
			{
				return this._idGroup;
			}
			set
			{
				if ((this._idGroup != value))
				{
					if (this._Group.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidGroupChanging(value);
					this.SendPropertyChanging();
					this._idGroup = value;
					this.SendPropertyChanged("idGroup");
					this.OnidGroupChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_startdate", DbType="DateTime NOT NULL")]
		public System.DateTime startdate
		{
			get
			{
				return this._startdate;
			}
			set
			{
				if ((this._startdate != value))
				{
					this.OnstartdateChanging(value);
					this.SendPropertyChanging();
					this._startdate = value;
					this.SendPropertyChanged("startdate");
					this.OnstartdateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_stopdate", DbType="DateTime NOT NULL")]
		public System.DateTime stopdate
		{
			get
			{
				return this._stopdate;
			}
			set
			{
				if ((this._stopdate != value))
				{
					this.OnstopdateChanging(value);
					this.SendPropertyChanging();
					this._stopdate = value;
					this.SendPropertyChanged("stopdate");
					this.OnstopdateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Group_UserGroup", Storage="_Group", ThisKey="idGroup", OtherKey="id", IsForeignKey=true)]
		public Group Group
		{
			get
			{
				return this._Group.Entity;
			}
			set
			{
				Group previousValue = this._Group.Entity;
				if (((previousValue != value) 
							|| (this._Group.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Group.Entity = null;
						previousValue.UserGroups.Remove(this);
					}
					this._Group.Entity = value;
					if ((value != null))
					{
						value.UserGroups.Add(this);
						this._idGroup = value.id;
					}
					else
					{
						this._idGroup = default(int);
					}
					this.SendPropertyChanged("Group");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_UserGroup", Storage="_User", ThisKey="idUser", OtherKey="id", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.UserGroups.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.UserGroups.Add(this);
						this._idUser = value.id;
					}
					else
					{
						this._idUser = default(int);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Vendor")]
	public partial class Vendor : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _name;
		
		private string _description;
		
		private string _url;
		
		private System.DateTime _startdate;
		
		private System.DateTime _stopdate;
		
		private EntitySet<VendorModel> _VendorModels;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    partial void OnurlChanging(string value);
    partial void OnurlChanged();
    partial void OnstartdateChanging(System.DateTime value);
    partial void OnstartdateChanged();
    partial void OnstopdateChanging(System.DateTime value);
    partial void OnstopdateChanged();
    #endregion
		
		public Vendor()
		{
			this._VendorModels = new EntitySet<VendorModel>(new Action<VendorModel>(this.attach_VendorModels), new Action<VendorModel>(this.detach_VendorModels));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(64) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_url", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string url
		{
			get
			{
				return this._url;
			}
			set
			{
				if ((this._url != value))
				{
					this.OnurlChanging(value);
					this.SendPropertyChanging();
					this._url = value;
					this.SendPropertyChanged("url");
					this.OnurlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_startdate", DbType="DateTime NOT NULL")]
		public System.DateTime startdate
		{
			get
			{
				return this._startdate;
			}
			set
			{
				if ((this._startdate != value))
				{
					this.OnstartdateChanging(value);
					this.SendPropertyChanging();
					this._startdate = value;
					this.SendPropertyChanged("startdate");
					this.OnstartdateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_stopdate", DbType="DateTime NOT NULL")]
		public System.DateTime stopdate
		{
			get
			{
				return this._stopdate;
			}
			set
			{
				if ((this._stopdate != value))
				{
					this.OnstopdateChanging(value);
					this.SendPropertyChanging();
					this._stopdate = value;
					this.SendPropertyChanged("stopdate");
					this.OnstopdateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Vendor_VendorModel", Storage="_VendorModels", ThisKey="id", OtherKey="idVendor")]
		public EntitySet<VendorModel> VendorModels
		{
			get
			{
				return this._VendorModels;
			}
			set
			{
				this._VendorModels.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_VendorModels(VendorModel entity)
		{
			this.SendPropertyChanging();
			entity.Vendor = this;
		}
		
		private void detach_VendorModels(VendorModel entity)
		{
			this.SendPropertyChanging();
			entity.Vendor = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.VendorModel")]
	public partial class VendorModel : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _idVendor;
		
		private string _name;
		
		private string _description;
		
		private string _url;
		
		private System.DateTime _startdate;
		
		private System.DateTime _stopdate;
		
		private EntityRef<Vendor> _Vendor;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnidVendorChanging(int value);
    partial void OnidVendorChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    partial void OnurlChanging(string value);
    partial void OnurlChanged();
    partial void OnstartdateChanging(System.DateTime value);
    partial void OnstartdateChanged();
    partial void OnstopdateChanging(System.DateTime value);
    partial void OnstopdateChanged();
    #endregion
		
		public VendorModel()
		{
			this._Vendor = default(EntityRef<Vendor>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idVendor", DbType="Int NOT NULL")]
		public int idVendor
		{
			get
			{
				return this._idVendor;
			}
			set
			{
				if ((this._idVendor != value))
				{
					if (this._Vendor.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidVendorChanging(value);
					this.SendPropertyChanging();
					this._idVendor = value;
					this.SendPropertyChanged("idVendor");
					this.OnidVendorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(64) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_url", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string url
		{
			get
			{
				return this._url;
			}
			set
			{
				if ((this._url != value))
				{
					this.OnurlChanging(value);
					this.SendPropertyChanging();
					this._url = value;
					this.SendPropertyChanged("url");
					this.OnurlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_startdate", DbType="DateTime NOT NULL")]
		public System.DateTime startdate
		{
			get
			{
				return this._startdate;
			}
			set
			{
				if ((this._startdate != value))
				{
					this.OnstartdateChanging(value);
					this.SendPropertyChanging();
					this._startdate = value;
					this.SendPropertyChanged("startdate");
					this.OnstartdateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_stopdate", DbType="DateTime NOT NULL")]
		public System.DateTime stopdate
		{
			get
			{
				return this._stopdate;
			}
			set
			{
				if ((this._stopdate != value))
				{
					this.OnstopdateChanging(value);
					this.SendPropertyChanging();
					this._stopdate = value;
					this.SendPropertyChanged("stopdate");
					this.OnstopdateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Vendor_VendorModel", Storage="_Vendor", ThisKey="idVendor", OtherKey="id", IsForeignKey=true)]
		public Vendor Vendor
		{
			get
			{
				return this._Vendor.Entity;
			}
			set
			{
				Vendor previousValue = this._Vendor.Entity;
				if (((previousValue != value) 
							|| (this._Vendor.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Vendor.Entity = null;
						previousValue.VendorModels.Remove(this);
					}
					this._Vendor.Entity = value;
					if ((value != null))
					{
						value.VendorModels.Add(this);
						this._idVendor = value.id;
					}
					else
					{
						this._idVendor = default(int);
					}
					this.SendPropertyChanged("Vendor");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.City")]
	public partial class City : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _Name;
		
		private string _Code;
		
		private string _Region;
		
		private string _State;
		
		private string _Country;
		
		private double _lat;
		
		private double _lng;
		
		private string _FullName;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnRegionChanging(string value);
    partial void OnRegionChanged();
    partial void OnStateChanging(string value);
    partial void OnStateChanged();
    partial void OnCountryChanging(string value);
    partial void OnCountryChanged();
    partial void OnlatChanging(double value);
    partial void OnlatChanged();
    partial void OnlngChanging(double value);
    partial void OnlngChanged();
    partial void OnFullNameChanging(string value);
    partial void OnFullNameChanged();
    #endregion
		
		public City()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="NChar(3) NOT NULL", CanBeNull=false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Region", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Region
		{
			get
			{
				return this._Region;
			}
			set
			{
				if ((this._Region != value))
				{
					this.OnRegionChanging(value);
					this.SendPropertyChanging();
					this._Region = value;
					this.SendPropertyChanged("Region");
					this.OnRegionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_State", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string State
		{
			get
			{
				return this._State;
			}
			set
			{
				if ((this._State != value))
				{
					this.OnStateChanging(value);
					this.SendPropertyChanging();
					this._State = value;
					this.SendPropertyChanged("State");
					this.OnStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Country", DbType="NVarChar(35) NOT NULL", CanBeNull=false)]
		public string Country
		{
			get
			{
				return this._Country;
			}
			set
			{
				if ((this._Country != value))
				{
					this.OnCountryChanging(value);
					this.SendPropertyChanging();
					this._Country = value;
					this.SendPropertyChanged("Country");
					this.OnCountryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lat", DbType="Float NOT NULL")]
		public double lat
		{
			get
			{
				return this._lat;
			}
			set
			{
				if ((this._lat != value))
				{
					this.OnlatChanging(value);
					this.SendPropertyChanging();
					this._lat = value;
					this.SendPropertyChanged("lat");
					this.OnlatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lng", DbType="Float NOT NULL")]
		public double lng
		{
			get
			{
				return this._lng;
			}
			set
			{
				if ((this._lng != value))
				{
					this.OnlngChanging(value);
					this.SendPropertyChanging();
					this._lng = value;
					this.SendPropertyChanged("lng");
					this.OnlngChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FullName", DbType="NVarChar(300) NOT NULL", CanBeNull=false)]
		public string FullName
		{
			get
			{
				return this._FullName;
			}
			set
			{
				if ((this._FullName != value))
				{
					this.OnFullNameChanging(value);
					this.SendPropertyChanging();
					this._FullName = value;
					this.SendPropertyChanged("FullName");
					this.OnFullNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Account")]
	public partial class Account : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _CustomerId;
		
		private int _Active;
		
		private string _Name;
		
		private string _Number;
		
		private string _Notes;
		
		private EntitySet<Department> _Departments;
		
		private EntityRef<Customer> _Customer;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnCustomerIdChanging(int value);
    partial void OnCustomerIdChanged();
    partial void OnActiveChanging(int value);
    partial void OnActiveChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnNumberChanging(string value);
    partial void OnNumberChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    #endregion
		
		public Account()
		{
			this._Departments = new EntitySet<Department>(new Action<Department>(this.attach_Departments), new Action<Department>(this.detach_Departments));
			this._Customer = default(EntityRef<Customer>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerId", DbType="Int NOT NULL")]
		public int CustomerId
		{
			get
			{
				return this._CustomerId;
			}
			set
			{
				if ((this._CustomerId != value))
				{
					if (this._Customer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCustomerIdChanging(value);
					this.SendPropertyChanging();
					this._CustomerId = value;
					this.SendPropertyChanged("CustomerId");
					this.OnCustomerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Int NOT NULL")]
		public int Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Number", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string Number
		{
			get
			{
				return this._Number;
			}
			set
			{
				if ((this._Number != value))
				{
					this.OnNumberChanging(value);
					this.SendPropertyChanging();
					this._Number = value;
					this.SendPropertyChanged("Number");
					this.OnNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_Department", Storage="_Departments", ThisKey="id", OtherKey="AccountId")]
		public EntitySet<Department> Departments
		{
			get
			{
				return this._Departments;
			}
			set
			{
				this._Departments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_Account", Storage="_Customer", ThisKey="CustomerId", OtherKey="id", IsForeignKey=true)]
		public Customer Customer
		{
			get
			{
				return this._Customer.Entity;
			}
			set
			{
				Customer previousValue = this._Customer.Entity;
				if (((previousValue != value) 
							|| (this._Customer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Customer.Entity = null;
						previousValue.Accounts.Remove(this);
					}
					this._Customer.Entity = value;
					if ((value != null))
					{
						value.Accounts.Add(this);
						this._CustomerId = value.id;
					}
					else
					{
						this._CustomerId = default(int);
					}
					this.SendPropertyChanged("Customer");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Departments(Department entity)
		{
			this.SendPropertyChanging();
			entity.Account = this;
		}
		
		private void detach_Departments(Department entity)
		{
			this.SendPropertyChanging();
			entity.Account = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Department")]
	public partial class Department : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _AccountId;
		
		private string _Code;
		
		private string _Name;
		
		private EntityRef<Account> _Account;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnAccountIdChanging(int value);
    partial void OnAccountIdChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public Department()
		{
			this._Account = default(EntityRef<Account>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountId", DbType="Int NOT NULL")]
		public int AccountId
		{
			get
			{
				return this._AccountId;
			}
			set
			{
				if ((this._AccountId != value))
				{
					if (this._Account.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAccountIdChanging(value);
					this.SendPropertyChanging();
					this._AccountId = value;
					this.SendPropertyChanged("AccountId");
					this.OnAccountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_Department", Storage="_Account", ThisKey="AccountId", OtherKey="id", IsForeignKey=true)]
		public Account Account
		{
			get
			{
				return this._Account.Entity;
			}
			set
			{
				Account previousValue = this._Account.Entity;
				if (((previousValue != value) 
							|| (this._Account.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Account.Entity = null;
						previousValue.Departments.Remove(this);
					}
					this._Account.Entity = value;
					if ((value != null))
					{
						value.Departments.Add(this);
						this._AccountId = value.id;
					}
					else
					{
						this._AccountId = default(int);
					}
					this.SendPropertyChanged("Account");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TotalHotelEmission")]
	public partial class TotalHotelEmission
	{
		
		private int _id;
		
		private int _PnrId;
		
		private string _AccountNumber;
		
		private int _SegmentID;
		
		private string _PropertyCode;
		
		private string _CityCode;
		
		private System.DateTime _StartDateTime;
		
		private string _PassengerAssoc;
		
		private string _VendorName;
		
		private string _SpecificRate;
		
		private string _Street1;
		
		private string _City;
		
		private string _State;
		
		private string _ZipCode;
		
		private string _Country;
		
		private string _PhoneNumber;
		
		private string _FaxNumber;
		
		private string _RoomType;
		
		private int _NumAdults;
		
		private int _NumRooms;
		
		private System.Nullable<int> _RoomNights;
		
		private System.Nullable<double> _TotalCO2;
		
		private System.Nullable<double> _TotalCH4;
		
		private System.Nullable<double> _TotalNOx;
		
		private System.Nullable<double> _TotalH2O;
		
		public TotalHotelEmission()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL")]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this._id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PnrId", DbType="Int NOT NULL")]
		public int PnrId
		{
			get
			{
				return this._PnrId;
			}
			set
			{
				if ((this._PnrId != value))
				{
					this._PnrId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountNumber", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string AccountNumber
		{
			get
			{
				return this._AccountNumber;
			}
			set
			{
				if ((this._AccountNumber != value))
				{
					this._AccountNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SegmentID", DbType="Int NOT NULL")]
		public int SegmentID
		{
			get
			{
				return this._SegmentID;
			}
			set
			{
				if ((this._SegmentID != value))
				{
					this._SegmentID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PropertyCode", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string PropertyCode
		{
			get
			{
				return this._PropertyCode;
			}
			set
			{
				if ((this._PropertyCode != value))
				{
					this._PropertyCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CityCode", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string CityCode
		{
			get
			{
				return this._CityCode;
			}
			set
			{
				if ((this._CityCode != value))
				{
					this._CityCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime StartDateTime
		{
			get
			{
				return this._StartDateTime;
			}
			set
			{
				if ((this._StartDateTime != value))
				{
					this._StartDateTime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PassengerAssoc", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string PassengerAssoc
		{
			get
			{
				return this._PassengerAssoc;
			}
			set
			{
				if ((this._PassengerAssoc != value))
				{
					this._PassengerAssoc = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VendorName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string VendorName
		{
			get
			{
				return this._VendorName;
			}
			set
			{
				if ((this._VendorName != value))
				{
					this._VendorName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpecificRate", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string SpecificRate
		{
			get
			{
				return this._SpecificRate;
			}
			set
			{
				if ((this._SpecificRate != value))
				{
					this._SpecificRate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Street1", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Street1
		{
			get
			{
				return this._Street1;
			}
			set
			{
				if ((this._Street1 != value))
				{
					this._Street1 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string City
		{
			get
			{
				return this._City;
			}
			set
			{
				if ((this._City != value))
				{
					this._City = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_State", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string State
		{
			get
			{
				return this._State;
			}
			set
			{
				if ((this._State != value))
				{
					this._State = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ZipCode", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ZipCode
		{
			get
			{
				return this._ZipCode;
			}
			set
			{
				if ((this._ZipCode != value))
				{
					this._ZipCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Country", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Country
		{
			get
			{
				return this._Country;
			}
			set
			{
				if ((this._Country != value))
				{
					this._Country = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneNumber", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string PhoneNumber
		{
			get
			{
				return this._PhoneNumber;
			}
			set
			{
				if ((this._PhoneNumber != value))
				{
					this._PhoneNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FaxNumber", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string FaxNumber
		{
			get
			{
				return this._FaxNumber;
			}
			set
			{
				if ((this._FaxNumber != value))
				{
					this._FaxNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoomType", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string RoomType
		{
			get
			{
				return this._RoomType;
			}
			set
			{
				if ((this._RoomType != value))
				{
					this._RoomType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumAdults", DbType="Int NOT NULL")]
		public int NumAdults
		{
			get
			{
				return this._NumAdults;
			}
			set
			{
				if ((this._NumAdults != value))
				{
					this._NumAdults = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumRooms", DbType="Int NOT NULL")]
		public int NumRooms
		{
			get
			{
				return this._NumRooms;
			}
			set
			{
				if ((this._NumRooms != value))
				{
					this._NumRooms = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoomNights", DbType="Int")]
		public System.Nullable<int> RoomNights
		{
			get
			{
				return this._RoomNights;
			}
			set
			{
				if ((this._RoomNights != value))
				{
					this._RoomNights = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalCO2", DbType="Float")]
		public System.Nullable<double> TotalCO2
		{
			get
			{
				return this._TotalCO2;
			}
			set
			{
				if ((this._TotalCO2 != value))
				{
					this._TotalCO2 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalCH4", DbType="Float")]
		public System.Nullable<double> TotalCH4
		{
			get
			{
				return this._TotalCH4;
			}
			set
			{
				if ((this._TotalCH4 != value))
				{
					this._TotalCH4 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalNOx", DbType="Float")]
		public System.Nullable<double> TotalNOx
		{
			get
			{
				return this._TotalNOx;
			}
			set
			{
				if ((this._TotalNOx != value))
				{
					this._TotalNOx = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalH2O", DbType="Float")]
		public System.Nullable<double> TotalH2O
		{
			get
			{
				return this._TotalH2O;
			}
			set
			{
				if ((this._TotalH2O != value))
				{
					this._TotalH2O = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TotalTravelEmission")]
	public partial class TotalTravelEmission
	{
		
		private int _SegmentId;
		
		private int _PnrId;
		
		private string _AccountNumber;
		
		private System.DateTime _StartDateTime;
		
		private string _CityCode;
		
		private System.Nullable<double> _TotalCO2;
		
		private System.Nullable<double> _TotalCH4;
		
		private System.Nullable<double> _TotalNOx;
		
		private System.Nullable<double> _TotalH2O;
		
		public TotalTravelEmission()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SegmentId", DbType="Int NOT NULL")]
		public int SegmentId
		{
			get
			{
				return this._SegmentId;
			}
			set
			{
				if ((this._SegmentId != value))
				{
					this._SegmentId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PnrId", DbType="Int NOT NULL")]
		public int PnrId
		{
			get
			{
				return this._PnrId;
			}
			set
			{
				if ((this._PnrId != value))
				{
					this._PnrId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountNumber", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string AccountNumber
		{
			get
			{
				return this._AccountNumber;
			}
			set
			{
				if ((this._AccountNumber != value))
				{
					this._AccountNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime StartDateTime
		{
			get
			{
				return this._StartDateTime;
			}
			set
			{
				if ((this._StartDateTime != value))
				{
					this._StartDateTime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CityCode", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string CityCode
		{
			get
			{
				return this._CityCode;
			}
			set
			{
				if ((this._CityCode != value))
				{
					this._CityCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalCO2", DbType="Float")]
		public System.Nullable<double> TotalCO2
		{
			get
			{
				return this._TotalCO2;
			}
			set
			{
				if ((this._TotalCO2 != value))
				{
					this._TotalCO2 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalCH4", DbType="Float")]
		public System.Nullable<double> TotalCH4
		{
			get
			{
				return this._TotalCH4;
			}
			set
			{
				if ((this._TotalCH4 != value))
				{
					this._TotalCH4 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalNOx", DbType="Float")]
		public System.Nullable<double> TotalNOx
		{
			get
			{
				return this._TotalNOx;
			}
			set
			{
				if ((this._TotalNOx != value))
				{
					this._TotalNOx = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalH2O", DbType="Float")]
		public System.Nullable<double> TotalH2O
		{
			get
			{
				return this._TotalH2O;
			}
			set
			{
				if ((this._TotalH2O != value))
				{
					this._TotalH2O = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Passenger")]
	public partial class Passenger : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _PnrId;
		
		private short _PsgrNum;
		
		private byte _LastNameNum;
		
		private byte _FirstNameNum;
		
		private string _LastName;
		
		private string _FirstName;
		
		private byte _Type;
		
		private string _Remark;
		
		private string _Title;
		
		private string _DeptCode;
		
		private EntityRef<Pnr> _Pnr;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnPnrIdChanging(int value);
    partial void OnPnrIdChanged();
    partial void OnPsgrNumChanging(short value);
    partial void OnPsgrNumChanged();
    partial void OnLastNameNumChanging(byte value);
    partial void OnLastNameNumChanged();
    partial void OnFirstNameNumChanging(byte value);
    partial void OnFirstNameNumChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnTypeChanging(byte value);
    partial void OnTypeChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnDeptCodeChanging(string value);
    partial void OnDeptCodeChanged();
    #endregion
		
		public Passenger()
		{
			this._Pnr = default(EntityRef<Pnr>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PnrId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int PnrId
		{
			get
			{
				return this._PnrId;
			}
			set
			{
				if ((this._PnrId != value))
				{
					if (this._Pnr.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPnrIdChanging(value);
					this.SendPropertyChanging();
					this._PnrId = value;
					this.SendPropertyChanged("PnrId");
					this.OnPnrIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PsgrNum", DbType="SmallInt NOT NULL", IsPrimaryKey=true)]
		public short PsgrNum
		{
			get
			{
				return this._PsgrNum;
			}
			set
			{
				if ((this._PsgrNum != value))
				{
					this.OnPsgrNumChanging(value);
					this.SendPropertyChanging();
					this._PsgrNum = value;
					this.SendPropertyChanged("PsgrNum");
					this.OnPsgrNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastNameNum", DbType="TinyInt NOT NULL")]
		public byte LastNameNum
		{
			get
			{
				return this._LastNameNum;
			}
			set
			{
				if ((this._LastNameNum != value))
				{
					this.OnLastNameNumChanging(value);
					this.SendPropertyChanging();
					this._LastNameNum = value;
					this.SendPropertyChanged("LastNameNum");
					this.OnLastNameNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstNameNum", DbType="TinyInt NOT NULL")]
		public byte FirstNameNum
		{
			get
			{
				return this._FirstNameNum;
			}
			set
			{
				if ((this._FirstNameNum != value))
				{
					this.OnFirstNameNumChanging(value);
					this.SendPropertyChanging();
					this._FirstNameNum = value;
					this.SendPropertyChanged("FirstNameNum");
					this.OnFirstNameNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="TinyInt NOT NULL")]
		public byte Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remark", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(12) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeptCode", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string DeptCode
		{
			get
			{
				return this._DeptCode;
			}
			set
			{
				if ((this._DeptCode != value))
				{
					this.OnDeptCodeChanging(value);
					this.SendPropertyChanging();
					this._DeptCode = value;
					this.SendPropertyChanged("DeptCode");
					this.OnDeptCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Pnr_Passenger", Storage="_Pnr", ThisKey="PnrId", OtherKey="id", IsForeignKey=true)]
		public Pnr Pnr
		{
			get
			{
				return this._Pnr.Entity;
			}
			set
			{
				Pnr previousValue = this._Pnr.Entity;
				if (((previousValue != value) 
							|| (this._Pnr.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Pnr.Entity = null;
						previousValue.Passengers.Remove(this);
					}
					this._Pnr.Entity = value;
					if ((value != null))
					{
						value.Passengers.Add(this);
						this._PnrId = value.id;
					}
					else
					{
						this._PnrId = default(int);
					}
					this.SendPropertyChanged("Pnr");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Customer")]
	public partial class Customer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.Nullable<int> _idClient;
		
		private string _Name;
		
		private string _Description;
		
		private int _Status;
		
		private string _url;
		
		private string _EmailAddress;
		
		private string _LogoPath;
		
		private string _Address;
		
		private string _City;
		
		private string _StateProvince;
		
		private string _Country;
		
		private string _PostalCode;
		
		private System.Nullable<System.DateTime> _DateofFirstPurchase;
		
		private string _DateofFirstPurchaseName;
		
		private string _Phone;
		
		private System.Nullable<decimal> _AnnualIncome;
		
		private string _Company;
		
		private string _CustomerGroup;
		
		private string _FullName;
		
		private string _Demographic;
		
		private int _LogoWidth;
		
		private int _LogoHeight;
		
		private EntitySet<Config> _Configs;
		
		private EntitySet<CustomerUser> _CustomerUsers;
		
		private EntitySet<EventLogin> _EventLogins;
		
		private EntitySet<Group> _Groups;
		
		private EntitySet<ItemType> _ItemTypes;
		
		private EntitySet<Account> _Accounts;
		
		private EntityRef<Client> _Client;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnidClientChanging(System.Nullable<int> value);
    partial void OnidClientChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnurlChanging(string value);
    partial void OnurlChanged();
    partial void OnEmailAddressChanging(string value);
    partial void OnEmailAddressChanged();
    partial void OnLogoPathChanging(string value);
    partial void OnLogoPathChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnCityChanging(string value);
    partial void OnCityChanged();
    partial void OnStateProvinceChanging(string value);
    partial void OnStateProvinceChanged();
    partial void OnCountryChanging(string value);
    partial void OnCountryChanged();
    partial void OnPostalCodeChanging(string value);
    partial void OnPostalCodeChanged();
    partial void OnDateofFirstPurchaseChanging(System.Nullable<System.DateTime> value);
    partial void OnDateofFirstPurchaseChanged();
    partial void OnDateofFirstPurchaseNameChanging(string value);
    partial void OnDateofFirstPurchaseNameChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    partial void OnAnnualIncomeChanging(System.Nullable<decimal> value);
    partial void OnAnnualIncomeChanged();
    partial void OnCompanyChanging(string value);
    partial void OnCompanyChanged();
    partial void OnCustomerGroupChanging(string value);
    partial void OnCustomerGroupChanged();
    partial void OnFullNameChanging(string value);
    partial void OnFullNameChanged();
    partial void OnDemographicChanging(string value);
    partial void OnDemographicChanged();
    partial void OnLogoWidthChanging(int value);
    partial void OnLogoWidthChanged();
    partial void OnLogoHeightChanging(int value);
    partial void OnLogoHeightChanged();
    #endregion
		
		public Customer()
		{
			this._Configs = new EntitySet<Config>(new Action<Config>(this.attach_Configs), new Action<Config>(this.detach_Configs));
			this._CustomerUsers = new EntitySet<CustomerUser>(new Action<CustomerUser>(this.attach_CustomerUsers), new Action<CustomerUser>(this.detach_CustomerUsers));
			this._EventLogins = new EntitySet<EventLogin>(new Action<EventLogin>(this.attach_EventLogins), new Action<EventLogin>(this.detach_EventLogins));
			this._Groups = new EntitySet<Group>(new Action<Group>(this.attach_Groups), new Action<Group>(this.detach_Groups));
			this._ItemTypes = new EntitySet<ItemType>(new Action<ItemType>(this.attach_ItemTypes), new Action<ItemType>(this.detach_ItemTypes));
			this._Accounts = new EntitySet<Account>(new Action<Account>(this.attach_Accounts), new Action<Account>(this.detach_Accounts));
			this._Client = default(EntityRef<Client>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idClient", DbType="Int")]
		public System.Nullable<int> idClient
		{
			get
			{
				return this._idClient;
			}
			set
			{
				if ((this._idClient != value))
				{
					if (this._Client.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidClientChanging(value);
					this.SendPropertyChanging();
					this._idClient = value;
					this.SendPropertyChanged("idClient");
					this.OnidClientChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(152)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(512)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_url", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string url
		{
			get
			{
				return this._url;
			}
			set
			{
				if ((this._url != value))
				{
					this.OnurlChanging(value);
					this.SendPropertyChanging();
					this._url = value;
					this.SendPropertyChanged("url");
					this.OnurlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmailAddress", DbType="NVarChar(255)")]
		public string EmailAddress
		{
			get
			{
				return this._EmailAddress;
			}
			set
			{
				if ((this._EmailAddress != value))
				{
					this.OnEmailAddressChanging(value);
					this.SendPropertyChanging();
					this._EmailAddress = value;
					this.SendPropertyChanged("EmailAddress");
					this.OnEmailAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogoPath", DbType="NVarChar(255)")]
		public string LogoPath
		{
			get
			{
				return this._LogoPath;
			}
			set
			{
				if ((this._LogoPath != value))
				{
					this.OnLogoPathChanging(value);
					this.SendPropertyChanging();
					this._LogoPath = value;
					this.SendPropertyChanged("LogoPath");
					this.OnLogoPathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(120)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City", DbType="NVarChar(30)")]
		public string City
		{
			get
			{
				return this._City;
			}
			set
			{
				if ((this._City != value))
				{
					this.OnCityChanging(value);
					this.SendPropertyChanging();
					this._City = value;
					this.SendPropertyChanged("City");
					this.OnCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StateProvince", DbType="NVarChar(50)")]
		public string StateProvince
		{
			get
			{
				return this._StateProvince;
			}
			set
			{
				if ((this._StateProvince != value))
				{
					this.OnStateProvinceChanging(value);
					this.SendPropertyChanging();
					this._StateProvince = value;
					this.SendPropertyChanged("StateProvince");
					this.OnStateProvinceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Country", DbType="NVarChar(50)")]
		public string Country
		{
			get
			{
				return this._Country;
			}
			set
			{
				if ((this._Country != value))
				{
					this.OnCountryChanging(value);
					this.SendPropertyChanging();
					this._Country = value;
					this.SendPropertyChanged("Country");
					this.OnCountryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostalCode", DbType="NVarChar(15)")]
		public string PostalCode
		{
			get
			{
				return this._PostalCode;
			}
			set
			{
				if ((this._PostalCode != value))
				{
					this.OnPostalCodeChanging(value);
					this.SendPropertyChanging();
					this._PostalCode = value;
					this.SendPropertyChanged("PostalCode");
					this.OnPostalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateofFirstPurchase", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateofFirstPurchase
		{
			get
			{
				return this._DateofFirstPurchase;
			}
			set
			{
				if ((this._DateofFirstPurchase != value))
				{
					this.OnDateofFirstPurchaseChanging(value);
					this.SendPropertyChanging();
					this._DateofFirstPurchase = value;
					this.SendPropertyChanged("DateofFirstPurchase");
					this.OnDateofFirstPurchaseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateofFirstPurchaseName", DbType="NVarChar(93)")]
		public string DateofFirstPurchaseName
		{
			get
			{
				return this._DateofFirstPurchaseName;
			}
			set
			{
				if ((this._DateofFirstPurchaseName != value))
				{
					this.OnDateofFirstPurchaseNameChanging(value);
					this.SendPropertyChanging();
					this._DateofFirstPurchaseName = value;
					this.SendPropertyChanged("DateofFirstPurchaseName");
					this.OnDateofFirstPurchaseNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="NVarChar(20)")]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this.OnPhoneChanging(value);
					this.SendPropertyChanging();
					this._Phone = value;
					this.SendPropertyChanged("Phone");
					this.OnPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnnualIncome", DbType="Money")]
		public System.Nullable<decimal> AnnualIncome
		{
			get
			{
				return this._AnnualIncome;
			}
			set
			{
				if ((this._AnnualIncome != value))
				{
					this.OnAnnualIncomeChanging(value);
					this.SendPropertyChanging();
					this._AnnualIncome = value;
					this.SendPropertyChanged("AnnualIncome");
					this.OnAnnualIncomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Company", DbType="NVarChar(50)")]
		public string Company
		{
			get
			{
				return this._Company;
			}
			set
			{
				if ((this._Company != value))
				{
					this.OnCompanyChanging(value);
					this.SendPropertyChanging();
					this._Company = value;
					this.SendPropertyChanged("Company");
					this.OnCompanyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerGroup", DbType="NVarChar(50)")]
		public string CustomerGroup
		{
			get
			{
				return this._CustomerGroup;
			}
			set
			{
				if ((this._CustomerGroup != value))
				{
					this.OnCustomerGroupChanging(value);
					this.SendPropertyChanging();
					this._CustomerGroup = value;
					this.SendPropertyChanged("CustomerGroup");
					this.OnCustomerGroupChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FullName", DbType="NVarChar(50)")]
		public string FullName
		{
			get
			{
				return this._FullName;
			}
			set
			{
				if ((this._FullName != value))
				{
					this.OnFullNameChanging(value);
					this.SendPropertyChanging();
					this._FullName = value;
					this.SendPropertyChanged("FullName");
					this.OnFullNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Demographic", DbType="NVarChar(50)")]
		public string Demographic
		{
			get
			{
				return this._Demographic;
			}
			set
			{
				if ((this._Demographic != value))
				{
					this.OnDemographicChanging(value);
					this.SendPropertyChanging();
					this._Demographic = value;
					this.SendPropertyChanged("Demographic");
					this.OnDemographicChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogoWidth", DbType="Int NOT NULL")]
		public int LogoWidth
		{
			get
			{
				return this._LogoWidth;
			}
			set
			{
				if ((this._LogoWidth != value))
				{
					this.OnLogoWidthChanging(value);
					this.SendPropertyChanging();
					this._LogoWidth = value;
					this.SendPropertyChanged("LogoWidth");
					this.OnLogoWidthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogoHeight", DbType="Int NOT NULL")]
		public int LogoHeight
		{
			get
			{
				return this._LogoHeight;
			}
			set
			{
				if ((this._LogoHeight != value))
				{
					this.OnLogoHeightChanging(value);
					this.SendPropertyChanging();
					this._LogoHeight = value;
					this.SendPropertyChanged("LogoHeight");
					this.OnLogoHeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_Config", Storage="_Configs", ThisKey="id", OtherKey="idCustomer")]
		public EntitySet<Config> Configs
		{
			get
			{
				return this._Configs;
			}
			set
			{
				this._Configs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_CustomerUser", Storage="_CustomerUsers", ThisKey="id", OtherKey="idCustomer")]
		public EntitySet<CustomerUser> CustomerUsers
		{
			get
			{
				return this._CustomerUsers;
			}
			set
			{
				this._CustomerUsers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_EventLogin", Storage="_EventLogins", ThisKey="id", OtherKey="idCustomer")]
		public EntitySet<EventLogin> EventLogins
		{
			get
			{
				return this._EventLogins;
			}
			set
			{
				this._EventLogins.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_Group", Storage="_Groups", ThisKey="id", OtherKey="idCustomer")]
		public EntitySet<Group> Groups
		{
			get
			{
				return this._Groups;
			}
			set
			{
				this._Groups.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_ItemType", Storage="_ItemTypes", ThisKey="id", OtherKey="idCustomer")]
		public EntitySet<ItemType> ItemTypes
		{
			get
			{
				return this._ItemTypes;
			}
			set
			{
				this._ItemTypes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_Account", Storage="_Accounts", ThisKey="id", OtherKey="CustomerId")]
		public EntitySet<Account> Accounts
		{
			get
			{
				return this._Accounts;
			}
			set
			{
				this._Accounts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Client_Customer", Storage="_Client", ThisKey="idClient", OtherKey="id", IsForeignKey=true)]
		public Client Client
		{
			get
			{
				return this._Client.Entity;
			}
			set
			{
				Client previousValue = this._Client.Entity;
				if (((previousValue != value) 
							|| (this._Client.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Client.Entity = null;
						previousValue.Customers.Remove(this);
					}
					this._Client.Entity = value;
					if ((value != null))
					{
						value.Customers.Add(this);
						this._idClient = value.id;
					}
					else
					{
						this._idClient = default(Nullable<int>);
					}
					this.SendPropertyChanged("Client");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Configs(Config entity)
		{
			this.SendPropertyChanging();
			entity.Customer = this;
		}
		
		private void detach_Configs(Config entity)
		{
			this.SendPropertyChanging();
			entity.Customer = null;
		}
		
		private void attach_CustomerUsers(CustomerUser entity)
		{
			this.SendPropertyChanging();
			entity.Customer = this;
		}
		
		private void detach_CustomerUsers(CustomerUser entity)
		{
			this.SendPropertyChanging();
			entity.Customer = null;
		}
		
		private void attach_EventLogins(EventLogin entity)
		{
			this.SendPropertyChanging();
			entity.Customer = this;
		}
		
		private void detach_EventLogins(EventLogin entity)
		{
			this.SendPropertyChanging();
			entity.Customer = null;
		}
		
		private void attach_Groups(Group entity)
		{
			this.SendPropertyChanging();
			entity.Customer = this;
		}
		
		private void detach_Groups(Group entity)
		{
			this.SendPropertyChanging();
			entity.Customer = null;
		}
		
		private void attach_ItemTypes(ItemType entity)
		{
			this.SendPropertyChanging();
			entity.Customer = this;
		}
		
		private void detach_ItemTypes(ItemType entity)
		{
			this.SendPropertyChanging();
			entity.Customer = null;
		}
		
		private void attach_Accounts(Account entity)
		{
			this.SendPropertyChanging();
			entity.Customer = this;
		}
		
		private void detach_Accounts(Account entity)
		{
			this.SendPropertyChanging();
			entity.Customer = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Client")]
	public partial class Client : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.Nullable<int> _idClient;
		
		private string _Name;
		
		private string _Description;
		
		private int _Status;
		
		private string _url;
		
		private string _EmailAddress;
		
		private string _LogoPath;
		
		private string _Address;
		
		private string _City;
		
		private string _StateProvince;
		
		private string _Country;
		
		private string _PostalCode;
		
		private System.Nullable<System.DateTime> _DateofFirstPurchase;
		
		private string _DateofFirstPurchaseName;
		
		private string _Phone;
		
		private System.Nullable<decimal> _AnnualIncome;
		
		private string _Company;
		
		private string _ClientGroup;
		
		private string _FullName;
		
		private string _Demographic;
		
		private int _LogoWidth;
		
		private int _LogoHeight;
		
		private EntitySet<Customer> _Customers;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnidClientChanging(System.Nullable<int> value);
    partial void OnidClientChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnurlChanging(string value);
    partial void OnurlChanged();
    partial void OnEmailAddressChanging(string value);
    partial void OnEmailAddressChanged();
    partial void OnLogoPathChanging(string value);
    partial void OnLogoPathChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnCityChanging(string value);
    partial void OnCityChanged();
    partial void OnStateProvinceChanging(string value);
    partial void OnStateProvinceChanged();
    partial void OnCountryChanging(string value);
    partial void OnCountryChanged();
    partial void OnPostalCodeChanging(string value);
    partial void OnPostalCodeChanged();
    partial void OnDateofFirstPurchaseChanging(System.Nullable<System.DateTime> value);
    partial void OnDateofFirstPurchaseChanged();
    partial void OnDateofFirstPurchaseNameChanging(string value);
    partial void OnDateofFirstPurchaseNameChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    partial void OnAnnualIncomeChanging(System.Nullable<decimal> value);
    partial void OnAnnualIncomeChanged();
    partial void OnCompanyChanging(string value);
    partial void OnCompanyChanged();
    partial void OnClientGroupChanging(string value);
    partial void OnClientGroupChanged();
    partial void OnFullNameChanging(string value);
    partial void OnFullNameChanged();
    partial void OnDemographicChanging(string value);
    partial void OnDemographicChanged();
    partial void OnLogoWidthChanging(int value);
    partial void OnLogoWidthChanged();
    partial void OnLogoHeightChanging(int value);
    partial void OnLogoHeightChanged();
    #endregion
		
		public Client()
		{
			this._Customers = new EntitySet<Customer>(new Action<Customer>(this.attach_Customers), new Action<Customer>(this.detach_Customers));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idClient", DbType="Int")]
		public System.Nullable<int> idClient
		{
			get
			{
				return this._idClient;
			}
			set
			{
				if ((this._idClient != value))
				{
					this.OnidClientChanging(value);
					this.SendPropertyChanging();
					this._idClient = value;
					this.SendPropertyChanged("idClient");
					this.OnidClientChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(152)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(512)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_url", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string url
		{
			get
			{
				return this._url;
			}
			set
			{
				if ((this._url != value))
				{
					this.OnurlChanging(value);
					this.SendPropertyChanging();
					this._url = value;
					this.SendPropertyChanged("url");
					this.OnurlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmailAddress", DbType="NVarChar(255)")]
		public string EmailAddress
		{
			get
			{
				return this._EmailAddress;
			}
			set
			{
				if ((this._EmailAddress != value))
				{
					this.OnEmailAddressChanging(value);
					this.SendPropertyChanging();
					this._EmailAddress = value;
					this.SendPropertyChanged("EmailAddress");
					this.OnEmailAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogoPath", DbType="NVarChar(255)")]
		public string LogoPath
		{
			get
			{
				return this._LogoPath;
			}
			set
			{
				if ((this._LogoPath != value))
				{
					this.OnLogoPathChanging(value);
					this.SendPropertyChanging();
					this._LogoPath = value;
					this.SendPropertyChanged("LogoPath");
					this.OnLogoPathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(120)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City", DbType="NVarChar(30)")]
		public string City
		{
			get
			{
				return this._City;
			}
			set
			{
				if ((this._City != value))
				{
					this.OnCityChanging(value);
					this.SendPropertyChanging();
					this._City = value;
					this.SendPropertyChanged("City");
					this.OnCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StateProvince", DbType="NVarChar(50)")]
		public string StateProvince
		{
			get
			{
				return this._StateProvince;
			}
			set
			{
				if ((this._StateProvince != value))
				{
					this.OnStateProvinceChanging(value);
					this.SendPropertyChanging();
					this._StateProvince = value;
					this.SendPropertyChanged("StateProvince");
					this.OnStateProvinceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Country", DbType="NVarChar(50)")]
		public string Country
		{
			get
			{
				return this._Country;
			}
			set
			{
				if ((this._Country != value))
				{
					this.OnCountryChanging(value);
					this.SendPropertyChanging();
					this._Country = value;
					this.SendPropertyChanged("Country");
					this.OnCountryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostalCode", DbType="NVarChar(15)")]
		public string PostalCode
		{
			get
			{
				return this._PostalCode;
			}
			set
			{
				if ((this._PostalCode != value))
				{
					this.OnPostalCodeChanging(value);
					this.SendPropertyChanging();
					this._PostalCode = value;
					this.SendPropertyChanged("PostalCode");
					this.OnPostalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateofFirstPurchase", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateofFirstPurchase
		{
			get
			{
				return this._DateofFirstPurchase;
			}
			set
			{
				if ((this._DateofFirstPurchase != value))
				{
					this.OnDateofFirstPurchaseChanging(value);
					this.SendPropertyChanging();
					this._DateofFirstPurchase = value;
					this.SendPropertyChanged("DateofFirstPurchase");
					this.OnDateofFirstPurchaseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateofFirstPurchaseName", DbType="NVarChar(93)")]
		public string DateofFirstPurchaseName
		{
			get
			{
				return this._DateofFirstPurchaseName;
			}
			set
			{
				if ((this._DateofFirstPurchaseName != value))
				{
					this.OnDateofFirstPurchaseNameChanging(value);
					this.SendPropertyChanging();
					this._DateofFirstPurchaseName = value;
					this.SendPropertyChanged("DateofFirstPurchaseName");
					this.OnDateofFirstPurchaseNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="NVarChar(20)")]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this.OnPhoneChanging(value);
					this.SendPropertyChanging();
					this._Phone = value;
					this.SendPropertyChanged("Phone");
					this.OnPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnnualIncome", DbType="Money")]
		public System.Nullable<decimal> AnnualIncome
		{
			get
			{
				return this._AnnualIncome;
			}
			set
			{
				if ((this._AnnualIncome != value))
				{
					this.OnAnnualIncomeChanging(value);
					this.SendPropertyChanging();
					this._AnnualIncome = value;
					this.SendPropertyChanged("AnnualIncome");
					this.OnAnnualIncomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Company", DbType="NVarChar(50)")]
		public string Company
		{
			get
			{
				return this._Company;
			}
			set
			{
				if ((this._Company != value))
				{
					this.OnCompanyChanging(value);
					this.SendPropertyChanging();
					this._Company = value;
					this.SendPropertyChanged("Company");
					this.OnCompanyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientGroup", DbType="NVarChar(50)")]
		public string ClientGroup
		{
			get
			{
				return this._ClientGroup;
			}
			set
			{
				if ((this._ClientGroup != value))
				{
					this.OnClientGroupChanging(value);
					this.SendPropertyChanging();
					this._ClientGroup = value;
					this.SendPropertyChanged("ClientGroup");
					this.OnClientGroupChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FullName", DbType="NVarChar(50)")]
		public string FullName
		{
			get
			{
				return this._FullName;
			}
			set
			{
				if ((this._FullName != value))
				{
					this.OnFullNameChanging(value);
					this.SendPropertyChanging();
					this._FullName = value;
					this.SendPropertyChanged("FullName");
					this.OnFullNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Demographic", DbType="NVarChar(50)")]
		public string Demographic
		{
			get
			{
				return this._Demographic;
			}
			set
			{
				if ((this._Demographic != value))
				{
					this.OnDemographicChanging(value);
					this.SendPropertyChanging();
					this._Demographic = value;
					this.SendPropertyChanged("Demographic");
					this.OnDemographicChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogoWidth", DbType="Int NOT NULL")]
		public int LogoWidth
		{
			get
			{
				return this._LogoWidth;
			}
			set
			{
				if ((this._LogoWidth != value))
				{
					this.OnLogoWidthChanging(value);
					this.SendPropertyChanging();
					this._LogoWidth = value;
					this.SendPropertyChanged("LogoWidth");
					this.OnLogoWidthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogoHeight", DbType="Int NOT NULL")]
		public int LogoHeight
		{
			get
			{
				return this._LogoHeight;
			}
			set
			{
				if ((this._LogoHeight != value))
				{
					this.OnLogoHeightChanging(value);
					this.SendPropertyChanging();
					this._LogoHeight = value;
					this.SendPropertyChanged("LogoHeight");
					this.OnLogoHeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Client_Customer", Storage="_Customers", ThisKey="id", OtherKey="idClient")]
		public EntitySet<Customer> Customers
		{
			get
			{
				return this._Customers;
			}
			set
			{
				this._Customers.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Customers(Customer entity)
		{
			this.SendPropertyChanging();
			entity.Client = this;
		}
		
		private void detach_Customers(Customer entity)
		{
			this.SendPropertyChanging();
			entity.Client = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TotalFlightEmission")]
	public partial class TotalFlightEmission
	{
		
		private int _id;
		
		private int _PnrId;
		
		private string _AccountNumber;
		
		private int _SegmentID;
		
		private int _NumPassengers;
		
		private System.DateTime _StartDateTime;
		
		private string _Vendor;
		
		private string _ClassOfService;
		
		private string _EquipmentType;
		
		private int _Miles;
		
		private string _StartCity;
		
		private string _EndCity;
		
		private System.Nullable<double> _TotalCO2;
		
		private System.Nullable<double> _TotalCH4;
		
		private System.Nullable<double> _TotalNOx;
		
		private System.Nullable<double> _TotalH2O;
		
		public TotalFlightEmission()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL")]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this._id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PnrId", DbType="Int NOT NULL")]
		public int PnrId
		{
			get
			{
				return this._PnrId;
			}
			set
			{
				if ((this._PnrId != value))
				{
					this._PnrId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountNumber", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string AccountNumber
		{
			get
			{
				return this._AccountNumber;
			}
			set
			{
				if ((this._AccountNumber != value))
				{
					this._AccountNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SegmentID", DbType="Int NOT NULL")]
		public int SegmentID
		{
			get
			{
				return this._SegmentID;
			}
			set
			{
				if ((this._SegmentID != value))
				{
					this._SegmentID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumPassengers", DbType="Int NOT NULL")]
		public int NumPassengers
		{
			get
			{
				return this._NumPassengers;
			}
			set
			{
				if ((this._NumPassengers != value))
				{
					this._NumPassengers = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime StartDateTime
		{
			get
			{
				return this._StartDateTime;
			}
			set
			{
				if ((this._StartDateTime != value))
				{
					this._StartDateTime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Vendor", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Vendor
		{
			get
			{
				return this._Vendor;
			}
			set
			{
				if ((this._Vendor != value))
				{
					this._Vendor = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassOfService", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ClassOfService
		{
			get
			{
				return this._ClassOfService;
			}
			set
			{
				if ((this._ClassOfService != value))
				{
					this._ClassOfService = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EquipmentType", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string EquipmentType
		{
			get
			{
				return this._EquipmentType;
			}
			set
			{
				if ((this._EquipmentType != value))
				{
					this._EquipmentType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Miles", DbType="Int NOT NULL")]
		public int Miles
		{
			get
			{
				return this._Miles;
			}
			set
			{
				if ((this._Miles != value))
				{
					this._Miles = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartCity", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string StartCity
		{
			get
			{
				return this._StartCity;
			}
			set
			{
				if ((this._StartCity != value))
				{
					this._StartCity = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndCity", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string EndCity
		{
			get
			{
				return this._EndCity;
			}
			set
			{
				if ((this._EndCity != value))
				{
					this._EndCity = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalCO2", DbType="Float")]
		public System.Nullable<double> TotalCO2
		{
			get
			{
				return this._TotalCO2;
			}
			set
			{
				if ((this._TotalCO2 != value))
				{
					this._TotalCO2 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalCH4", DbType="Float")]
		public System.Nullable<double> TotalCH4
		{
			get
			{
				return this._TotalCH4;
			}
			set
			{
				if ((this._TotalCH4 != value))
				{
					this._TotalCH4 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalNOx", DbType="Float")]
		public System.Nullable<double> TotalNOx
		{
			get
			{
				return this._TotalNOx;
			}
			set
			{
				if ((this._TotalNOx != value))
				{
					this._TotalNOx = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalH2O", DbType="Float")]
		public System.Nullable<double> TotalH2O
		{
			get
			{
				return this._TotalH2O;
			}
			set
			{
				if ((this._TotalH2O != value))
				{
					this._TotalH2O = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.InfoAirline")]
	public partial class InfoAirline : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Code;
		
		private string _Name;
		
		private string _PlateNumber;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnPlateNumberChanging(string value);
    partial void OnPlateNumberChanged();
    #endregion
		
		public InfoAirline()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="Char(3) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlateNumber", DbType="Char(3) NOT NULL", CanBeNull=false)]
		public string PlateNumber
		{
			get
			{
				return this._PlateNumber;
			}
			set
			{
				if ((this._PlateNumber != value))
				{
					this.OnPlateNumberChanging(value);
					this.SendPropertyChanging();
					this._PlateNumber = value;
					this.SendPropertyChanged("PlateNumber");
					this.OnPlateNumberChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FbUser")]
	public partial class FbUser : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _id;
		
		private int _numActions;
		
		private int _deleted;
		
		private string _Notes;
		
		private System.Nullable<System.Guid> _UserID;
		
		private System.DateTime _createdOn;
		
		private System.Nullable<System.DateTime> _endedOn;
		
		private EntitySet<FbInvite> _FbInvites;
		
		private EntitySet<FbUserLog> _FbUserLogs;
		
		private EntitySet<EcCar> _EcCars;
		
		private EntitySet<EcGeneral> _EcGenerals;
		
		private EntitySet<EcHome> _EcHomes;
		
		private EntitySet<FbUserSetting> _FbUserSettings;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(long value);
    partial void OnidChanged();
    partial void OnnumActionsChanging(int value);
    partial void OnnumActionsChanged();
    partial void OndeletedChanging(int value);
    partial void OndeletedChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    partial void OnUserIDChanging(System.Nullable<System.Guid> value);
    partial void OnUserIDChanged();
    partial void OncreatedOnChanging(System.DateTime value);
    partial void OncreatedOnChanged();
    partial void OnendedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnendedOnChanged();
    #endregion
		
		public FbUser()
		{
			this._FbInvites = new EntitySet<FbInvite>(new Action<FbInvite>(this.attach_FbInvites), new Action<FbInvite>(this.detach_FbInvites));
			this._FbUserLogs = new EntitySet<FbUserLog>(new Action<FbUserLog>(this.attach_FbUserLogs), new Action<FbUserLog>(this.detach_FbUserLogs));
			this._EcCars = new EntitySet<EcCar>(new Action<EcCar>(this.attach_EcCars), new Action<EcCar>(this.detach_EcCars));
			this._EcGenerals = new EntitySet<EcGeneral>(new Action<EcGeneral>(this.attach_EcGenerals), new Action<EcGeneral>(this.detach_EcGenerals));
			this._EcHomes = new EntitySet<EcHome>(new Action<EcHome>(this.attach_EcHomes), new Action<EcHome>(this.detach_EcHomes));
			this._FbUserSettings = new EntitySet<FbUserSetting>(new Action<FbUserSetting>(this.attach_FbUserSettings), new Action<FbUserSetting>(this.detach_FbUserSettings));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_numActions", DbType="Int NOT NULL")]
		public int numActions
		{
			get
			{
				return this._numActions;
			}
			set
			{
				if ((this._numActions != value))
				{
					this.OnnumActionsChanging(value);
					this.SendPropertyChanging();
					this._numActions = value;
					this.SendPropertyChanged("numActions");
					this.OnnumActionsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_deleted", DbType="Int NOT NULL")]
		public int deleted
		{
			get
			{
				return this._deleted;
			}
			set
			{
				if ((this._deleted != value))
				{
					this.OndeletedChanging(value);
					this.SendPropertyChanging();
					this._deleted = value;
					this.SendPropertyChanged("deleted");
					this.OndeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_createdOn", DbType="DateTime NOT NULL")]
		public System.DateTime createdOn
		{
			get
			{
				return this._createdOn;
			}
			set
			{
				if ((this._createdOn != value))
				{
					this.OncreatedOnChanging(value);
					this.SendPropertyChanging();
					this._createdOn = value;
					this.SendPropertyChanged("createdOn");
					this.OncreatedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_endedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> endedOn
		{
			get
			{
				return this._endedOn;
			}
			set
			{
				if ((this._endedOn != value))
				{
					this.OnendedOnChanging(value);
					this.SendPropertyChanging();
					this._endedOn = value;
					this.SendPropertyChanged("endedOn");
					this.OnendedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FbUser_FbInvite", Storage="_FbInvites", ThisKey="id", OtherKey="fbidFrom")]
		public EntitySet<FbInvite> FbInvites
		{
			get
			{
				return this._FbInvites;
			}
			set
			{
				this._FbInvites.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FbUser_FbUserLog", Storage="_FbUserLogs", ThisKey="id", OtherKey="idFbUser")]
		public EntitySet<FbUserLog> FbUserLogs
		{
			get
			{
				return this._FbUserLogs;
			}
			set
			{
				this._FbUserLogs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FbUser_EcCar", Storage="_EcCars", ThisKey="id", OtherKey="idFbUser")]
		public EntitySet<EcCar> EcCars
		{
			get
			{
				return this._EcCars;
			}
			set
			{
				this._EcCars.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FbUser_EcGeneral", Storage="_EcGenerals", ThisKey="id", OtherKey="idFbUser")]
		public EntitySet<EcGeneral> EcGenerals
		{
			get
			{
				return this._EcGenerals;
			}
			set
			{
				this._EcGenerals.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FbUser_EcHome", Storage="_EcHomes", ThisKey="id", OtherKey="idFbUser")]
		public EntitySet<EcHome> EcHomes
		{
			get
			{
				return this._EcHomes;
			}
			set
			{
				this._EcHomes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FbUser_FbUserSetting", Storage="_FbUserSettings", ThisKey="id", OtherKey="fbid")]
		public EntitySet<FbUserSetting> FbUserSettings
		{
			get
			{
				return this._FbUserSettings;
			}
			set
			{
				this._FbUserSettings.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_FbInvites(FbInvite entity)
		{
			this.SendPropertyChanging();
			entity.FbUser = this;
		}
		
		private void detach_FbInvites(FbInvite entity)
		{
			this.SendPropertyChanging();
			entity.FbUser = null;
		}
		
		private void attach_FbUserLogs(FbUserLog entity)
		{
			this.SendPropertyChanging();
			entity.FbUser = this;
		}
		
		private void detach_FbUserLogs(FbUserLog entity)
		{
			this.SendPropertyChanging();
			entity.FbUser = null;
		}
		
		private void attach_EcCars(EcCar entity)
		{
			this.SendPropertyChanging();
			entity.FbUser = this;
		}
		
		private void detach_EcCars(EcCar entity)
		{
			this.SendPropertyChanging();
			entity.FbUser = null;
		}
		
		private void attach_EcGenerals(EcGeneral entity)
		{
			this.SendPropertyChanging();
			entity.FbUser = this;
		}
		
		private void detach_EcGenerals(EcGeneral entity)
		{
			this.SendPropertyChanging();
			entity.FbUser = null;
		}
		
		private void attach_EcHomes(EcHome entity)
		{
			this.SendPropertyChanging();
			entity.FbUser = this;
		}
		
		private void detach_EcHomes(EcHome entity)
		{
			this.SendPropertyChanging();
			entity.FbUser = null;
		}
		
		private void attach_FbUserSettings(FbUserSetting entity)
		{
			this.SendPropertyChanging();
			entity.FbUser = this;
		}
		
		private void detach_FbUserSettings(FbUserSetting entity)
		{
			this.SendPropertyChanging();
			entity.FbUser = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FbInvite")]
	public partial class FbInvite : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _id;
		
		private long _fbidFrom;
		
		private long _fbidTo;
		
		private System.DateTime _createdOn;
		
		private byte _accepted;
		
		private EntityRef<FbUser> _FbUser;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(long value);
    partial void OnidChanged();
    partial void OnfbidFromChanging(long value);
    partial void OnfbidFromChanged();
    partial void OnfbidToChanging(long value);
    partial void OnfbidToChanged();
    partial void OncreatedOnChanging(System.DateTime value);
    partial void OncreatedOnChanged();
    partial void OnacceptedChanging(byte value);
    partial void OnacceptedChanged();
    #endregion
		
		public FbInvite()
		{
			this._FbUser = default(EntityRef<FbUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fbidFrom", DbType="BigInt NOT NULL")]
		public long fbidFrom
		{
			get
			{
				return this._fbidFrom;
			}
			set
			{
				if ((this._fbidFrom != value))
				{
					if (this._FbUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnfbidFromChanging(value);
					this.SendPropertyChanging();
					this._fbidFrom = value;
					this.SendPropertyChanged("fbidFrom");
					this.OnfbidFromChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fbidTo", DbType="BigInt NOT NULL")]
		public long fbidTo
		{
			get
			{
				return this._fbidTo;
			}
			set
			{
				if ((this._fbidTo != value))
				{
					this.OnfbidToChanging(value);
					this.SendPropertyChanging();
					this._fbidTo = value;
					this.SendPropertyChanged("fbidTo");
					this.OnfbidToChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_createdOn", DbType="DateTime NOT NULL")]
		public System.DateTime createdOn
		{
			get
			{
				return this._createdOn;
			}
			set
			{
				if ((this._createdOn != value))
				{
					this.OncreatedOnChanging(value);
					this.SendPropertyChanging();
					this._createdOn = value;
					this.SendPropertyChanged("createdOn");
					this.OncreatedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_accepted", DbType="TinyInt NOT NULL")]
		public byte accepted
		{
			get
			{
				return this._accepted;
			}
			set
			{
				if ((this._accepted != value))
				{
					this.OnacceptedChanging(value);
					this.SendPropertyChanging();
					this._accepted = value;
					this.SendPropertyChanged("accepted");
					this.OnacceptedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FbUser_FbInvite", Storage="_FbUser", ThisKey="fbidFrom", OtherKey="id", IsForeignKey=true)]
		public FbUser FbUser
		{
			get
			{
				return this._FbUser.Entity;
			}
			set
			{
				FbUser previousValue = this._FbUser.Entity;
				if (((previousValue != value) 
							|| (this._FbUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FbUser.Entity = null;
						previousValue.FbInvites.Remove(this);
					}
					this._FbUser.Entity = value;
					if ((value != null))
					{
						value.FbInvites.Add(this);
						this._fbidFrom = value.id;
					}
					else
					{
						this._fbidFrom = default(long);
					}
					this.SendPropertyChanged("FbUser");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FbUserLog")]
	public partial class FbUserLog : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _id;
		
		private long _idFbUser;
		
		private int _numActions;
		
		private int _deleted;
		
		private string _Notes;
		
		private System.Nullable<System.Guid> _UserID;
		
		private System.DateTime _createdOn;
		
		private System.Nullable<System.DateTime> _endedOn;
		
		private System.DateTime _logTime;
		
		private EntityRef<FbUser> _FbUser;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(long value);
    partial void OnidChanged();
    partial void OnidFbUserChanging(long value);
    partial void OnidFbUserChanged();
    partial void OnnumActionsChanging(int value);
    partial void OnnumActionsChanged();
    partial void OndeletedChanging(int value);
    partial void OndeletedChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    partial void OnUserIDChanging(System.Nullable<System.Guid> value);
    partial void OnUserIDChanged();
    partial void OncreatedOnChanging(System.DateTime value);
    partial void OncreatedOnChanged();
    partial void OnendedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnendedOnChanged();
    partial void OnlogTimeChanging(System.DateTime value);
    partial void OnlogTimeChanged();
    #endregion
		
		public FbUserLog()
		{
			this._FbUser = default(EntityRef<FbUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idFbUser", DbType="BigInt NOT NULL")]
		public long idFbUser
		{
			get
			{
				return this._idFbUser;
			}
			set
			{
				if ((this._idFbUser != value))
				{
					if (this._FbUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidFbUserChanging(value);
					this.SendPropertyChanging();
					this._idFbUser = value;
					this.SendPropertyChanged("idFbUser");
					this.OnidFbUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_numActions", DbType="Int NOT NULL")]
		public int numActions
		{
			get
			{
				return this._numActions;
			}
			set
			{
				if ((this._numActions != value))
				{
					this.OnnumActionsChanging(value);
					this.SendPropertyChanging();
					this._numActions = value;
					this.SendPropertyChanged("numActions");
					this.OnnumActionsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_deleted", DbType="Int NOT NULL")]
		public int deleted
		{
			get
			{
				return this._deleted;
			}
			set
			{
				if ((this._deleted != value))
				{
					this.OndeletedChanging(value);
					this.SendPropertyChanging();
					this._deleted = value;
					this.SendPropertyChanged("deleted");
					this.OndeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_createdOn", DbType="DateTime NOT NULL")]
		public System.DateTime createdOn
		{
			get
			{
				return this._createdOn;
			}
			set
			{
				if ((this._createdOn != value))
				{
					this.OncreatedOnChanging(value);
					this.SendPropertyChanging();
					this._createdOn = value;
					this.SendPropertyChanged("createdOn");
					this.OncreatedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_endedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> endedOn
		{
			get
			{
				return this._endedOn;
			}
			set
			{
				if ((this._endedOn != value))
				{
					this.OnendedOnChanging(value);
					this.SendPropertyChanging();
					this._endedOn = value;
					this.SendPropertyChanged("endedOn");
					this.OnendedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_logTime", DbType="DateTime NOT NULL")]
		public System.DateTime logTime
		{
			get
			{
				return this._logTime;
			}
			set
			{
				if ((this._logTime != value))
				{
					this.OnlogTimeChanging(value);
					this.SendPropertyChanging();
					this._logTime = value;
					this.SendPropertyChanged("logTime");
					this.OnlogTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FbUser_FbUserLog", Storage="_FbUser", ThisKey="idFbUser", OtherKey="id", IsForeignKey=true)]
		public FbUser FbUser
		{
			get
			{
				return this._FbUser.Entity;
			}
			set
			{
				FbUser previousValue = this._FbUser.Entity;
				if (((previousValue != value) 
							|| (this._FbUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FbUser.Entity = null;
						previousValue.FbUserLogs.Remove(this);
					}
					this._FbUser.Entity = value;
					if ((value != null))
					{
						value.FbUserLogs.Add(this);
						this._idFbUser = value.id;
					}
					else
					{
						this._idFbUser = default(long);
					}
					this.SendPropertyChanged("FbUser");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FbInviteLog")]
	public partial class FbInviteLog : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _id;
		
		private long _idFbInvite;
		
		private long _fbidFrom;
		
		private long _fbidTo;
		
		private System.DateTime _createdOn;
		
		private byte _accepted;
		
		private System.DateTime _logTime;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(long value);
    partial void OnidChanged();
    partial void OnidFbInviteChanging(long value);
    partial void OnidFbInviteChanged();
    partial void OnfbidFromChanging(long value);
    partial void OnfbidFromChanged();
    partial void OnfbidToChanging(long value);
    partial void OnfbidToChanged();
    partial void OncreatedOnChanging(System.DateTime value);
    partial void OncreatedOnChanged();
    partial void OnacceptedChanging(byte value);
    partial void OnacceptedChanged();
    partial void OnlogTimeChanging(System.DateTime value);
    partial void OnlogTimeChanged();
    #endregion
		
		public FbInviteLog()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idFbInvite", DbType="BigInt NOT NULL")]
		public long idFbInvite
		{
			get
			{
				return this._idFbInvite;
			}
			set
			{
				if ((this._idFbInvite != value))
				{
					this.OnidFbInviteChanging(value);
					this.SendPropertyChanging();
					this._idFbInvite = value;
					this.SendPropertyChanged("idFbInvite");
					this.OnidFbInviteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fbidFrom", DbType="BigInt NOT NULL")]
		public long fbidFrom
		{
			get
			{
				return this._fbidFrom;
			}
			set
			{
				if ((this._fbidFrom != value))
				{
					this.OnfbidFromChanging(value);
					this.SendPropertyChanging();
					this._fbidFrom = value;
					this.SendPropertyChanged("fbidFrom");
					this.OnfbidFromChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fbidTo", DbType="BigInt NOT NULL")]
		public long fbidTo
		{
			get
			{
				return this._fbidTo;
			}
			set
			{
				if ((this._fbidTo != value))
				{
					this.OnfbidToChanging(value);
					this.SendPropertyChanging();
					this._fbidTo = value;
					this.SendPropertyChanged("fbidTo");
					this.OnfbidToChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_createdOn", DbType="DateTime NOT NULL")]
		public System.DateTime createdOn
		{
			get
			{
				return this._createdOn;
			}
			set
			{
				if ((this._createdOn != value))
				{
					this.OncreatedOnChanging(value);
					this.SendPropertyChanging();
					this._createdOn = value;
					this.SendPropertyChanged("createdOn");
					this.OncreatedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_accepted", DbType="TinyInt NOT NULL")]
		public byte accepted
		{
			get
			{
				return this._accepted;
			}
			set
			{
				if ((this._accepted != value))
				{
					this.OnacceptedChanging(value);
					this.SendPropertyChanging();
					this._accepted = value;
					this.SendPropertyChanged("accepted");
					this.OnacceptedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_logTime", DbType="DateTime NOT NULL")]
		public System.DateTime logTime
		{
			get
			{
				return this._logTime;
			}
			set
			{
				if ((this._logTime != value))
				{
					this.OnlogTimeChanging(value);
					this.SendPropertyChanging();
					this._logTime = value;
					this.SendPropertyChanged("logTime");
					this.OnlogTimeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EcCar")]
	public partial class EcCar : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _id;
		
		private long _idFbUser;
		
		private string _name;
		
		private double _distance;
		
		private double _fuelEconomy;
		
		private bool _diesel;
		
		private bool _metric;
		
		private System.DateTime _createdOn;
		
		private EntityRef<FbUser> _FbUser;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(long value);
    partial void OnidChanged();
    partial void OnidFbUserChanging(long value);
    partial void OnidFbUserChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OndistanceChanging(double value);
    partial void OndistanceChanged();
    partial void OnfuelEconomyChanging(double value);
    partial void OnfuelEconomyChanged();
    partial void OndieselChanging(bool value);
    partial void OndieselChanged();
    partial void OnmetricChanging(bool value);
    partial void OnmetricChanged();
    partial void OncreatedOnChanging(System.DateTime value);
    partial void OncreatedOnChanged();
    #endregion
		
		public EcCar()
		{
			this._FbUser = default(EntityRef<FbUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idFbUser", DbType="BigInt NOT NULL")]
		public long idFbUser
		{
			get
			{
				return this._idFbUser;
			}
			set
			{
				if ((this._idFbUser != value))
				{
					if (this._FbUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidFbUserChanging(value);
					this.SendPropertyChanging();
					this._idFbUser = value;
					this.SendPropertyChanged("idFbUser");
					this.OnidFbUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_distance", DbType="Float NOT NULL")]
		public double distance
		{
			get
			{
				return this._distance;
			}
			set
			{
				if ((this._distance != value))
				{
					this.OndistanceChanging(value);
					this.SendPropertyChanging();
					this._distance = value;
					this.SendPropertyChanged("distance");
					this.OndistanceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fuelEconomy", DbType="Float NOT NULL")]
		public double fuelEconomy
		{
			get
			{
				return this._fuelEconomy;
			}
			set
			{
				if ((this._fuelEconomy != value))
				{
					this.OnfuelEconomyChanging(value);
					this.SendPropertyChanging();
					this._fuelEconomy = value;
					this.SendPropertyChanged("fuelEconomy");
					this.OnfuelEconomyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_diesel", DbType="Bit NOT NULL")]
		public bool diesel
		{
			get
			{
				return this._diesel;
			}
			set
			{
				if ((this._diesel != value))
				{
					this.OndieselChanging(value);
					this.SendPropertyChanging();
					this._diesel = value;
					this.SendPropertyChanged("diesel");
					this.OndieselChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_metric", DbType="Bit NOT NULL")]
		public bool metric
		{
			get
			{
				return this._metric;
			}
			set
			{
				if ((this._metric != value))
				{
					this.OnmetricChanging(value);
					this.SendPropertyChanging();
					this._metric = value;
					this.SendPropertyChanged("metric");
					this.OnmetricChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_createdOn", DbType="DateTime NOT NULL")]
		public System.DateTime createdOn
		{
			get
			{
				return this._createdOn;
			}
			set
			{
				if ((this._createdOn != value))
				{
					this.OncreatedOnChanging(value);
					this.SendPropertyChanging();
					this._createdOn = value;
					this.SendPropertyChanged("createdOn");
					this.OncreatedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FbUser_EcCar", Storage="_FbUser", ThisKey="idFbUser", OtherKey="id", IsForeignKey=true)]
		public FbUser FbUser
		{
			get
			{
				return this._FbUser.Entity;
			}
			set
			{
				FbUser previousValue = this._FbUser.Entity;
				if (((previousValue != value) 
							|| (this._FbUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FbUser.Entity = null;
						previousValue.EcCars.Remove(this);
					}
					this._FbUser.Entity = value;
					if ((value != null))
					{
						value.EcCars.Add(this);
						this._idFbUser = value.id;
					}
					else
					{
						this._idFbUser = default(long);
					}
					this.SendPropertyChanged("FbUser");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EcGeneral")]
	public partial class EcGeneral : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _id;
		
		private long _idFbUser;
		
		private string _name;
		
		private double _amount;
		
		private int _emissionsType;
		
		private int _converter;
		
		private bool _metric;
		
		private System.DateTime _createdOn;
		
		private EntityRef<FbUser> _FbUser;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(long value);
    partial void OnidChanged();
    partial void OnidFbUserChanging(long value);
    partial void OnidFbUserChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnamountChanging(double value);
    partial void OnamountChanged();
    partial void OnemissionsTypeChanging(int value);
    partial void OnemissionsTypeChanged();
    partial void OnconverterChanging(int value);
    partial void OnconverterChanged();
    partial void OnmetricChanging(bool value);
    partial void OnmetricChanged();
    partial void OncreatedOnChanging(System.DateTime value);
    partial void OncreatedOnChanged();
    #endregion
		
		public EcGeneral()
		{
			this._FbUser = default(EntityRef<FbUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idFbUser", DbType="BigInt NOT NULL")]
		public long idFbUser
		{
			get
			{
				return this._idFbUser;
			}
			set
			{
				if ((this._idFbUser != value))
				{
					if (this._FbUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidFbUserChanging(value);
					this.SendPropertyChanging();
					this._idFbUser = value;
					this.SendPropertyChanged("idFbUser");
					this.OnidFbUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_amount", DbType="Float NOT NULL")]
		public double amount
		{
			get
			{
				return this._amount;
			}
			set
			{
				if ((this._amount != value))
				{
					this.OnamountChanging(value);
					this.SendPropertyChanging();
					this._amount = value;
					this.SendPropertyChanged("amount");
					this.OnamountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_emissionsType", DbType="Int NOT NULL")]
		public int emissionsType
		{
			get
			{
				return this._emissionsType;
			}
			set
			{
				if ((this._emissionsType != value))
				{
					this.OnemissionsTypeChanging(value);
					this.SendPropertyChanging();
					this._emissionsType = value;
					this.SendPropertyChanged("emissionsType");
					this.OnemissionsTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_converter", DbType="Int NOT NULL")]
		public int converter
		{
			get
			{
				return this._converter;
			}
			set
			{
				if ((this._converter != value))
				{
					this.OnconverterChanging(value);
					this.SendPropertyChanging();
					this._converter = value;
					this.SendPropertyChanged("converter");
					this.OnconverterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_metric", DbType="Bit NOT NULL")]
		public bool metric
		{
			get
			{
				return this._metric;
			}
			set
			{
				if ((this._metric != value))
				{
					this.OnmetricChanging(value);
					this.SendPropertyChanging();
					this._metric = value;
					this.SendPropertyChanged("metric");
					this.OnmetricChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_createdOn", DbType="DateTime NOT NULL")]
		public System.DateTime createdOn
		{
			get
			{
				return this._createdOn;
			}
			set
			{
				if ((this._createdOn != value))
				{
					this.OncreatedOnChanging(value);
					this.SendPropertyChanging();
					this._createdOn = value;
					this.SendPropertyChanged("createdOn");
					this.OncreatedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FbUser_EcGeneral", Storage="_FbUser", ThisKey="idFbUser", OtherKey="id", IsForeignKey=true)]
		public FbUser FbUser
		{
			get
			{
				return this._FbUser.Entity;
			}
			set
			{
				FbUser previousValue = this._FbUser.Entity;
				if (((previousValue != value) 
							|| (this._FbUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FbUser.Entity = null;
						previousValue.EcGenerals.Remove(this);
					}
					this._FbUser.Entity = value;
					if ((value != null))
					{
						value.EcGenerals.Add(this);
						this._idFbUser = value.id;
					}
					else
					{
						this._idFbUser = default(long);
					}
					this.SendPropertyChanged("FbUser");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EcHome")]
	public partial class EcHome : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _id;
		
		private long _idFbUser;
		
		private string _name;
		
		private int _numPeople;
		
		private double _electricMonthly;
		
		private double _electricPrice;
		
		private double _naturalGasMonthly;
		
		private double _naturalGasPrice;
		
		private int _naturalGasConverter;
		
		private double _fuelOilMonthly;
		
		private double _fuelOilPrice;
		
		private int _fuelOilConverter;
		
		private double _waste;
		
		private int _wasteConverter;
		
		private double _recycle;
		
		private int _recycleConverter;
		
		private double _meat;
		
		private int _meatConverter;
		
		private bool _metric;
		
		private System.DateTime _createdOn;
		
		private System.DateTime _updatedOn;
		
		private EntityRef<FbUser> _FbUser;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(long value);
    partial void OnidChanged();
    partial void OnidFbUserChanging(long value);
    partial void OnidFbUserChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnnumPeopleChanging(int value);
    partial void OnnumPeopleChanged();
    partial void OnelectricMonthlyChanging(double value);
    partial void OnelectricMonthlyChanged();
    partial void OnelectricPriceChanging(double value);
    partial void OnelectricPriceChanged();
    partial void OnnaturalGasMonthlyChanging(double value);
    partial void OnnaturalGasMonthlyChanged();
    partial void OnnaturalGasPriceChanging(double value);
    partial void OnnaturalGasPriceChanged();
    partial void OnnaturalGasConverterChanging(int value);
    partial void OnnaturalGasConverterChanged();
    partial void OnfuelOilMonthlyChanging(double value);
    partial void OnfuelOilMonthlyChanged();
    partial void OnfuelOilPriceChanging(double value);
    partial void OnfuelOilPriceChanged();
    partial void OnfuelOilConverterChanging(int value);
    partial void OnfuelOilConverterChanged();
    partial void OnwasteChanging(double value);
    partial void OnwasteChanged();
    partial void OnwasteConverterChanging(int value);
    partial void OnwasteConverterChanged();
    partial void OnrecycleChanging(double value);
    partial void OnrecycleChanged();
    partial void OnrecycleConverterChanging(int value);
    partial void OnrecycleConverterChanged();
    partial void OnmeatChanging(double value);
    partial void OnmeatChanged();
    partial void OnmeatConverterChanging(int value);
    partial void OnmeatConverterChanged();
    partial void OnmetricChanging(bool value);
    partial void OnmetricChanged();
    partial void OncreatedOnChanging(System.DateTime value);
    partial void OncreatedOnChanged();
    partial void OnupdatedOnChanging(System.DateTime value);
    partial void OnupdatedOnChanged();
    #endregion
		
		public EcHome()
		{
			this._FbUser = default(EntityRef<FbUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idFbUser", DbType="BigInt NOT NULL")]
		public long idFbUser
		{
			get
			{
				return this._idFbUser;
			}
			set
			{
				if ((this._idFbUser != value))
				{
					if (this._FbUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidFbUserChanging(value);
					this.SendPropertyChanging();
					this._idFbUser = value;
					this.SendPropertyChanged("idFbUser");
					this.OnidFbUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_numPeople", DbType="Int NOT NULL")]
		public int numPeople
		{
			get
			{
				return this._numPeople;
			}
			set
			{
				if ((this._numPeople != value))
				{
					this.OnnumPeopleChanging(value);
					this.SendPropertyChanging();
					this._numPeople = value;
					this.SendPropertyChanged("numPeople");
					this.OnnumPeopleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_electricMonthly", DbType="Float NOT NULL")]
		public double electricMonthly
		{
			get
			{
				return this._electricMonthly;
			}
			set
			{
				if ((this._electricMonthly != value))
				{
					this.OnelectricMonthlyChanging(value);
					this.SendPropertyChanging();
					this._electricMonthly = value;
					this.SendPropertyChanged("electricMonthly");
					this.OnelectricMonthlyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_electricPrice", DbType="Float NOT NULL")]
		public double electricPrice
		{
			get
			{
				return this._electricPrice;
			}
			set
			{
				if ((this._electricPrice != value))
				{
					this.OnelectricPriceChanging(value);
					this.SendPropertyChanging();
					this._electricPrice = value;
					this.SendPropertyChanged("electricPrice");
					this.OnelectricPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_naturalGasMonthly", DbType="Float NOT NULL")]
		public double naturalGasMonthly
		{
			get
			{
				return this._naturalGasMonthly;
			}
			set
			{
				if ((this._naturalGasMonthly != value))
				{
					this.OnnaturalGasMonthlyChanging(value);
					this.SendPropertyChanging();
					this._naturalGasMonthly = value;
					this.SendPropertyChanged("naturalGasMonthly");
					this.OnnaturalGasMonthlyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_naturalGasPrice", DbType="Float NOT NULL")]
		public double naturalGasPrice
		{
			get
			{
				return this._naturalGasPrice;
			}
			set
			{
				if ((this._naturalGasPrice != value))
				{
					this.OnnaturalGasPriceChanging(value);
					this.SendPropertyChanging();
					this._naturalGasPrice = value;
					this.SendPropertyChanged("naturalGasPrice");
					this.OnnaturalGasPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_naturalGasConverter", DbType="Int NOT NULL")]
		public int naturalGasConverter
		{
			get
			{
				return this._naturalGasConverter;
			}
			set
			{
				if ((this._naturalGasConverter != value))
				{
					this.OnnaturalGasConverterChanging(value);
					this.SendPropertyChanging();
					this._naturalGasConverter = value;
					this.SendPropertyChanged("naturalGasConverter");
					this.OnnaturalGasConverterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fuelOilMonthly", DbType="Float NOT NULL")]
		public double fuelOilMonthly
		{
			get
			{
				return this._fuelOilMonthly;
			}
			set
			{
				if ((this._fuelOilMonthly != value))
				{
					this.OnfuelOilMonthlyChanging(value);
					this.SendPropertyChanging();
					this._fuelOilMonthly = value;
					this.SendPropertyChanged("fuelOilMonthly");
					this.OnfuelOilMonthlyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fuelOilPrice", DbType="Float NOT NULL")]
		public double fuelOilPrice
		{
			get
			{
				return this._fuelOilPrice;
			}
			set
			{
				if ((this._fuelOilPrice != value))
				{
					this.OnfuelOilPriceChanging(value);
					this.SendPropertyChanging();
					this._fuelOilPrice = value;
					this.SendPropertyChanged("fuelOilPrice");
					this.OnfuelOilPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fuelOilConverter", DbType="Int NOT NULL")]
		public int fuelOilConverter
		{
			get
			{
				return this._fuelOilConverter;
			}
			set
			{
				if ((this._fuelOilConverter != value))
				{
					this.OnfuelOilConverterChanging(value);
					this.SendPropertyChanging();
					this._fuelOilConverter = value;
					this.SendPropertyChanged("fuelOilConverter");
					this.OnfuelOilConverterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_waste", DbType="Float NOT NULL")]
		public double waste
		{
			get
			{
				return this._waste;
			}
			set
			{
				if ((this._waste != value))
				{
					this.OnwasteChanging(value);
					this.SendPropertyChanging();
					this._waste = value;
					this.SendPropertyChanged("waste");
					this.OnwasteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_wasteConverter", DbType="Int NOT NULL")]
		public int wasteConverter
		{
			get
			{
				return this._wasteConverter;
			}
			set
			{
				if ((this._wasteConverter != value))
				{
					this.OnwasteConverterChanging(value);
					this.SendPropertyChanging();
					this._wasteConverter = value;
					this.SendPropertyChanged("wasteConverter");
					this.OnwasteConverterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_recycle", DbType="Float NOT NULL")]
		public double recycle
		{
			get
			{
				return this._recycle;
			}
			set
			{
				if ((this._recycle != value))
				{
					this.OnrecycleChanging(value);
					this.SendPropertyChanging();
					this._recycle = value;
					this.SendPropertyChanged("recycle");
					this.OnrecycleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_recycleConverter", DbType="Int NOT NULL")]
		public int recycleConverter
		{
			get
			{
				return this._recycleConverter;
			}
			set
			{
				if ((this._recycleConverter != value))
				{
					this.OnrecycleConverterChanging(value);
					this.SendPropertyChanging();
					this._recycleConverter = value;
					this.SendPropertyChanged("recycleConverter");
					this.OnrecycleConverterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_meat", DbType="Float NOT NULL")]
		public double meat
		{
			get
			{
				return this._meat;
			}
			set
			{
				if ((this._meat != value))
				{
					this.OnmeatChanging(value);
					this.SendPropertyChanging();
					this._meat = value;
					this.SendPropertyChanged("meat");
					this.OnmeatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_meatConverter", DbType="Int NOT NULL")]
		public int meatConverter
		{
			get
			{
				return this._meatConverter;
			}
			set
			{
				if ((this._meatConverter != value))
				{
					this.OnmeatConverterChanging(value);
					this.SendPropertyChanging();
					this._meatConverter = value;
					this.SendPropertyChanged("meatConverter");
					this.OnmeatConverterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_metric", DbType="Bit NOT NULL")]
		public bool metric
		{
			get
			{
				return this._metric;
			}
			set
			{
				if ((this._metric != value))
				{
					this.OnmetricChanging(value);
					this.SendPropertyChanging();
					this._metric = value;
					this.SendPropertyChanged("metric");
					this.OnmetricChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_createdOn", DbType="DateTime NOT NULL")]
		public System.DateTime createdOn
		{
			get
			{
				return this._createdOn;
			}
			set
			{
				if ((this._createdOn != value))
				{
					this.OncreatedOnChanging(value);
					this.SendPropertyChanging();
					this._createdOn = value;
					this.SendPropertyChanged("createdOn");
					this.OncreatedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_updatedOn", DbType="DateTime NOT NULL")]
		public System.DateTime updatedOn
		{
			get
			{
				return this._updatedOn;
			}
			set
			{
				if ((this._updatedOn != value))
				{
					this.OnupdatedOnChanging(value);
					this.SendPropertyChanging();
					this._updatedOn = value;
					this.SendPropertyChanged("updatedOn");
					this.OnupdatedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FbUser_EcHome", Storage="_FbUser", ThisKey="idFbUser", OtherKey="id", IsForeignKey=true)]
		public FbUser FbUser
		{
			get
			{
				return this._FbUser.Entity;
			}
			set
			{
				FbUser previousValue = this._FbUser.Entity;
				if (((previousValue != value) 
							|| (this._FbUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FbUser.Entity = null;
						previousValue.EcHomes.Remove(this);
					}
					this._FbUser.Entity = value;
					if ((value != null))
					{
						value.EcHomes.Add(this);
						this._idFbUser = value.id;
					}
					else
					{
						this._idFbUser = default(long);
					}
					this.SendPropertyChanged("FbUser");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MeasureInfoConversion")]
	public partial class MeasureInfoConversion : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _Name;
		
		private int _idMeasureInfoSource;
		
		private int _idMeasureInfoTarget;
		
		private double _factor;
		
		private string _expression;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnidMeasureInfoSourceChanging(int value);
    partial void OnidMeasureInfoSourceChanged();
    partial void OnidMeasureInfoTargetChanging(int value);
    partial void OnidMeasureInfoTargetChanged();
    partial void OnfactorChanging(double value);
    partial void OnfactorChanged();
    partial void OnexpressionChanging(string value);
    partial void OnexpressionChanged();
    #endregion
		
		public MeasureInfoConversion()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idMeasureInfoSource", DbType="Int NOT NULL")]
		public int idMeasureInfoSource
		{
			get
			{
				return this._idMeasureInfoSource;
			}
			set
			{
				if ((this._idMeasureInfoSource != value))
				{
					this.OnidMeasureInfoSourceChanging(value);
					this.SendPropertyChanging();
					this._idMeasureInfoSource = value;
					this.SendPropertyChanged("idMeasureInfoSource");
					this.OnidMeasureInfoSourceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idMeasureInfoTarget", DbType="Int NOT NULL")]
		public int idMeasureInfoTarget
		{
			get
			{
				return this._idMeasureInfoTarget;
			}
			set
			{
				if ((this._idMeasureInfoTarget != value))
				{
					this.OnidMeasureInfoTargetChanging(value);
					this.SendPropertyChanging();
					this._idMeasureInfoTarget = value;
					this.SendPropertyChanged("idMeasureInfoTarget");
					this.OnidMeasureInfoTargetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_factor", DbType="Float NOT NULL")]
		public double factor
		{
			get
			{
				return this._factor;
			}
			set
			{
				if ((this._factor != value))
				{
					this.OnfactorChanging(value);
					this.SendPropertyChanging();
					this._factor = value;
					this.SendPropertyChanged("factor");
					this.OnfactorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_expression", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string expression
		{
			get
			{
				return this._expression;
			}
			set
			{
				if ((this._expression != value))
				{
					this.OnexpressionChanging(value);
					this.SendPropertyChanging();
					this._expression = value;
					this.SendPropertyChanged("expression");
					this.OnexpressionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FbUserSetting")]
	public partial class FbUserSetting : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _id;
		
		private long _fbid;
		
		private string _name;
		
		private string _value;
		
		private System.DateTime _createdOn;
		
		private EntitySet<FbUserSettingLog> _FbUserSettingLogs;
		
		private EntityRef<FbUser> _FbUser;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(long value);
    partial void OnidChanged();
    partial void OnfbidChanging(long value);
    partial void OnfbidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnvalueChanging(string value);
    partial void OnvalueChanged();
    partial void OncreatedOnChanging(System.DateTime value);
    partial void OncreatedOnChanged();
    #endregion
		
		public FbUserSetting()
		{
			this._FbUserSettingLogs = new EntitySet<FbUserSettingLog>(new Action<FbUserSettingLog>(this.attach_FbUserSettingLogs), new Action<FbUserSettingLog>(this.detach_FbUserSettingLogs));
			this._FbUser = default(EntityRef<FbUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fbid", DbType="BigInt NOT NULL")]
		public long fbid
		{
			get
			{
				return this._fbid;
			}
			set
			{
				if ((this._fbid != value))
				{
					if (this._FbUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnfbidChanging(value);
					this.SendPropertyChanging();
					this._fbid = value;
					this.SendPropertyChanged("fbid");
					this.OnfbidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_value", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string value
		{
			get
			{
				return this._value;
			}
			set
			{
				if ((this._value != value))
				{
					this.OnvalueChanging(value);
					this.SendPropertyChanging();
					this._value = value;
					this.SendPropertyChanged("value");
					this.OnvalueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_createdOn", DbType="DateTime NOT NULL")]
		public System.DateTime createdOn
		{
			get
			{
				return this._createdOn;
			}
			set
			{
				if ((this._createdOn != value))
				{
					this.OncreatedOnChanging(value);
					this.SendPropertyChanging();
					this._createdOn = value;
					this.SendPropertyChanged("createdOn");
					this.OncreatedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FbUserSetting_FbUserSettingLog", Storage="_FbUserSettingLogs", ThisKey="id", OtherKey="idFbUserSetting")]
		public EntitySet<FbUserSettingLog> FbUserSettingLogs
		{
			get
			{
				return this._FbUserSettingLogs;
			}
			set
			{
				this._FbUserSettingLogs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FbUser_FbUserSetting", Storage="_FbUser", ThisKey="fbid", OtherKey="id", IsForeignKey=true)]
		public FbUser FbUser
		{
			get
			{
				return this._FbUser.Entity;
			}
			set
			{
				FbUser previousValue = this._FbUser.Entity;
				if (((previousValue != value) 
							|| (this._FbUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FbUser.Entity = null;
						previousValue.FbUserSettings.Remove(this);
					}
					this._FbUser.Entity = value;
					if ((value != null))
					{
						value.FbUserSettings.Add(this);
						this._fbid = value.id;
					}
					else
					{
						this._fbid = default(long);
					}
					this.SendPropertyChanged("FbUser");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_FbUserSettingLogs(FbUserSettingLog entity)
		{
			this.SendPropertyChanging();
			entity.FbUserSetting = this;
		}
		
		private void detach_FbUserSettingLogs(FbUserSettingLog entity)
		{
			this.SendPropertyChanging();
			entity.FbUserSetting = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FbUserSettingLog")]
	public partial class FbUserSettingLog : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _id;
		
		private long _idFbUserSetting;
		
		private long _fbid;
		
		private string _name;
		
		private string _value;
		
		private System.DateTime _createdOn;
		
		private System.DateTime _logTime;
		
		private EntityRef<FbUserSetting> _FbUserSetting;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(long value);
    partial void OnidChanged();
    partial void OnidFbUserSettingChanging(long value);
    partial void OnidFbUserSettingChanged();
    partial void OnfbidChanging(long value);
    partial void OnfbidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnvalueChanging(string value);
    partial void OnvalueChanged();
    partial void OncreatedOnChanging(System.DateTime value);
    partial void OncreatedOnChanged();
    partial void OnlogTimeChanging(System.DateTime value);
    partial void OnlogTimeChanged();
    #endregion
		
		public FbUserSettingLog()
		{
			this._FbUserSetting = default(EntityRef<FbUserSetting>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idFbUserSetting", DbType="BigInt NOT NULL")]
		public long idFbUserSetting
		{
			get
			{
				return this._idFbUserSetting;
			}
			set
			{
				if ((this._idFbUserSetting != value))
				{
					if (this._FbUserSetting.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidFbUserSettingChanging(value);
					this.SendPropertyChanging();
					this._idFbUserSetting = value;
					this.SendPropertyChanged("idFbUserSetting");
					this.OnidFbUserSettingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fbid", DbType="BigInt NOT NULL")]
		public long fbid
		{
			get
			{
				return this._fbid;
			}
			set
			{
				if ((this._fbid != value))
				{
					this.OnfbidChanging(value);
					this.SendPropertyChanging();
					this._fbid = value;
					this.SendPropertyChanged("fbid");
					this.OnfbidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_value", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string value
		{
			get
			{
				return this._value;
			}
			set
			{
				if ((this._value != value))
				{
					this.OnvalueChanging(value);
					this.SendPropertyChanging();
					this._value = value;
					this.SendPropertyChanged("value");
					this.OnvalueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_createdOn", DbType="DateTime NOT NULL")]
		public System.DateTime createdOn
		{
			get
			{
				return this._createdOn;
			}
			set
			{
				if ((this._createdOn != value))
				{
					this.OncreatedOnChanging(value);
					this.SendPropertyChanging();
					this._createdOn = value;
					this.SendPropertyChanged("createdOn");
					this.OncreatedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_logTime", DbType="DateTime NOT NULL")]
		public System.DateTime logTime
		{
			get
			{
				return this._logTime;
			}
			set
			{
				if ((this._logTime != value))
				{
					this.OnlogTimeChanging(value);
					this.SendPropertyChanging();
					this._logTime = value;
					this.SendPropertyChanged("logTime");
					this.OnlogTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FbUserSetting_FbUserSettingLog", Storage="_FbUserSetting", ThisKey="idFbUserSetting", OtherKey="id", IsForeignKey=true)]
		public FbUserSetting FbUserSetting
		{
			get
			{
				return this._FbUserSetting.Entity;
			}
			set
			{
				FbUserSetting previousValue = this._FbUserSetting.Entity;
				if (((previousValue != value) 
							|| (this._FbUserSetting.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FbUserSetting.Entity = null;
						previousValue.FbUserSettingLogs.Remove(this);
					}
					this._FbUserSetting.Entity = value;
					if ((value != null))
					{
						value.FbUserSettingLogs.Add(this);
						this._idFbUserSetting = value.id;
					}
					else
					{
						this._idFbUserSetting = default(long);
					}
					this.SendPropertyChanged("FbUserSetting");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NamerItem")]
	public partial class NamerItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _Name;
		
		private string _ShortName;
		
		private string _NameSingular;
		
		private string _NameHTML;
		
		private string _NameSingularHTML;
		
		private string _ShortNameHTML;
		
		private EntitySet<MeasureInfo> _MeasureInfos;
		
		private EntitySet<MeasureInfo> _MeasureInfos1;
		
		private EntitySet<MeasureInfo> _MeasureInfos2;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnShortNameChanging(string value);
    partial void OnShortNameChanged();
    partial void OnNameSingularChanging(string value);
    partial void OnNameSingularChanged();
    partial void OnNameHTMLChanging(string value);
    partial void OnNameHTMLChanged();
    partial void OnNameSingularHTMLChanging(string value);
    partial void OnNameSingularHTMLChanged();
    partial void OnShortNameHTMLChanging(string value);
    partial void OnShortNameHTMLChanged();
    #endregion
		
		public NamerItem()
		{
			this._MeasureInfos = new EntitySet<MeasureInfo>(new Action<MeasureInfo>(this.attach_MeasureInfos), new Action<MeasureInfo>(this.detach_MeasureInfos));
			this._MeasureInfos1 = new EntitySet<MeasureInfo>(new Action<MeasureInfo>(this.attach_MeasureInfos1), new Action<MeasureInfo>(this.detach_MeasureInfos1));
			this._MeasureInfos2 = new EntitySet<MeasureInfo>(new Action<MeasureInfo>(this.attach_MeasureInfos2), new Action<MeasureInfo>(this.detach_MeasureInfos2));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShortName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ShortName
		{
			get
			{
				return this._ShortName;
			}
			set
			{
				if ((this._ShortName != value))
				{
					this.OnShortNameChanging(value);
					this.SendPropertyChanging();
					this._ShortName = value;
					this.SendPropertyChanged("ShortName");
					this.OnShortNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameSingular", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string NameSingular
		{
			get
			{
				return this._NameSingular;
			}
			set
			{
				if ((this._NameSingular != value))
				{
					this.OnNameSingularChanging(value);
					this.SendPropertyChanging();
					this._NameSingular = value;
					this.SendPropertyChanged("NameSingular");
					this.OnNameSingularChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameHTML", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string NameHTML
		{
			get
			{
				return this._NameHTML;
			}
			set
			{
				if ((this._NameHTML != value))
				{
					this.OnNameHTMLChanging(value);
					this.SendPropertyChanging();
					this._NameHTML = value;
					this.SendPropertyChanged("NameHTML");
					this.OnNameHTMLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameSingularHTML", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string NameSingularHTML
		{
			get
			{
				return this._NameSingularHTML;
			}
			set
			{
				if ((this._NameSingularHTML != value))
				{
					this.OnNameSingularHTMLChanging(value);
					this.SendPropertyChanging();
					this._NameSingularHTML = value;
					this.SendPropertyChanged("NameSingularHTML");
					this.OnNameSingularHTMLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShortNameHTML", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ShortNameHTML
		{
			get
			{
				return this._ShortNameHTML;
			}
			set
			{
				if ((this._ShortNameHTML != value))
				{
					this.OnShortNameHTMLChanging(value);
					this.SendPropertyChanging();
					this._ShortNameHTML = value;
					this.SendPropertyChanged("ShortNameHTML");
					this.OnShortNameHTMLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NamerItem_MeasureInfo", Storage="_MeasureInfos", ThisKey="id", OtherKey="idNamerItemRate")]
		public EntitySet<MeasureInfo> MeasureInfos
		{
			get
			{
				return this._MeasureInfos;
			}
			set
			{
				this._MeasureInfos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NamerItem_MeasureInfo1", Storage="_MeasureInfos1", ThisKey="id", OtherKey="idNamerItemTime")]
		public EntitySet<MeasureInfo> MeasureInfos1
		{
			get
			{
				return this._MeasureInfos1;
			}
			set
			{
				this._MeasureInfos1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NamerItem_MeasureInfo2", Storage="_MeasureInfos2", ThisKey="id", OtherKey="idNamerItemVolume")]
		public EntitySet<MeasureInfo> MeasureInfos2
		{
			get
			{
				return this._MeasureInfos2;
			}
			set
			{
				this._MeasureInfos2.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MeasureInfos(MeasureInfo entity)
		{
			this.SendPropertyChanging();
			entity.NamerItem = this;
		}
		
		private void detach_MeasureInfos(MeasureInfo entity)
		{
			this.SendPropertyChanging();
			entity.NamerItem = null;
		}
		
		private void attach_MeasureInfos1(MeasureInfo entity)
		{
			this.SendPropertyChanging();
			entity.NamerItem1 = this;
		}
		
		private void detach_MeasureInfos1(MeasureInfo entity)
		{
			this.SendPropertyChanging();
			entity.NamerItem1 = null;
		}
		
		private void attach_MeasureInfos2(MeasureInfo entity)
		{
			this.SendPropertyChanging();
			entity.NamerItem2 = this;
		}
		
		private void detach_MeasureInfos2(MeasureInfo entity)
		{
			this.SendPropertyChanging();
			entity.NamerItem2 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MeasureInfo")]
	public partial class MeasureInfo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.Nullable<int> _idNamerItemRate;
		
		private System.Nullable<int> _idNamerItemVolume;
		
		private System.Nullable<int> _idNamerItemTime;
		
		private EntitySet<ItemMeasureInfo> _ItemMeasureInfos;
		
		private EntityRef<NamerItem> _NamerItem;
		
		private EntityRef<NamerItem> _NamerItem1;
		
		private EntityRef<NamerItem> _NamerItem2;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnidNamerItemRateChanging(System.Nullable<int> value);
    partial void OnidNamerItemRateChanged();
    partial void OnidNamerItemVolumeChanging(System.Nullable<int> value);
    partial void OnidNamerItemVolumeChanged();
    partial void OnidNamerItemTimeChanging(System.Nullable<int> value);
    partial void OnidNamerItemTimeChanged();
    #endregion
		
		public MeasureInfo()
		{
			this._ItemMeasureInfos = new EntitySet<ItemMeasureInfo>(new Action<ItemMeasureInfo>(this.attach_ItemMeasureInfos), new Action<ItemMeasureInfo>(this.detach_ItemMeasureInfos));
			this._NamerItem = default(EntityRef<NamerItem>);
			this._NamerItem1 = default(EntityRef<NamerItem>);
			this._NamerItem2 = default(EntityRef<NamerItem>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idNamerItemRate", DbType="Int")]
		public System.Nullable<int> idNamerItemRate
		{
			get
			{
				return this._idNamerItemRate;
			}
			set
			{
				if ((this._idNamerItemRate != value))
				{
					if (this._NamerItem.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidNamerItemRateChanging(value);
					this.SendPropertyChanging();
					this._idNamerItemRate = value;
					this.SendPropertyChanged("idNamerItemRate");
					this.OnidNamerItemRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idNamerItemVolume", DbType="Int")]
		public System.Nullable<int> idNamerItemVolume
		{
			get
			{
				return this._idNamerItemVolume;
			}
			set
			{
				if ((this._idNamerItemVolume != value))
				{
					if (this._NamerItem2.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidNamerItemVolumeChanging(value);
					this.SendPropertyChanging();
					this._idNamerItemVolume = value;
					this.SendPropertyChanged("idNamerItemVolume");
					this.OnidNamerItemVolumeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idNamerItemTime", DbType="Int")]
		public System.Nullable<int> idNamerItemTime
		{
			get
			{
				return this._idNamerItemTime;
			}
			set
			{
				if ((this._idNamerItemTime != value))
				{
					if (this._NamerItem1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidNamerItemTimeChanging(value);
					this.SendPropertyChanging();
					this._idNamerItemTime = value;
					this.SendPropertyChanged("idNamerItemTime");
					this.OnidNamerItemTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MeasureInfo_ItemMeasureInfo", Storage="_ItemMeasureInfos", ThisKey="id", OtherKey="idMeasureInfo")]
		public EntitySet<ItemMeasureInfo> ItemMeasureInfos
		{
			get
			{
				return this._ItemMeasureInfos;
			}
			set
			{
				this._ItemMeasureInfos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NamerItem_MeasureInfo", Storage="_NamerItem", ThisKey="idNamerItemRate", OtherKey="id", IsForeignKey=true)]
		public NamerItem NamerItem
		{
			get
			{
				return this._NamerItem.Entity;
			}
			set
			{
				NamerItem previousValue = this._NamerItem.Entity;
				if (((previousValue != value) 
							|| (this._NamerItem.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NamerItem.Entity = null;
						previousValue.MeasureInfos.Remove(this);
					}
					this._NamerItem.Entity = value;
					if ((value != null))
					{
						value.MeasureInfos.Add(this);
						this._idNamerItemRate = value.id;
					}
					else
					{
						this._idNamerItemRate = default(Nullable<int>);
					}
					this.SendPropertyChanged("NamerItem");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NamerItem_MeasureInfo1", Storage="_NamerItem1", ThisKey="idNamerItemTime", OtherKey="id", IsForeignKey=true)]
		public NamerItem NamerItem1
		{
			get
			{
				return this._NamerItem1.Entity;
			}
			set
			{
				NamerItem previousValue = this._NamerItem1.Entity;
				if (((previousValue != value) 
							|| (this._NamerItem1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NamerItem1.Entity = null;
						previousValue.MeasureInfos1.Remove(this);
					}
					this._NamerItem1.Entity = value;
					if ((value != null))
					{
						value.MeasureInfos1.Add(this);
						this._idNamerItemTime = value.id;
					}
					else
					{
						this._idNamerItemTime = default(Nullable<int>);
					}
					this.SendPropertyChanged("NamerItem1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NamerItem_MeasureInfo2", Storage="_NamerItem2", ThisKey="idNamerItemVolume", OtherKey="id", IsForeignKey=true)]
		public NamerItem NamerItem2
		{
			get
			{
				return this._NamerItem2.Entity;
			}
			set
			{
				NamerItem previousValue = this._NamerItem2.Entity;
				if (((previousValue != value) 
							|| (this._NamerItem2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NamerItem2.Entity = null;
						previousValue.MeasureInfos2.Remove(this);
					}
					this._NamerItem2.Entity = value;
					if ((value != null))
					{
						value.MeasureInfos2.Add(this);
						this._idNamerItemVolume = value.id;
					}
					else
					{
						this._idNamerItemVolume = default(Nullable<int>);
					}
					this.SendPropertyChanged("NamerItem2");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ItemMeasureInfos(ItemMeasureInfo entity)
		{
			this.SendPropertyChanging();
			entity.MeasureInfo = this;
		}
		
		private void detach_ItemMeasureInfos(ItemMeasureInfo entity)
		{
			this.SendPropertyChanging();
			entity.MeasureInfo = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ItemMeasureInfo")]
	public partial class ItemMeasureInfo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _idItem;
		
		private int _idMeasureInfo;
		
		private string _Notes;
		
		private EntityRef<Item> _Item;
		
		private EntityRef<MeasureInfo> _MeasureInfo;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnidItemChanging(int value);
    partial void OnidItemChanged();
    partial void OnidMeasureInfoChanging(int value);
    partial void OnidMeasureInfoChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    #endregion
		
		public ItemMeasureInfo()
		{
			this._Item = default(EntityRef<Item>);
			this._MeasureInfo = default(EntityRef<MeasureInfo>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idItem", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int idItem
		{
			get
			{
				return this._idItem;
			}
			set
			{
				if ((this._idItem != value))
				{
					if (this._Item.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidItemChanging(value);
					this.SendPropertyChanging();
					this._idItem = value;
					this.SendPropertyChanged("idItem");
					this.OnidItemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idMeasureInfo", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int idMeasureInfo
		{
			get
			{
				return this._idMeasureInfo;
			}
			set
			{
				if ((this._idMeasureInfo != value))
				{
					if (this._MeasureInfo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidMeasureInfoChanging(value);
					this.SendPropertyChanging();
					this._idMeasureInfo = value;
					this.SendPropertyChanged("idMeasureInfo");
					this.OnidMeasureInfoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="NVarChar(250)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Item_ItemMeasureInfo", Storage="_Item", ThisKey="idItem", OtherKey="id", IsForeignKey=true)]
		public Item Item
		{
			get
			{
				return this._Item.Entity;
			}
			set
			{
				Item previousValue = this._Item.Entity;
				if (((previousValue != value) 
							|| (this._Item.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Item.Entity = null;
						previousValue.ItemMeasureInfos.Remove(this);
					}
					this._Item.Entity = value;
					if ((value != null))
					{
						value.ItemMeasureInfos.Add(this);
						this._idItem = value.id;
					}
					else
					{
						this._idItem = default(int);
					}
					this.SendPropertyChanged("Item");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MeasureInfo_ItemMeasureInfo", Storage="_MeasureInfo", ThisKey="idMeasureInfo", OtherKey="id", IsForeignKey=true)]
		public MeasureInfo MeasureInfo
		{
			get
			{
				return this._MeasureInfo.Entity;
			}
			set
			{
				MeasureInfo previousValue = this._MeasureInfo.Entity;
				if (((previousValue != value) 
							|| (this._MeasureInfo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MeasureInfo.Entity = null;
						previousValue.ItemMeasureInfos.Remove(this);
					}
					this._MeasureInfo.Entity = value;
					if ((value != null))
					{
						value.ItemMeasureInfos.Add(this);
						this._idMeasureInfo = value.id;
					}
					else
					{
						this._idMeasureInfo = default(int);
					}
					this.SendPropertyChanged("MeasureInfo");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HotelCommission")]
	public partial class HotelCommission : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _idHotelGeo;
		
		private int _numrooms;
		
		private int _numnights;
		
		private double _commission;
		
		private System.DateTime _starttime;
		
		private System.DateTime _endtime;
		
		private System.DateTime _createdOn;
		
		private EntityRef<HotelGeo> _HotelGeo;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnidHotelGeoChanging(int value);
    partial void OnidHotelGeoChanged();
    partial void OnnumroomsChanging(int value);
    partial void OnnumroomsChanged();
    partial void OnnumnightsChanging(int value);
    partial void OnnumnightsChanged();
    partial void OncommissionChanging(double value);
    partial void OncommissionChanged();
    partial void OnstarttimeChanging(System.DateTime value);
    partial void OnstarttimeChanged();
    partial void OnendtimeChanging(System.DateTime value);
    partial void OnendtimeChanged();
    partial void OncreatedOnChanging(System.DateTime value);
    partial void OncreatedOnChanged();
    #endregion
		
		public HotelCommission()
		{
			this._HotelGeo = default(EntityRef<HotelGeo>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idHotelGeo", DbType="Int NOT NULL")]
		public int idHotelGeo
		{
			get
			{
				return this._idHotelGeo;
			}
			set
			{
				if ((this._idHotelGeo != value))
				{
					if (this._HotelGeo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidHotelGeoChanging(value);
					this.SendPropertyChanging();
					this._idHotelGeo = value;
					this.SendPropertyChanged("idHotelGeo");
					this.OnidHotelGeoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_numrooms", DbType="Int NOT NULL")]
		public int numrooms
		{
			get
			{
				return this._numrooms;
			}
			set
			{
				if ((this._numrooms != value))
				{
					this.OnnumroomsChanging(value);
					this.SendPropertyChanging();
					this._numrooms = value;
					this.SendPropertyChanged("numrooms");
					this.OnnumroomsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_numnights", DbType="Int NOT NULL")]
		public int numnights
		{
			get
			{
				return this._numnights;
			}
			set
			{
				if ((this._numnights != value))
				{
					this.OnnumnightsChanging(value);
					this.SendPropertyChanging();
					this._numnights = value;
					this.SendPropertyChanged("numnights");
					this.OnnumnightsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_commission", DbType="Float NOT NULL")]
		public double commission
		{
			get
			{
				return this._commission;
			}
			set
			{
				if ((this._commission != value))
				{
					this.OncommissionChanging(value);
					this.SendPropertyChanging();
					this._commission = value;
					this.SendPropertyChanged("commission");
					this.OncommissionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_starttime", DbType="DateTime NOT NULL")]
		public System.DateTime starttime
		{
			get
			{
				return this._starttime;
			}
			set
			{
				if ((this._starttime != value))
				{
					this.OnstarttimeChanging(value);
					this.SendPropertyChanging();
					this._starttime = value;
					this.SendPropertyChanged("starttime");
					this.OnstarttimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_endtime", DbType="DateTime NOT NULL")]
		public System.DateTime endtime
		{
			get
			{
				return this._endtime;
			}
			set
			{
				if ((this._endtime != value))
				{
					this.OnendtimeChanging(value);
					this.SendPropertyChanging();
					this._endtime = value;
					this.SendPropertyChanged("endtime");
					this.OnendtimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_createdOn", DbType="DateTime NOT NULL", IsDbGenerated=true)]
		public System.DateTime createdOn
		{
			get
			{
				return this._createdOn;
			}
			set
			{
				if ((this._createdOn != value))
				{
					this.OncreatedOnChanging(value);
					this.SendPropertyChanging();
					this._createdOn = value;
					this.SendPropertyChanged("createdOn");
					this.OncreatedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HotelGeo_HotelCommission", Storage="_HotelGeo", ThisKey="idHotelGeo", OtherKey="id", IsForeignKey=true)]
		public HotelGeo HotelGeo
		{
			get
			{
				return this._HotelGeo.Entity;
			}
			set
			{
				HotelGeo previousValue = this._HotelGeo.Entity;
				if (((previousValue != value) 
							|| (this._HotelGeo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HotelGeo.Entity = null;
						previousValue.HotelCommissions.Remove(this);
					}
					this._HotelGeo.Entity = value;
					if ((value != null))
					{
						value.HotelCommissions.Add(this);
						this._idHotelGeo = value.id;
					}
					else
					{
						this._idHotelGeo = default(int);
					}
					this.SendPropertyChanged("HotelGeo");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HotelGeoLookupByProp")]
	public partial class HotelGeoLookupByProp : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _id;
		
		private int _idUsers;
		
		private int _Context;
		
		private int _Page;
		
		private int _GDSCode;
		
		private string _PropertyCode;
		
		private int _NumFound;
		
		private System.DateTime _createdOn;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(long value);
    partial void OnidChanged();
    partial void OnidUsersChanging(int value);
    partial void OnidUsersChanged();
    partial void OnContextChanging(int value);
    partial void OnContextChanged();
    partial void OnPageChanging(int value);
    partial void OnPageChanged();
    partial void OnGDSCodeChanging(int value);
    partial void OnGDSCodeChanged();
    partial void OnPropertyCodeChanging(string value);
    partial void OnPropertyCodeChanged();
    partial void OnNumFoundChanging(int value);
    partial void OnNumFoundChanged();
    partial void OncreatedOnChanging(System.DateTime value);
    partial void OncreatedOnChanged();
    #endregion
		
		public HotelGeoLookupByProp()
		{
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idUsers", DbType="Int NOT NULL")]
		public int idUsers
		{
			get
			{
				return this._idUsers;
			}
			set
			{
				if ((this._idUsers != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidUsersChanging(value);
					this.SendPropertyChanging();
					this._idUsers = value;
					this.SendPropertyChanged("idUsers");
					this.OnidUsersChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Context", DbType="Int NOT NULL")]
		public int Context
		{
			get
			{
				return this._Context;
			}
			set
			{
				if ((this._Context != value))
				{
					this.OnContextChanging(value);
					this.SendPropertyChanging();
					this._Context = value;
					this.SendPropertyChanged("Context");
					this.OnContextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Page", DbType="Int NOT NULL")]
		public int Page
		{
			get
			{
				return this._Page;
			}
			set
			{
				if ((this._Page != value))
				{
					this.OnPageChanging(value);
					this.SendPropertyChanging();
					this._Page = value;
					this.SendPropertyChanged("Page");
					this.OnPageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GDSCode", DbType="Int NOT NULL")]
		public int GDSCode
		{
			get
			{
				return this._GDSCode;
			}
			set
			{
				if ((this._GDSCode != value))
				{
					this.OnGDSCodeChanging(value);
					this.SendPropertyChanging();
					this._GDSCode = value;
					this.SendPropertyChanged("GDSCode");
					this.OnGDSCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PropertyCode", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string PropertyCode
		{
			get
			{
				return this._PropertyCode;
			}
			set
			{
				if ((this._PropertyCode != value))
				{
					this.OnPropertyCodeChanging(value);
					this.SendPropertyChanging();
					this._PropertyCode = value;
					this.SendPropertyChanged("PropertyCode");
					this.OnPropertyCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumFound", DbType="Int NOT NULL")]
		public int NumFound
		{
			get
			{
				return this._NumFound;
			}
			set
			{
				if ((this._NumFound != value))
				{
					this.OnNumFoundChanging(value);
					this.SendPropertyChanging();
					this._NumFound = value;
					this.SendPropertyChanged("NumFound");
					this.OnNumFoundChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_createdOn", DbType="DateTime NOT NULL", IsDbGenerated=true)]
		public System.DateTime createdOn
		{
			get
			{
				return this._createdOn;
			}
			set
			{
				if ((this._createdOn != value))
				{
					this.OncreatedOnChanging(value);
					this.SendPropertyChanging();
					this._createdOn = value;
					this.SendPropertyChanged("createdOn");
					this.OncreatedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_HotelGeoLookupByProp", Storage="_User", ThisKey="idUsers", OtherKey="id", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.HotelGeoLookupByProps.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.HotelGeoLookupByProps.Add(this);
						this._idUsers = value.id;
					}
					else
					{
						this._idUsers = default(int);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SysErr")]
	public partial class SysErr : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _idSysErr;
		
		private int _place;
		
		private string _txt;
		
		private System.DateTime _createdOn;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnidSysErrChanging(int value);
    partial void OnidSysErrChanged();
    partial void OnplaceChanging(int value);
    partial void OnplaceChanged();
    partial void OntxtChanging(string value);
    partial void OntxtChanged();
    partial void OncreatedOnChanging(System.DateTime value);
    partial void OncreatedOnChanged();
    #endregion
		
		public SysErr()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idSysErr", DbType="Int NOT NULL")]
		public int idSysErr
		{
			get
			{
				return this._idSysErr;
			}
			set
			{
				if ((this._idSysErr != value))
				{
					this.OnidSysErrChanging(value);
					this.SendPropertyChanging();
					this._idSysErr = value;
					this.SendPropertyChanged("idSysErr");
					this.OnidSysErrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_place", DbType="Int NOT NULL")]
		public int place
		{
			get
			{
				return this._place;
			}
			set
			{
				if ((this._place != value))
				{
					this.OnplaceChanging(value);
					this.SendPropertyChanging();
					this._place = value;
					this.SendPropertyChanged("place");
					this.OnplaceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_txt", DbType="NVarChar(511) NOT NULL", CanBeNull=false)]
		public string txt
		{
			get
			{
				return this._txt;
			}
			set
			{
				if ((this._txt != value))
				{
					this.OntxtChanging(value);
					this.SendPropertyChanging();
					this._txt = value;
					this.SendPropertyChanged("txt");
					this.OntxtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_createdOn", DbType="DateTime NOT NULL", IsDbGenerated=true)]
		public System.DateTime createdOn
		{
			get
			{
				return this._createdOn;
			}
			set
			{
				if ((this._createdOn != value))
				{
					this.OncreatedOnChanging(value);
					this.SendPropertyChanging();
					this._createdOn = value;
					this.SendPropertyChanged("createdOn");
					this.OncreatedOnChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserMarkerLocation")]
	public partial class UserMarkerLocation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _idUserRoute;
		
		private int _pointnumber;
		
		private string _locationname;
		
		private string _description;
		
		private double _lat;
		
		private double _lng;
		
		private System.DateTime _starttime;
		
		private System.DateTime _endtime;
		
		private System.DateTime _createdOn;
		
		private EntityRef<UserRoute> _UserRoute;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnidUserRouteChanging(int value);
    partial void OnidUserRouteChanged();
    partial void OnpointnumberChanging(int value);
    partial void OnpointnumberChanged();
    partial void OnlocationnameChanging(string value);
    partial void OnlocationnameChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    partial void OnlatChanging(double value);
    partial void OnlatChanged();
    partial void OnlngChanging(double value);
    partial void OnlngChanged();
    partial void OnstarttimeChanging(System.DateTime value);
    partial void OnstarttimeChanged();
    partial void OnendtimeChanging(System.DateTime value);
    partial void OnendtimeChanged();
    partial void OncreatedOnChanging(System.DateTime value);
    partial void OncreatedOnChanged();
    #endregion
		
		public UserMarkerLocation()
		{
			this._UserRoute = default(EntityRef<UserRoute>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idUserRoute", DbType="Int NOT NULL")]
		public int idUserRoute
		{
			get
			{
				return this._idUserRoute;
			}
			set
			{
				if ((this._idUserRoute != value))
				{
					if (this._UserRoute.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidUserRouteChanging(value);
					this.SendPropertyChanging();
					this._idUserRoute = value;
					this.SendPropertyChanged("idUserRoute");
					this.OnidUserRouteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pointnumber", DbType="Int NOT NULL")]
		public int pointnumber
		{
			get
			{
				return this._pointnumber;
			}
			set
			{
				if ((this._pointnumber != value))
				{
					this.OnpointnumberChanging(value);
					this.SendPropertyChanging();
					this._pointnumber = value;
					this.SendPropertyChanged("pointnumber");
					this.OnpointnumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_locationname", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string locationname
		{
			get
			{
				return this._locationname;
			}
			set
			{
				if ((this._locationname != value))
				{
					this.OnlocationnameChanging(value);
					this.SendPropertyChanging();
					this._locationname = value;
					this.SendPropertyChanged("locationname");
					this.OnlocationnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lat", DbType="Float NOT NULL")]
		public double lat
		{
			get
			{
				return this._lat;
			}
			set
			{
				if ((this._lat != value))
				{
					this.OnlatChanging(value);
					this.SendPropertyChanging();
					this._lat = value;
					this.SendPropertyChanged("lat");
					this.OnlatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lng", DbType="Float NOT NULL")]
		public double lng
		{
			get
			{
				return this._lng;
			}
			set
			{
				if ((this._lng != value))
				{
					this.OnlngChanging(value);
					this.SendPropertyChanging();
					this._lng = value;
					this.SendPropertyChanged("lng");
					this.OnlngChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_starttime", DbType="DateTime NOT NULL")]
		public System.DateTime starttime
		{
			get
			{
				return this._starttime;
			}
			set
			{
				if ((this._starttime != value))
				{
					this.OnstarttimeChanging(value);
					this.SendPropertyChanging();
					this._starttime = value;
					this.SendPropertyChanged("starttime");
					this.OnstarttimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_endtime", DbType="DateTime NOT NULL")]
		public System.DateTime endtime
		{
			get
			{
				return this._endtime;
			}
			set
			{
				if ((this._endtime != value))
				{
					this.OnendtimeChanging(value);
					this.SendPropertyChanging();
					this._endtime = value;
					this.SendPropertyChanged("endtime");
					this.OnendtimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_createdOn", DbType="DateTime NOT NULL", IsDbGenerated=true)]
		public System.DateTime createdOn
		{
			get
			{
				return this._createdOn;
			}
			set
			{
				if ((this._createdOn != value))
				{
					this.OncreatedOnChanging(value);
					this.SendPropertyChanging();
					this._createdOn = value;
					this.SendPropertyChanged("createdOn");
					this.OncreatedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserRoute_UserMarkerLocation", Storage="_UserRoute", ThisKey="idUserRoute", OtherKey="id", IsForeignKey=true)]
		public UserRoute UserRoute
		{
			get
			{
				return this._UserRoute.Entity;
			}
			set
			{
				UserRoute previousValue = this._UserRoute.Entity;
				if (((previousValue != value) 
							|| (this._UserRoute.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UserRoute.Entity = null;
						previousValue.UserMarkerLocations.Remove(this);
					}
					this._UserRoute.Entity = value;
					if ((value != null))
					{
						value.UserMarkerLocations.Add(this);
						this._idUserRoute = value.id;
					}
					else
					{
						this._idUserRoute = default(int);
					}
					this.SendPropertyChanged("UserRoute");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserRoute")]
	public partial class UserRoute : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _idUser;
		
		private string _routename;
		
		private string _description;
		
		private System.DateTime _starttime;
		
		private System.DateTime _endtime;
		
		private System.DateTime _createdOn;
		
		private EntitySet<UserMarkerLocation> _UserMarkerLocations;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnidUserChanging(int value);
    partial void OnidUserChanged();
    partial void OnroutenameChanging(string value);
    partial void OnroutenameChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    partial void OnstarttimeChanging(System.DateTime value);
    partial void OnstarttimeChanged();
    partial void OnendtimeChanging(System.DateTime value);
    partial void OnendtimeChanged();
    partial void OncreatedOnChanging(System.DateTime value);
    partial void OncreatedOnChanged();
    #endregion
		
		public UserRoute()
		{
			this._UserMarkerLocations = new EntitySet<UserMarkerLocation>(new Action<UserMarkerLocation>(this.attach_UserMarkerLocations), new Action<UserMarkerLocation>(this.detach_UserMarkerLocations));
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idUser", DbType="Int NOT NULL")]
		public int idUser
		{
			get
			{
				return this._idUser;
			}
			set
			{
				if ((this._idUser != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidUserChanging(value);
					this.SendPropertyChanging();
					this._idUser = value;
					this.SendPropertyChanged("idUser");
					this.OnidUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_routename", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string routename
		{
			get
			{
				return this._routename;
			}
			set
			{
				if ((this._routename != value))
				{
					this.OnroutenameChanging(value);
					this.SendPropertyChanging();
					this._routename = value;
					this.SendPropertyChanged("routename");
					this.OnroutenameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_starttime", DbType="DateTime NOT NULL")]
		public System.DateTime starttime
		{
			get
			{
				return this._starttime;
			}
			set
			{
				if ((this._starttime != value))
				{
					this.OnstarttimeChanging(value);
					this.SendPropertyChanging();
					this._starttime = value;
					this.SendPropertyChanged("starttime");
					this.OnstarttimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_endtime", DbType="DateTime NOT NULL")]
		public System.DateTime endtime
		{
			get
			{
				return this._endtime;
			}
			set
			{
				if ((this._endtime != value))
				{
					this.OnendtimeChanging(value);
					this.SendPropertyChanging();
					this._endtime = value;
					this.SendPropertyChanged("endtime");
					this.OnendtimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_createdOn", DbType="DateTime NOT NULL", IsDbGenerated=true)]
		public System.DateTime createdOn
		{
			get
			{
				return this._createdOn;
			}
			set
			{
				if ((this._createdOn != value))
				{
					this.OncreatedOnChanging(value);
					this.SendPropertyChanging();
					this._createdOn = value;
					this.SendPropertyChanged("createdOn");
					this.OncreatedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserRoute_UserMarkerLocation", Storage="_UserMarkerLocations", ThisKey="id", OtherKey="idUserRoute")]
		public EntitySet<UserMarkerLocation> UserMarkerLocations
		{
			get
			{
				return this._UserMarkerLocations;
			}
			set
			{
				this._UserMarkerLocations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_UserRoute", Storage="_User", ThisKey="idUser", OtherKey="id", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.UserRoutes.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.UserRoutes.Add(this);
						this._idUser = value.id;
					}
					else
					{
						this._idUser = default(int);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_UserMarkerLocations(UserMarkerLocation entity)
		{
			this.SendPropertyChanging();
			entity.UserRoute = this;
		}
		
		private void detach_UserMarkerLocations(UserMarkerLocation entity)
		{
			this.SendPropertyChanging();
			entity.UserRoute = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Users")]
	public partial class User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.Guid _idaspnet_Users;
		
		private string _FirstName;
		
		private string _LastName;
		
		private string _Description;
		
		private int _Status;
		
		private string _url;
		
		private string _LogoPath;
		
		private string _Address1;
		
		private string _Address2;
		
		private string _City;
		
		private string _State;
		
		private string _Country;
		
		private string _ZipCode;
		
		private string _Phone1;
		
		private string _Phone2;
		
		private System.DateTime _Startdate;
		
		private System.DateTime _Stopdate;
		
		private System.DateTime _createdOn;
		
		private EntitySet<Config> _Configs;
		
		private EntitySet<CustomerUser> _CustomerUsers;
		
		private EntitySet<EventLogin> _EventLogins;
		
		private EntitySet<Group> _Groups;
		
		private EntitySet<UserGroup> _UserGroups;
		
		private EntitySet<HotelGeoLookupByProp> _HotelGeoLookupByProps;
		
		private EntitySet<UserRoute> _UserRoutes;
		
		private EntitySet<FileUpload> _FileUploads;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onidaspnet_UsersChanging(System.Guid value);
    partial void Onidaspnet_UsersChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnurlChanging(string value);
    partial void OnurlChanged();
    partial void OnLogoPathChanging(string value);
    partial void OnLogoPathChanged();
    partial void OnAddress1Changing(string value);
    partial void OnAddress1Changed();
    partial void OnAddress2Changing(string value);
    partial void OnAddress2Changed();
    partial void OnCityChanging(string value);
    partial void OnCityChanged();
    partial void OnStateChanging(string value);
    partial void OnStateChanged();
    partial void OnCountryChanging(string value);
    partial void OnCountryChanged();
    partial void OnZipCodeChanging(string value);
    partial void OnZipCodeChanged();
    partial void OnPhone1Changing(string value);
    partial void OnPhone1Changed();
    partial void OnPhone2Changing(string value);
    partial void OnPhone2Changed();
    partial void OnStartdateChanging(System.DateTime value);
    partial void OnStartdateChanged();
    partial void OnStopdateChanging(System.DateTime value);
    partial void OnStopdateChanged();
    partial void OncreatedOnChanging(System.DateTime value);
    partial void OncreatedOnChanged();
    #endregion
		
		public User()
		{
			this._Configs = new EntitySet<Config>(new Action<Config>(this.attach_Configs), new Action<Config>(this.detach_Configs));
			this._CustomerUsers = new EntitySet<CustomerUser>(new Action<CustomerUser>(this.attach_CustomerUsers), new Action<CustomerUser>(this.detach_CustomerUsers));
			this._EventLogins = new EntitySet<EventLogin>(new Action<EventLogin>(this.attach_EventLogins), new Action<EventLogin>(this.detach_EventLogins));
			this._Groups = new EntitySet<Group>(new Action<Group>(this.attach_Groups), new Action<Group>(this.detach_Groups));
			this._UserGroups = new EntitySet<UserGroup>(new Action<UserGroup>(this.attach_UserGroups), new Action<UserGroup>(this.detach_UserGroups));
			this._HotelGeoLookupByProps = new EntitySet<HotelGeoLookupByProp>(new Action<HotelGeoLookupByProp>(this.attach_HotelGeoLookupByProps), new Action<HotelGeoLookupByProp>(this.detach_HotelGeoLookupByProps));
			this._UserRoutes = new EntitySet<UserRoute>(new Action<UserRoute>(this.attach_UserRoutes), new Action<UserRoute>(this.detach_UserRoutes));
			this._FileUploads = new EntitySet<FileUpload>(new Action<FileUpload>(this.attach_FileUploads), new Action<FileUpload>(this.detach_FileUploads));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idaspnet_Users", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid idaspnet_Users
		{
			get
			{
				return this._idaspnet_Users;
			}
			set
			{
				if ((this._idaspnet_Users != value))
				{
					this.Onidaspnet_UsersChanging(value);
					this.SendPropertyChanging();
					this._idaspnet_Users = value;
					this.SendPropertyChanged("idaspnet_Users");
					this.Onidaspnet_UsersChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(60) NOT NULL", CanBeNull=false)]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(60) NOT NULL", CanBeNull=false)]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_url", DbType="NVarChar(255)")]
		public string url
		{
			get
			{
				return this._url;
			}
			set
			{
				if ((this._url != value))
				{
					this.OnurlChanging(value);
					this.SendPropertyChanging();
					this._url = value;
					this.SendPropertyChanged("url");
					this.OnurlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogoPath", DbType="NVarChar(255)")]
		public string LogoPath
		{
			get
			{
				return this._LogoPath;
			}
			set
			{
				if ((this._LogoPath != value))
				{
					this.OnLogoPathChanging(value);
					this.SendPropertyChanging();
					this._LogoPath = value;
					this.SendPropertyChanged("LogoPath");
					this.OnLogoPathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address1", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Address1
		{
			get
			{
				return this._Address1;
			}
			set
			{
				if ((this._Address1 != value))
				{
					this.OnAddress1Changing(value);
					this.SendPropertyChanging();
					this._Address1 = value;
					this.SendPropertyChanged("Address1");
					this.OnAddress1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address2", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Address2
		{
			get
			{
				return this._Address2;
			}
			set
			{
				if ((this._Address2 != value))
				{
					this.OnAddress2Changing(value);
					this.SendPropertyChanging();
					this._Address2 = value;
					this.SendPropertyChanged("Address2");
					this.OnAddress2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string City
		{
			get
			{
				return this._City;
			}
			set
			{
				if ((this._City != value))
				{
					this.OnCityChanging(value);
					this.SendPropertyChanging();
					this._City = value;
					this.SendPropertyChanged("City");
					this.OnCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_State", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string State
		{
			get
			{
				return this._State;
			}
			set
			{
				if ((this._State != value))
				{
					this.OnStateChanging(value);
					this.SendPropertyChanging();
					this._State = value;
					this.SendPropertyChanged("State");
					this.OnStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Country", DbType="NVarChar(25) NOT NULL", CanBeNull=false)]
		public string Country
		{
			get
			{
				return this._Country;
			}
			set
			{
				if ((this._Country != value))
				{
					this.OnCountryChanging(value);
					this.SendPropertyChanging();
					this._Country = value;
					this.SendPropertyChanged("Country");
					this.OnCountryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ZipCode", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string ZipCode
		{
			get
			{
				return this._ZipCode;
			}
			set
			{
				if ((this._ZipCode != value))
				{
					this.OnZipCodeChanging(value);
					this.SendPropertyChanging();
					this._ZipCode = value;
					this.SendPropertyChanged("ZipCode");
					this.OnZipCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone1", DbType="NVarChar(16) NOT NULL", CanBeNull=false)]
		public string Phone1
		{
			get
			{
				return this._Phone1;
			}
			set
			{
				if ((this._Phone1 != value))
				{
					this.OnPhone1Changing(value);
					this.SendPropertyChanging();
					this._Phone1 = value;
					this.SendPropertyChanged("Phone1");
					this.OnPhone1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone2", DbType="NVarChar(16) NOT NULL", CanBeNull=false)]
		public string Phone2
		{
			get
			{
				return this._Phone2;
			}
			set
			{
				if ((this._Phone2 != value))
				{
					this.OnPhone2Changing(value);
					this.SendPropertyChanging();
					this._Phone2 = value;
					this.SendPropertyChanged("Phone2");
					this.OnPhone2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Startdate", DbType="DateTime NOT NULL")]
		public System.DateTime Startdate
		{
			get
			{
				return this._Startdate;
			}
			set
			{
				if ((this._Startdate != value))
				{
					this.OnStartdateChanging(value);
					this.SendPropertyChanging();
					this._Startdate = value;
					this.SendPropertyChanged("Startdate");
					this.OnStartdateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Stopdate", DbType="DateTime NOT NULL")]
		public System.DateTime Stopdate
		{
			get
			{
				return this._Stopdate;
			}
			set
			{
				if ((this._Stopdate != value))
				{
					this.OnStopdateChanging(value);
					this.SendPropertyChanging();
					this._Stopdate = value;
					this.SendPropertyChanged("Stopdate");
					this.OnStopdateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_createdOn", DbType="DateTime NOT NULL", IsDbGenerated=true)]
		public System.DateTime createdOn
		{
			get
			{
				return this._createdOn;
			}
			set
			{
				if ((this._createdOn != value))
				{
					this.OncreatedOnChanging(value);
					this.SendPropertyChanging();
					this._createdOn = value;
					this.SendPropertyChanged("createdOn");
					this.OncreatedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Config", Storage="_Configs", ThisKey="id", OtherKey="idUser")]
		public EntitySet<Config> Configs
		{
			get
			{
				return this._Configs;
			}
			set
			{
				this._Configs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_CustomerUser", Storage="_CustomerUsers", ThisKey="id", OtherKey="idUsers")]
		public EntitySet<CustomerUser> CustomerUsers
		{
			get
			{
				return this._CustomerUsers;
			}
			set
			{
				this._CustomerUsers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_EventLogin", Storage="_EventLogins", ThisKey="id", OtherKey="idUser")]
		public EntitySet<EventLogin> EventLogins
		{
			get
			{
				return this._EventLogins;
			}
			set
			{
				this._EventLogins.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Group", Storage="_Groups", ThisKey="id", OtherKey="idUser")]
		public EntitySet<Group> Groups
		{
			get
			{
				return this._Groups;
			}
			set
			{
				this._Groups.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_UserGroup", Storage="_UserGroups", ThisKey="id", OtherKey="idUser")]
		public EntitySet<UserGroup> UserGroups
		{
			get
			{
				return this._UserGroups;
			}
			set
			{
				this._UserGroups.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_HotelGeoLookupByProp", Storage="_HotelGeoLookupByProps", ThisKey="id", OtherKey="idUsers")]
		public EntitySet<HotelGeoLookupByProp> HotelGeoLookupByProps
		{
			get
			{
				return this._HotelGeoLookupByProps;
			}
			set
			{
				this._HotelGeoLookupByProps.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_UserRoute", Storage="_UserRoutes", ThisKey="id", OtherKey="idUser")]
		public EntitySet<UserRoute> UserRoutes
		{
			get
			{
				return this._UserRoutes;
			}
			set
			{
				this._UserRoutes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_FileUpload", Storage="_FileUploads", ThisKey="id", OtherKey="idUsers")]
		public EntitySet<FileUpload> FileUploads
		{
			get
			{
				return this._FileUploads;
			}
			set
			{
				this._FileUploads.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Configs(Config entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_Configs(Config entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_CustomerUsers(CustomerUser entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_CustomerUsers(CustomerUser entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_EventLogins(EventLogin entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_EventLogins(EventLogin entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_Groups(Group entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_Groups(Group entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_UserGroups(UserGroup entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_UserGroups(UserGroup entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_HotelGeoLookupByProps(HotelGeoLookupByProp entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_HotelGeoLookupByProps(HotelGeoLookupByProp entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_UserRoutes(UserRoute entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_UserRoutes(UserRoute entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_FileUploads(FileUpload entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_FileUploads(FileUpload entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.WebLog")]
	public partial class WebLog : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _page;
		
		private string _querystring;
		
		private string _referer;
		
		private string _sessionid;
		
		private string _language;
		
		private string _browser;
		
		private string _host;
		
		private string _ip;
		
		private System.DateTime _createdOn;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnpageChanging(string value);
    partial void OnpageChanged();
    partial void OnquerystringChanging(string value);
    partial void OnquerystringChanged();
    partial void OnrefererChanging(string value);
    partial void OnrefererChanged();
    partial void OnsessionidChanging(string value);
    partial void OnsessionidChanged();
    partial void OnlanguageChanging(string value);
    partial void OnlanguageChanged();
    partial void OnbrowserChanging(string value);
    partial void OnbrowserChanged();
    partial void OnhostChanging(string value);
    partial void OnhostChanged();
    partial void OnipChanging(string value);
    partial void OnipChanged();
    partial void OncreatedOnChanging(System.DateTime value);
    partial void OncreatedOnChanged();
    #endregion
		
		public WebLog()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_page", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string page
		{
			get
			{
				return this._page;
			}
			set
			{
				if ((this._page != value))
				{
					this.OnpageChanging(value);
					this.SendPropertyChanging();
					this._page = value;
					this.SendPropertyChanged("page");
					this.OnpageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_querystring", DbType="NVarChar(512) NOT NULL", CanBeNull=false)]
		public string querystring
		{
			get
			{
				return this._querystring;
			}
			set
			{
				if ((this._querystring != value))
				{
					this.OnquerystringChanging(value);
					this.SendPropertyChanging();
					this._querystring = value;
					this.SendPropertyChanged("querystring");
					this.OnquerystringChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_referer", DbType="NVarChar(512) NOT NULL", CanBeNull=false)]
		public string referer
		{
			get
			{
				return this._referer;
			}
			set
			{
				if ((this._referer != value))
				{
					this.OnrefererChanging(value);
					this.SendPropertyChanging();
					this._referer = value;
					this.SendPropertyChanged("referer");
					this.OnrefererChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sessionid", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string sessionid
		{
			get
			{
				return this._sessionid;
			}
			set
			{
				if ((this._sessionid != value))
				{
					this.OnsessionidChanging(value);
					this.SendPropertyChanging();
					this._sessionid = value;
					this.SendPropertyChanged("sessionid");
					this.OnsessionidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_language", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string language
		{
			get
			{
				return this._language;
			}
			set
			{
				if ((this._language != value))
				{
					this.OnlanguageChanging(value);
					this.SendPropertyChanging();
					this._language = value;
					this.SendPropertyChanged("language");
					this.OnlanguageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_browser", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string browser
		{
			get
			{
				return this._browser;
			}
			set
			{
				if ((this._browser != value))
				{
					this.OnbrowserChanging(value);
					this.SendPropertyChanging();
					this._browser = value;
					this.SendPropertyChanged("browser");
					this.OnbrowserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_host", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string host
		{
			get
			{
				return this._host;
			}
			set
			{
				if ((this._host != value))
				{
					this.OnhostChanging(value);
					this.SendPropertyChanging();
					this._host = value;
					this.SendPropertyChanged("host");
					this.OnhostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ip", DbType="NVarChar(25) NOT NULL", CanBeNull=false)]
		public string ip
		{
			get
			{
				return this._ip;
			}
			set
			{
				if ((this._ip != value))
				{
					this.OnipChanging(value);
					this.SendPropertyChanging();
					this._ip = value;
					this.SendPropertyChanged("ip");
					this.OnipChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_createdOn", DbType="DateTime NOT NULL", IsDbGenerated=true)]
		public System.DateTime createdOn
		{
			get
			{
				return this._createdOn;
			}
			set
			{
				if ((this._createdOn != value))
				{
					this.OncreatedOnChanging(value);
					this.SendPropertyChanging();
					this._createdOn = value;
					this.SendPropertyChanged("createdOn");
					this.OncreatedOnChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FileUpload")]
	public partial class FileUpload : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _idUsers;
		
		private int _Context;
		
		private int _Page;
		
		private string _UploadName;
		
		private string _SaveBasePath;
		
		private string _SavedName;
		
		private string _ReturnBasePath;
		
		private string _ReturnName;
		
		private System.DateTime _createdOn;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnidUsersChanging(int value);
    partial void OnidUsersChanged();
    partial void OnContextChanging(int value);
    partial void OnContextChanged();
    partial void OnPageChanging(int value);
    partial void OnPageChanged();
    partial void OnUploadNameChanging(string value);
    partial void OnUploadNameChanged();
    partial void OnSaveBasePathChanging(string value);
    partial void OnSaveBasePathChanged();
    partial void OnSavedNameChanging(string value);
    partial void OnSavedNameChanged();
    partial void OnReturnBasePathChanging(string value);
    partial void OnReturnBasePathChanged();
    partial void OnReturnNameChanging(string value);
    partial void OnReturnNameChanged();
    partial void OncreatedOnChanging(System.DateTime value);
    partial void OncreatedOnChanged();
    #endregion
		
		public FileUpload()
		{
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idUsers", DbType="Int NOT NULL")]
		public int idUsers
		{
			get
			{
				return this._idUsers;
			}
			set
			{
				if ((this._idUsers != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidUsersChanging(value);
					this.SendPropertyChanging();
					this._idUsers = value;
					this.SendPropertyChanged("idUsers");
					this.OnidUsersChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Context", DbType="Int NOT NULL")]
		public int Context
		{
			get
			{
				return this._Context;
			}
			set
			{
				if ((this._Context != value))
				{
					this.OnContextChanging(value);
					this.SendPropertyChanging();
					this._Context = value;
					this.SendPropertyChanged("Context");
					this.OnContextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Page", DbType="Int NOT NULL")]
		public int Page
		{
			get
			{
				return this._Page;
			}
			set
			{
				if ((this._Page != value))
				{
					this.OnPageChanging(value);
					this.SendPropertyChanging();
					this._Page = value;
					this.SendPropertyChanged("Page");
					this.OnPageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UploadName", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string UploadName
		{
			get
			{
				return this._UploadName;
			}
			set
			{
				if ((this._UploadName != value))
				{
					this.OnUploadNameChanging(value);
					this.SendPropertyChanging();
					this._UploadName = value;
					this.SendPropertyChanged("UploadName");
					this.OnUploadNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SaveBasePath", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string SaveBasePath
		{
			get
			{
				return this._SaveBasePath;
			}
			set
			{
				if ((this._SaveBasePath != value))
				{
					this.OnSaveBasePathChanging(value);
					this.SendPropertyChanging();
					this._SaveBasePath = value;
					this.SendPropertyChanged("SaveBasePath");
					this.OnSaveBasePathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SavedName", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string SavedName
		{
			get
			{
				return this._SavedName;
			}
			set
			{
				if ((this._SavedName != value))
				{
					this.OnSavedNameChanging(value);
					this.SendPropertyChanging();
					this._SavedName = value;
					this.SendPropertyChanged("SavedName");
					this.OnSavedNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReturnBasePath", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string ReturnBasePath
		{
			get
			{
				return this._ReturnBasePath;
			}
			set
			{
				if ((this._ReturnBasePath != value))
				{
					this.OnReturnBasePathChanging(value);
					this.SendPropertyChanging();
					this._ReturnBasePath = value;
					this.SendPropertyChanged("ReturnBasePath");
					this.OnReturnBasePathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReturnName", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string ReturnName
		{
			get
			{
				return this._ReturnName;
			}
			set
			{
				if ((this._ReturnName != value))
				{
					this.OnReturnNameChanging(value);
					this.SendPropertyChanging();
					this._ReturnName = value;
					this.SendPropertyChanged("ReturnName");
					this.OnReturnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_createdOn", DbType="DateTime NOT NULL", IsDbGenerated=true)]
		public System.DateTime createdOn
		{
			get
			{
				return this._createdOn;
			}
			set
			{
				if ((this._createdOn != value))
				{
					this.OncreatedOnChanging(value);
					this.SendPropertyChanging();
					this._createdOn = value;
					this.SendPropertyChanged("createdOn");
					this.OncreatedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_FileUpload", Storage="_User", ThisKey="idUsers", OtherKey="id", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.FileUploads.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.FileUploads.Add(this);
						this._idUsers = value.id;
					}
					else
					{
						this._idUsers = default(int);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NameValue")]
	public partial class NameValue : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _Name;
		
		private string _Value;
		
		private System.DateTime _createdOn;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnValueChanging(string value);
    partial void OnValueChanged();
    partial void OncreatedOnChanging(System.DateTime value);
    partial void OncreatedOnChanged();
    #endregion
		
		public NameValue()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this.OnValueChanging(value);
					this.SendPropertyChanging();
					this._Value = value;
					this.SendPropertyChanged("Value");
					this.OnValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_createdOn", DbType="DateTime NOT NULL", IsDbGenerated=true)]
		public System.DateTime createdOn
		{
			get
			{
				return this._createdOn;
			}
			set
			{
				if ((this._createdOn != value))
				{
					this.OncreatedOnChanging(value);
					this.SendPropertyChanging();
					this._createdOn = value;
					this.SendPropertyChanged("createdOn");
					this.OncreatedOnChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HotelGeo")]
	public partial class HotelGeo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _hotelname;
		
		private string _address1;
		
		private string _address2;
		
		private string _address3;
		
		private string _city;
		
		private string _cityCode;
		
		private string _region;
		
		private string _state;
		
		private string _country;
		
		private string _countryCode;
		
		private string _postalcode;
		
		private string _email;
		
		private string _phone;
		
		private string _fax;
		
		private string _sabrecode;
		
		private string _amadeuscode;
		
		private string _apollocode;
		
		private string _worldspancode;
		
		private double _lat;
		
		private double _lng;
		
		private System.DateTime _createdOn;
		
		private EntitySet<HotelCommission> _HotelCommissions;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnhotelnameChanging(string value);
    partial void OnhotelnameChanged();
    partial void Onaddress1Changing(string value);
    partial void Onaddress1Changed();
    partial void Onaddress2Changing(string value);
    partial void Onaddress2Changed();
    partial void Onaddress3Changing(string value);
    partial void Onaddress3Changed();
    partial void OncityChanging(string value);
    partial void OncityChanged();
    partial void OncityCodeChanging(string value);
    partial void OncityCodeChanged();
    partial void OnregionChanging(string value);
    partial void OnregionChanged();
    partial void OnstateChanging(string value);
    partial void OnstateChanged();
    partial void OncountryChanging(string value);
    partial void OncountryChanged();
    partial void OncountryCodeChanging(string value);
    partial void OncountryCodeChanged();
    partial void OnpostalcodeChanging(string value);
    partial void OnpostalcodeChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void OnphoneChanging(string value);
    partial void OnphoneChanged();
    partial void OnfaxChanging(string value);
    partial void OnfaxChanged();
    partial void OnsabrecodeChanging(string value);
    partial void OnsabrecodeChanged();
    partial void OnamadeuscodeChanging(string value);
    partial void OnamadeuscodeChanged();
    partial void OnapollocodeChanging(string value);
    partial void OnapollocodeChanged();
    partial void OnworldspancodeChanging(string value);
    partial void OnworldspancodeChanged();
    partial void OnlatChanging(double value);
    partial void OnlatChanged();
    partial void OnlngChanging(double value);
    partial void OnlngChanged();
    partial void OncreatedOnChanging(System.DateTime value);
    partial void OncreatedOnChanged();
    #endregion
		
		public HotelGeo()
		{
			this._HotelCommissions = new EntitySet<HotelCommission>(new Action<HotelCommission>(this.attach_HotelCommissions), new Action<HotelCommission>(this.detach_HotelCommissions));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_hotelname", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string hotelname
		{
			get
			{
				return this._hotelname;
			}
			set
			{
				if ((this._hotelname != value))
				{
					this.OnhotelnameChanging(value);
					this.SendPropertyChanging();
					this._hotelname = value;
					this.SendPropertyChanged("hotelname");
					this.OnhotelnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_address1", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string address1
		{
			get
			{
				return this._address1;
			}
			set
			{
				if ((this._address1 != value))
				{
					this.Onaddress1Changing(value);
					this.SendPropertyChanging();
					this._address1 = value;
					this.SendPropertyChanged("address1");
					this.Onaddress1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_address2", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string address2
		{
			get
			{
				return this._address2;
			}
			set
			{
				if ((this._address2 != value))
				{
					this.Onaddress2Changing(value);
					this.SendPropertyChanging();
					this._address2 = value;
					this.SendPropertyChanged("address2");
					this.Onaddress2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_address3", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string address3
		{
			get
			{
				return this._address3;
			}
			set
			{
				if ((this._address3 != value))
				{
					this.Onaddress3Changing(value);
					this.SendPropertyChanging();
					this._address3 = value;
					this.SendPropertyChanged("address3");
					this.Onaddress3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_city", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string city
		{
			get
			{
				return this._city;
			}
			set
			{
				if ((this._city != value))
				{
					this.OncityChanging(value);
					this.SendPropertyChanging();
					this._city = value;
					this.SendPropertyChanged("city");
					this.OncityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cityCode", DbType="Char(3) NOT NULL", CanBeNull=false)]
		public string cityCode
		{
			get
			{
				return this._cityCode;
			}
			set
			{
				if ((this._cityCode != value))
				{
					this.OncityCodeChanging(value);
					this.SendPropertyChanging();
					this._cityCode = value;
					this.SendPropertyChanged("cityCode");
					this.OncityCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_region", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string region
		{
			get
			{
				return this._region;
			}
			set
			{
				if ((this._region != value))
				{
					this.OnregionChanging(value);
					this.SendPropertyChanging();
					this._region = value;
					this.SendPropertyChanged("region");
					this.OnregionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_state", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string state
		{
			get
			{
				return this._state;
			}
			set
			{
				if ((this._state != value))
				{
					this.OnstateChanging(value);
					this.SendPropertyChanging();
					this._state = value;
					this.SendPropertyChanged("state");
					this.OnstateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_country", DbType="NVarChar(35) NOT NULL", CanBeNull=false)]
		public string country
		{
			get
			{
				return this._country;
			}
			set
			{
				if ((this._country != value))
				{
					this.OncountryChanging(value);
					this.SendPropertyChanging();
					this._country = value;
					this.SendPropertyChanged("country");
					this.OncountryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_countryCode", DbType="Char(2) NOT NULL", CanBeNull=false)]
		public string countryCode
		{
			get
			{
				return this._countryCode;
			}
			set
			{
				if ((this._countryCode != value))
				{
					this.OncountryCodeChanging(value);
					this.SendPropertyChanging();
					this._countryCode = value;
					this.SendPropertyChanged("countryCode");
					this.OncountryCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_postalcode", DbType="NVarChar(15) NOT NULL", CanBeNull=false)]
		public string postalcode
		{
			get
			{
				return this._postalcode;
			}
			set
			{
				if ((this._postalcode != value))
				{
					this.OnpostalcodeChanging(value);
					this.SendPropertyChanging();
					this._postalcode = value;
					this.SendPropertyChanged("postalcode");
					this.OnpostalcodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="NVarChar(75) NOT NULL", CanBeNull=false)]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_phone", DbType="NVarChar(40) NOT NULL", CanBeNull=false)]
		public string phone
		{
			get
			{
				return this._phone;
			}
			set
			{
				if ((this._phone != value))
				{
					this.OnphoneChanging(value);
					this.SendPropertyChanging();
					this._phone = value;
					this.SendPropertyChanged("phone");
					this.OnphoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fax", DbType="NVarChar(40) NOT NULL", CanBeNull=false)]
		public string fax
		{
			get
			{
				return this._fax;
			}
			set
			{
				if ((this._fax != value))
				{
					this.OnfaxChanging(value);
					this.SendPropertyChanging();
					this._fax = value;
					this.SendPropertyChanged("fax");
					this.OnfaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sabrecode", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string sabrecode
		{
			get
			{
				return this._sabrecode;
			}
			set
			{
				if ((this._sabrecode != value))
				{
					this.OnsabrecodeChanging(value);
					this.SendPropertyChanging();
					this._sabrecode = value;
					this.SendPropertyChanged("sabrecode");
					this.OnsabrecodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_amadeuscode", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string amadeuscode
		{
			get
			{
				return this._amadeuscode;
			}
			set
			{
				if ((this._amadeuscode != value))
				{
					this.OnamadeuscodeChanging(value);
					this.SendPropertyChanging();
					this._amadeuscode = value;
					this.SendPropertyChanged("amadeuscode");
					this.OnamadeuscodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_apollocode", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string apollocode
		{
			get
			{
				return this._apollocode;
			}
			set
			{
				if ((this._apollocode != value))
				{
					this.OnapollocodeChanging(value);
					this.SendPropertyChanging();
					this._apollocode = value;
					this.SendPropertyChanged("apollocode");
					this.OnapollocodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_worldspancode", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string worldspancode
		{
			get
			{
				return this._worldspancode;
			}
			set
			{
				if ((this._worldspancode != value))
				{
					this.OnworldspancodeChanging(value);
					this.SendPropertyChanging();
					this._worldspancode = value;
					this.SendPropertyChanged("worldspancode");
					this.OnworldspancodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lat", DbType="Float NOT NULL")]
		public double lat
		{
			get
			{
				return this._lat;
			}
			set
			{
				if ((this._lat != value))
				{
					this.OnlatChanging(value);
					this.SendPropertyChanging();
					this._lat = value;
					this.SendPropertyChanged("lat");
					this.OnlatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lng", DbType="Float NOT NULL")]
		public double lng
		{
			get
			{
				return this._lng;
			}
			set
			{
				if ((this._lng != value))
				{
					this.OnlngChanging(value);
					this.SendPropertyChanging();
					this._lng = value;
					this.SendPropertyChanged("lng");
					this.OnlngChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_createdOn", DbType="DateTime NOT NULL", IsDbGenerated=true)]
		public System.DateTime createdOn
		{
			get
			{
				return this._createdOn;
			}
			set
			{
				if ((this._createdOn != value))
				{
					this.OncreatedOnChanging(value);
					this.SendPropertyChanging();
					this._createdOn = value;
					this.SendPropertyChanged("createdOn");
					this.OncreatedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HotelGeo_HotelCommission", Storage="_HotelCommissions", ThisKey="id", OtherKey="idHotelGeo")]
		public EntitySet<HotelCommission> HotelCommissions
		{
			get
			{
				return this._HotelCommissions;
			}
			set
			{
				this._HotelCommissions.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_HotelCommissions(HotelCommission entity)
		{
			this.SendPropertyChanging();
			entity.HotelGeo = this;
		}
		
		private void detach_HotelCommissions(HotelCommission entity)
		{
			this.SendPropertyChanging();
			entity.HotelGeo = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.XMLHttp")]
	public partial class XMLHttp : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _id;
		
		private string _url;
		
		private string _response;
		
		private System.Xml.Linq.XDocument _responseXML;
		
		private System.DateTime _createdOn;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(long value);
    partial void OnidChanged();
    partial void OnurlChanging(string value);
    partial void OnurlChanged();
    partial void OnresponseChanging(string value);
    partial void OnresponseChanged();
    partial void OnresponseXMLChanging(System.Xml.Linq.XDocument value);
    partial void OnresponseXMLChanged();
    partial void OncreatedOnChanging(System.DateTime value);
    partial void OncreatedOnChanged();
    #endregion
		
		public XMLHttp()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_url", DbType="NVarChar(1000) NOT NULL", CanBeNull=false)]
		public string url
		{
			get
			{
				return this._url;
			}
			set
			{
				if ((this._url != value))
				{
					this.OnurlChanging(value);
					this.SendPropertyChanging();
					this._url = value;
					this.SendPropertyChanged("url");
					this.OnurlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_response", DbType="NVarChar(2500)")]
		public string response
		{
			get
			{
				return this._response;
			}
			set
			{
				if ((this._response != value))
				{
					this.OnresponseChanging(value);
					this.SendPropertyChanging();
					this._response = value;
					this.SendPropertyChanged("response");
					this.OnresponseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_responseXML", DbType="XML", CanBeNull=true, UpdateCheck=UpdateCheck.Never)]
		public System.Xml.Linq.XDocument responseXML
		{
			get
			{
				return this._responseXML;
			}
			set
			{
				if ((this._responseXML != value))
				{
					this.OnresponseXMLChanging(value);
					this.SendPropertyChanging();
					this._responseXML = value;
					this.SendPropertyChanged("responseXML");
					this.OnresponseXMLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_createdOn", DbType="DateTime NOT NULL", IsDbGenerated=true)]
		public System.DateTime createdOn
		{
			get
			{
				return this._createdOn;
			}
			set
			{
				if ((this._createdOn != value))
				{
					this.OncreatedOnChanging(value);
					this.SendPropertyChanging();
					this._createdOn = value;
					this.SendPropertyChanged("createdOn");
					this.OncreatedOnChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.WebRequest")]
	public partial class WebRequest : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _id;
		
		private int _page;
		
		private int _context;
		
		private string _url;
		
		private System.Xml.Linq.XDocument _inxml;
		
		private System.Xml.Linq.XDocument _outxml;
		
		private System.DateTime _createdOn;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(long value);
    partial void OnidChanged();
    partial void OnpageChanging(int value);
    partial void OnpageChanged();
    partial void OncontextChanging(int value);
    partial void OncontextChanged();
    partial void OnurlChanging(string value);
    partial void OnurlChanged();
    partial void OninxmlChanging(System.Xml.Linq.XDocument value);
    partial void OninxmlChanged();
    partial void OnoutxmlChanging(System.Xml.Linq.XDocument value);
    partial void OnoutxmlChanged();
    partial void OncreatedOnChanging(System.DateTime value);
    partial void OncreatedOnChanged();
    #endregion
		
		public WebRequest()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_page", DbType="Int NOT NULL")]
		public int page
		{
			get
			{
				return this._page;
			}
			set
			{
				if ((this._page != value))
				{
					this.OnpageChanging(value);
					this.SendPropertyChanging();
					this._page = value;
					this.SendPropertyChanged("page");
					this.OnpageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_context", DbType="Int NOT NULL")]
		public int context
		{
			get
			{
				return this._context;
			}
			set
			{
				if ((this._context != value))
				{
					this.OncontextChanging(value);
					this.SendPropertyChanging();
					this._context = value;
					this.SendPropertyChanged("context");
					this.OncontextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_url", DbType="NVarChar(250)")]
		public string url
		{
			get
			{
				return this._url;
			}
			set
			{
				if ((this._url != value))
				{
					this.OnurlChanging(value);
					this.SendPropertyChanging();
					this._url = value;
					this.SendPropertyChanged("url");
					this.OnurlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_inxml", DbType="Xml", CanBeNull=true, UpdateCheck=UpdateCheck.Never)]
		public System.Xml.Linq.XDocument inxml
		{
			get
			{
				return this._inxml;
			}
			set
			{
				if ((this._inxml != value))
				{
					this.OninxmlChanging(value);
					this.SendPropertyChanging();
					this._inxml = value;
					this.SendPropertyChanged("inxml");
					this.OninxmlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_outxml", DbType="Xml", CanBeNull=true, UpdateCheck=UpdateCheck.Never)]
		public System.Xml.Linq.XDocument outxml
		{
			get
			{
				return this._outxml;
			}
			set
			{
				if ((this._outxml != value))
				{
					this.OnoutxmlChanging(value);
					this.SendPropertyChanging();
					this._outxml = value;
					this.SendPropertyChanged("outxml");
					this.OnoutxmlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_createdOn", DbType="DateTime NOT NULL", IsDbGenerated=true)]
		public System.DateTime createdOn
		{
			get
			{
				return this._createdOn;
			}
			set
			{
				if ((this._createdOn != value))
				{
					this.OncreatedOnChanging(value);
					this.SendPropertyChanging();
					this._createdOn = value;
					this.SendPropertyChanged("createdOn");
					this.OncreatedOnChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	public partial class GetSegmentDaysResult
	{
		
		private int _id;
		
		private System.Nullable<int> _Days;
		
		public GetSegmentDaysResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL")]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this._id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Days", DbType="Int")]
		public System.Nullable<int> Days
		{
			get
			{
				return this._Days;
			}
			set
			{
				if ((this._Days != value))
				{
					this._Days = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
